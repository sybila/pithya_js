{"version":3,"sources":["webpack:///static/js/app.1131a9f313620402904f.js","webpack:///./src/lib/createInputsModel.js","webpack:///./src/lib/programs/updatePositionProgram.js","webpack:///./src/lib/shaderGraph/BaseShaderNode.js","webpack:///./src/lib/programs/colorModes.js","webpack:///./src/lib/editor/getParsedVectorFieldFunction.js","webpack:///./src/lib/programs/audioProgram.js","webpack:///./src/lib/utils/request.js","webpack:///./src/lib/gl-utils.js","webpack:///./src/lib/shaderGraph/UserDefinedVelocityFunction.js","webpack:///./src/lib/utils/floatPacking.js","webpack:///./src/lib/programs/inputs/imageInput.js","webpack:///./src/lib/scene.js","webpack:///./src/lib/shaderGraph/parts/simplex-noise.js","webpack:///./src/lib/appState.js","webpack:///./src/lib/shaderGraph/updatePositionGraph.js","webpack:///./src/lib/shaderGraph/renderNodes.js","webpack:///./src/lib/utils/makeStatCounter.js","webpack:///./src/lib/shaderGraph/parts/decodeFloatRGBA.js","webpack:///./src/lib/shaderGraph/TexturePositionNode.js","webpack:///./src/lib/nativeMain.js","webpack:///./src/lib/shaderGraph/parts/encodeFloatRGBA.js","webpack:///./src/lib/shaderGraph/DrawParticleGraph.js","webpack:///./src/lib/shaderGraph/customInput.js","webpack:///./src/lib/shaderGraph/shaderBasedColor.js","webpack:///./src/lib/editor/vectorFieldState.js","webpack:///./src/lib/wrapVectorField.js","webpack:///./src/lib/bus.js","webpack:///./src/lib/programs/inputs/loadTexture.js","webpack:///./src/lib/programs/colorProgram.js","webpack:///./src/lib/programs/screenProgram.js","webpack:///./src/lib/shaderGraph/RungeKuttaIntegrator.js","webpack:///./src/lib/editor/fetchGLSL.js","webpack:///./src/lib/programs/inputs/inputCollection.js","webpack:///./src/lib/wglPanZoom.js","webpack:///./src/lib/utils/cursorUpdater.js","webpack:///./src/lib/programs/drawParticlesProgram.js","webpack:///./src/lib/utils/textureCollection.js","webpack:///./src/lib/config.js","webpack:///./src/lib/editor/pragmaParser.js","webpack:///./src/lib/shaderGraph/PanzoomTransform.js"],"names":["webpackJsonp","/eR5","module","__webpack_exports__","__webpack_require__","createInputsModel","ctx","getInputs","inputs","addInput","push","createInputElementViewModel","i","__WEBPACK_IMPORTED_MODULE_0__programs_inputs_inputCollection__","updateBinding","pendingUpdate","clearTimeout","setTimeout","setBinding","input","error","binding","__WEBPACK_IMPORTED_MODULE_2__programs_inputs_imageInput__","link","done","console","log","err","bindInput","name","3xg8","updatePositionProgram","updateCode","vectorField","particlePositionShaderCodeBuilder","setCustomVectorField","fragment","getFragmentShader","vertex","getVertexShader","newProgram","__WEBPACK_IMPORTED_MODULE_0__gl_utils__","createProgram","gl","updateProgram","unload","colorMode","__WEBPACK_IMPORTED_MODULE_2__colorModes__","VELOCITY","readVelocity","requestSpeedUpdate","updateParticlesCount","x","y","particleStateResolution","dimensions","particleState","readTextures","dispose","__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__","writeTextures","prepareToDraw","program","UNIFORM","uniform4f","u_particle_color","uniformParticleColor","r","g","b","a","setColorMinMax","bindTextures","updateParticlesPositions","useProgram","bindAttribute","quadBuffer","a_pos","updateBindings","audioTexture","bindTexture","uniform1i","uniform1f","u_rand_seed","frameSeed","u_h","integrationTimeStep","frame","cursor","clickX","clickY","hoverX","hoverY","bbox","uniform2f","u_min","minX","minY","u_max","maxX","maxY","u_drop_rate","dropProbability","length","writeInfo","get","u_out_coordinate","bindFramebuffer","framebuffer","texture","viewport","drawArrays","TRIANGLES","pendingVectorLines","processVectorLinesRequest","temp","putVectorLinesRequestIntoQueue","request","resolutionOfParticlesInRequest","resolution","numParticles","texturesForRead","texturesForWrite","velocity_x","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","velocity_y","xStats","__WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__","yStats","decoded_velocity_x","Float32Array","decoded_velocity_y","idx","vx","readFloat","vy","add","vectorLineInfo","__WEBPACK_IMPORTED_MODULE_7__bus___default","fire","__WEBPACK_IMPORTED_MODULE_3__colorProgram__","on","buffer","offset","__WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__","__WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph__","__WEBPACK_IMPORTED_MODULE_7__bus__","n","4KA4","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default","BaseShaderNode","this","key","value","6c6E","ANGLE","85ps","getParsedVectorFieldFunction","vectorFieldCode","__WEBPACK_IMPORTED_MODULE_1__pragmaParser__","then","pragmaParseResult","getCode","parserResult","glslParser","check","globals","vectorFieldGlobals","code","errorCount","parserError","diag","diagnostics","firstError","range","lineColumn","source","_lineOffsets","line","contents","substr","column","substring","start","end","prefix","diagText","text","whitespace","errorDetail","isFloatError","indexOf","Array","join","__WEBPACK_IMPORTED_MODULE_0__bus__","__WEBPACK_IMPORTED_MODULE_0__bus___default","e","bind","catch","oe","94y8","audioProgram","off","updateAudioBuffer","deleteTexture","updateTextures","audioDirty","TEXTURE_2D","texImage2D","audioBuffer","newBuffer","audioWidth","__WEBPACK_IMPORTED_MODULE_1__gl_utils__","createTexture","NEAREST","C8nW","url","options","download","resolve","reject","updateProgress","lengthComputable","progress","loaded","total","percent","transferComplete","req","status","response","responseType","JSON","parse","transferFailed","transferCanceled","XMLHttpRequest","addEventListener","open","send","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__","Ddjs","unit","activeTexture","TEXTURE0","createBuffer","data","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","filter","width","height","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","attribute","numComponents","enableVertexAttribArray","vertexAttribPointer","FLOAT","vertexSource","fragmentSource","deleteProgram","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","Error","getProgramInfoLog","wrapper","numAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","numUniforms","ACTIVE_UNIFORMS","uniform","getActiveUniform","getUniformLocation","type","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","DuZ1","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default","__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__","__WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__","__WEBPACK_IMPORTED_MODULE_7__customInput__","UserDefinedVelocityFunction","_BaseShaderNode","_this","__proto__","call","newUpdateCode","FaU1","encodeFloatRGBA","val","out","writeOffset","mag","Math","abs","exponent","floor","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2___default","exp2","mantissa","c","d","decodeFloatRGBA","A","B","C","D","exp","LN2","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2__","I6d+","createImageInputBinding","callbacks","handleError","setTexture","loadedTexture","inputIndex","realIndex","FREE_TEXTURE_UNIT","__WEBPACK_IMPORTED_MODULE_0__loadTexture__","__WEBPACK_IMPORTED_MODULE_2__config__","JHsM","initScene","moveBoundingBox","changes","parsedBoundingBox","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default","assignIfPossible","undefined","heightChange","cx","prevWidth","applyBoundingBox","change","newBoundingBox","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float___default","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default","startRecord","capturer","currentCapturer","stopRecord","setColorMode","mode","parseInt","__WEBPACK_IMPORTED_MODULE_6__appState__","getColorMode","drawProgram","updateColorMode","getIntegrationTimeStep","setIntegrationTimeStep","f","parseFloat","__WEBPACK_IMPORTED_MODULE_5__bus___default","setPaused","shouldPause","isPaused","nextFrame","setFadeOutSpeed","fadeOpacity","setFadeout","getFadeOutSpeed","getFadeout","getParticlesCount","getParticleCount","setParticlesCount","newParticleCount","particleCount","setParticleCount","setDropProbability","getDropProbability","onResize","setWidthHeight","window","innerWidth","innerHeight","screenProgram","updateScreenTextures","updateBoundingBox","currentPanZoomTransform","w","h","dx","max","dy","canvasRect","top","left","canvas","style","stop","panzoom","removeEventListener","cursorUpdater","vectorFieldEditorState","lastAnimationFrame","requestAnimationFrame","draw","cancelAnimationFrame","drawScreen","capture","fadeOutLastFrame","drawParticles","renderCurrentScreen","ceil","sqrt","restoreBBox","savedBBox","getBBox","sX","PI","E","sY","tX","tY","w2","h2","showRectangle","right","bottom","transform","clientX","scale","clientY","boundingBoxUpdated","p","round","saveBBox","resetBoundingBox","boundingBox","moveBy","disable","DEPTH_TEST","STENCIL_TEST","createFramebuffer","__WEBPACK_IMPORTED_MODULE_3__gl_utils__","screenTextureUnit","inputsModel","__WEBPACK_IMPORTED_MODULE_12__createInputsModel__","__WEBPACK_IMPORTED_MODULE_8__programs_screenProgram__","__WEBPACK_IMPORTED_MODULE_9__programs_drawParticlesProgram__","__WEBPACK_IMPORTED_MODULE_10__utils_cursorUpdater__","__WEBPACK_IMPORTED_MODULE_11__editor_vectorFieldState__","api","getCanvasRect","getBoundingBox","__WEBPACK_IMPORTED_MODULE_4_panzoom___default","realPinch","zoomSpeed","controller","__WEBPACK_IMPORTED_MODULE_7__wglPanZoom__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__","__WEBPACK_IMPORTED_MODULE_4_panzoom__","__WEBPACK_IMPORTED_MODULE_5__bus__","JjDM","NEgR","qs","defined","defaults","set","cm","currentState","fadeout","fo","pc","timeStep","dt","clamp","dp","cy","immediate","arguments","pendingSave","saveReally","vfCode","oldCode","__WEBPACK_IMPORTED_MODULE_4__wrapVectorField__","defaultVectorField","getDefaultCode","saveCode","vf","number","min","__WEBPACK_IMPORTED_MODULE_1_query_state__","__WEBPACK_IMPORTED_MODULE_1_query_state___default","__WEBPACK_IMPORTED_MODULE_2__bus__","__WEBPACK_IMPORTED_MODULE_2__bus___default","__WEBPACK_IMPORTED_MODULE_3__programs_colorModes__","useSearch","rewriteHashToSearch","wrapVectorField","settingsPanel","collapsed","getQS","onChange","scene","Qv35","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default","__WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__","__WEBPACK_IMPORTED_MODULE_7__renderNodes__","__WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__","__WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__","__WEBPACK_IMPORTED_MODULE_10__RungeKuttaIntegrator__","UpdatePositionGraph","readStoredPosition","udfVelocity","integratePositions","dropParticles","RandomParticleDropper","writeComputedPosition","panZoomDecode","decode","panZoomEncode","velocityCode","setNewUpdateCode","nodes","getMainBody","apply","S+/9","renderNodes","addToCode","forEach","node","getDefines","getFunctions","V39N","makeStatCounter","reset","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","getMin","getMax","XFig","XMEc","__WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__","__WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__","TexturePosition","isDecode","YJWA","CCapture","ffmpegScriptLoaded","ffmpegServer","document","createElement","setAttribute","onload","head","appendChild","format","framerate","verbose","extension","codec","ffmpegArguments","isRecording","__WEBPACK_IMPORTED_MODULE_1__bus___default","FFMpegServer","save","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0__scene__","__WEBPACK_IMPORTED_MODULE_1__bus__","getElementById","ctxOptions","antialiasing","getContext","webGLEnabled","a8s+","aZPT","addMethods","producer","array","getMethods","addMain","getMain","uniformColor","getVariables","textureBasedPosition","__WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__","__WEBPACK_IMPORTED_MODULE_3__shaderBasedColor__","__WEBPACK_IMPORTED_MODULE_4__programs_colorModes__","DrawParticleGraph","isUniformColor","variables","mainBody","decodePositions","colorParts","methods","main","bvb0","getInputUniforms","c5NW","shaderBasedColor","udf","integrate","__WEBPACK_IMPORTED_MODULE_2__programs_colorModes__","setParticleColor","__WEBPACK_IMPORTED_MODULE_0__UserDefinedVelocityFunction__","__WEBPACK_IMPORTED_MODULE_1__RungeKuttaIntegrator__","c5hq","createVectorFieldEditorState","parseCode","__WEBPACK_IMPORTED_MODULE_1__appState__","setCode","currentVectorFieldCode","trySetNewCode","result","cancelled","updateErrorInfo","customCode","__WEBPACK_IMPORTED_MODULE_2__getParsedVectorFieldFunction__","currentResult","currentVectorFieldVersion","capturedVersion","message","persistedCode","cj2E","field","eBcr","exports","eventify","egvE","loadTexture","reportError","rejectTexture","internalFormat","srcFormat","srcType","image","isPowerOf2","generateMipmap","LINEAR","resolveTexture","Image","crossOrigin","onerror","src","gIFv","colorProgram","disposeTextures","velocity_x_texture","velocity_y_texture","pendingSpeedUpdate","speedNeedsUpdate","u_velocity_range","velocityCounter","OUT_V_X","OUT_V_Y","updateMinMax","v","__WEBPACK_IMPORTED_MODULE_3__utils_makeStatCounter__","__WEBPACK_IMPORTED_MODULE_2__utils_floatPacking__","h62Y","makeScreenProgram","screenTexture","lastRenderedBoundingBox","boundBoxTextureTransform","drawTexture","backgroundTexture","NO_TRANSFORM","saveLastBbox","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","clearColor","backgroundColor","clear","COLOR_BUFFER_BIT","emptyPixels","opacity","textureTransform","u_screen","u_opacity_border","u_opacity","uniform3f","u_transform","i69e","RungeKuttaIntegrator","iw7m","fetchGLSL","trimmed","trim","cachedResponse","loadedLinks","__WEBPACK_IMPORTED_MODULE_2__utils_request__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map___default","n67P","createInputCollection","inputBinding","prevBinding","boundInputs","currentProgram","updateInputBinding","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map___default","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map__","p0IO","wglPanZoom","updateBoundingBoxCallback","lastDx","lastDy","lastScale","applyTransform","newTransform","getOwner","p2DF","p9aJ","createCursorUpdater","onMouseMove","onMouseClick","onTouchStart","onTouchMove","firstTouch","touches","setClick","setHover","getSceneXFromClientX","getSceneYFromClientY","pKWO","drawParticlesProgram","initDrawProgram","drawGraph","__WEBPACK_IMPORTED_MODULE_1__shaderGraph_DrawParticleGraph__","currentVectorField","random","particleIndices","particleStateX","particleStateY","__WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__","particleIndexBuffer","deleteBuffer","a_index","u_particles_res","POINTS","__WEBPACK_IMPORTED_MODULE_2__updatePositionProgram__","__WEBPACK_IMPORTED_MODULE_4__config__","isAudioEnabled","__WEBPACK_IMPORTED_MODULE_5__audioProgram__","pXNl","textureCollection","assignProgramUniforms","textures","tInfo","index","map","rvz5","__WEBPACK_IMPORTED_MODULE_0__appState__","defaultConfig","vectorLinesEnabled","showBindings","svlg","makePragmaParser","nullCode","parsedLines","processLineByLine","pending","all","outputLines","processPragma","pragmaInclude","include","insertIndex","currentIndex","__WEBPACK_IMPORTED_MODULE_1__fetchGLSL_js__","lines","split","vhRe","PanzoomTransform","config","srcPosName","posName"],"mappings":"AAAAA,cAAc,IAERC,OACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCAe,SAASC,GAAkBC,GAWxC,QAASC,KACP,MAAOC,GAGT,QAASC,KACPD,EAAOE,KAAKC,EAA4BL,IAf1CA,EAAIE,OAASJ,EAAAQ,EAAAC,EAAA,IACb,IAAIL,KAOJ,QAJED,YACAE,YAeJ,QAASE,GAA4BL,GAYnC,QAASQ,KACHC,IACFC,aAAaD,GACbA,EAAgB,MAGlBA,EAAgBE,WAAWC,EAAY,KAGzC,QAASA,KACPC,EAAMC,MAAQ,KACdL,EAAgB,IAChB,IAAIM,GAAUjB,EAAAQ,EAAAU,EAAA,GAAwBhB,EAAKa,EAAMI,MAC/CC,KADqD,WAGnDC,QAAQC,IAAI,OAEdN,MALqD,SAK/CO,GAEJR,EAAMC,MAAQO,IAGlBrB,GAAIE,OAAOoB,UAAU,EAAGP,GAjC1B,GAAIN,GAAgB,KAEhBI,GACFI,KAAM,GACNH,MAAO,KACPS,KAAM,SACNf,gBAGF,OAAOK,GD9BwBhB,EAAuB,EAAIE,CACvC,IAAIQ,GAAiET,EAAoB,QAErFkB,GAD4DlB,EAAoB,QACpBA,EAAoB,UAkEnG0B,OACA,SAAU5B,EAAQC,EAAqBC,GAE7C,YEnEe,SAAS2B,GAAsBzB,GAuB5C,QAAS0B,GAAWC,GAClBC,EAAkCC,qBAAqBF,EACvD,IAAIG,GAAWF,EAAkCG,oBAC7CC,EAASJ,EAAkCK,kBAE3CC,EAAaC,EAAA,EAAKC,cAAcC,EAAIL,EAAQF,EAE5CQ,IAAeA,EAAcC,SACjCD,EAAgBJ,EAEZlC,EAAIwC,YAAcC,EAAA,EAAUC,UAAUC,EAAaC,qBAGzD,QAASC,GAAqBC,EAAGC,GAC/BC,EAA0BhD,EAAIgD,uBAE9B,IAAIC,KACF1B,KAAM,IACN2B,cAAeJ,IAEfvB,KAAM,IACN2B,cAAeH,GAGbI,IAAcA,EAAaC,UAC/BD,EAAerD,EAAAQ,EAAA+C,EAAA,GAAkBhB,EAAIY,EAAYD,GAE7CM,GAAeA,EAAcF,UACjCE,EAAgBxD,EAAAQ,EAAA+C,EAAA,GAAkBhB,EAAIY,EAAYD,GAElDL,EAAaE,uBAGf,QAASU,GAAcC,GACrB,GAAIhB,GAAYxC,EAAIwC,SAChBA,KAAcC,EAAA,EAAUgB,QAASpB,EAAGqB,UAAUF,EAAQG,iBAAkBC,EAAqBC,EAAGD,EAAqBE,EAAGF,EAAqBG,EAAGH,EAAqBI,GAChKxB,IAAcC,EAAA,EAAUC,UAAUC,EAAasB,eAAeT,GAEvEL,EAAae,aAAa7B,EAAImB,GAGhC,QAASW,KACP,GAAIX,GAAUlB,CACdD,GAAG+B,WAAWZ,EAAQA,SAEtBrB,EAAA,EAAKkC,cAAchC,EAAIrC,EAAIsE,WAAYd,EAAQe,MAAO,GAEtDvE,EAAIE,OAAOsE,eAAehB,GAGtBxD,EAAIyE,eACNtC,EAAA,EAAKuC,YAAYrC,EAAIrC,EAAIyE,aAAc,GACvCpC,EAAGsC,UAAUnB,EAAA,QAAoB,IAGnCL,EAAae,aAAa7B,EAAImB,GAE9BnB,EAAGuC,UAAUpB,EAAQqB,YAAa7E,EAAI8E,WACtCzC,EAAGuC,UAAUpB,EAAQuB,IAAK/E,EAAIgF,qBAC9B3C,EAAGuC,UAAUpB,EAAQyB,MAAOjF,EAAIiF,MAChC,IAAIC,GAASlF,EAAIkF,MACjB7C,GAAGqB,UAAUF,EAAQ0B,OAAQA,EAAOC,OAAQD,EAAOE,OAAQF,EAAOG,OAAQH,EAAOI,OAEjF,IAAIC,GAAOvF,EAAIuF,IACflD,GAAGmD,UAAUhC,EAAQiC,MAAOF,EAAKG,KAAMH,EAAKI,MAC5CtD,EAAGmD,UAAUhC,EAAQoC,MAAOL,EAAKM,KAAMN,EAAKO,MAE5CzD,EAAGuC,UAAUpB,EAAQuC,YAAa/F,EAAIgG,gBAGtC,KAAI,GAAI1F,GAAI,EAAGA,EAAIgD,EAAc2C,SAAU3F,EAAG,CAC5C,GAAI4F,GAAY5C,EAAc6C,IAAI7F,EAClC+B,GAAGsC,UAAUnB,EAAQ4C,iBAAkB9F,GACvC6B,EAAA,EAAKkE,gBAAgBhE,EAAIrC,EAAIsG,YAAaJ,EAAUK,SACpDlE,EAAGmE,SAAS,EAAG,EAAGxD,EAAyBA,GAC3CX,EAAGoE,WAAWpE,EAAGqE,UAAW,EAAG,GAK7B1G,EAAIwC,YAAcC,EAAA,EAAUC,UAC9BC,EAAawB,yBAAyBX,GAGpCmD,IACFC,EAA0BpD,GAC1BmD,EAAqB,KAIvB,IAAIE,GAAO1D,CACXA,GAAeG,EACfA,EAAgBuD,EAGlB,QAASC,GAA+BC,GACtCJ,EAAqBI,EAGvB,QAASH,GAA0BpD,GAEjC,GAAIP,KACF1B,KAAM,IACN2B,cAAeyD,EAAmB7D,IAElCvB,KAAM,IACN2B,cAAeyD,EAAmB5D,IAIhCiE,EAAiCL,EAAmBM,WACpDC,EAAeF,EAAiCA,EAEhDG,EAAkBrH,EAAAQ,EAAA+C,EAAA,GAAkBhB,EAAIY,EAAY+D,GACpDI,EAAmBtH,EAAAQ,EAAA+C,EAAA,GAAkBhB,EAAIY,EAAY+D,EAEzDG,GAAgBjD,aAAa7B,EAAImB,EAGjC,IAAI0C,GAAYkB,EAAiBjB,IAAI,EACrC9D,GAAGsC,UAAUnB,EAAQ4C,iBAAkB,GAEvCjE,EAAA,EAAKkE,gBAAgBhE,EAAIrC,EAAIsG,YAAaJ,EAAUK,SACpDlE,EAAGmE,SAAS,EAAG,EAAGQ,EAAgCA,GAClD3E,EAAGoE,WAAWpE,EAAGqE,UAAW,EAAG,EAE/B,IAAIW,GAAa,GAAIC,YAA0B,EAAfJ,EAChC7E,GAAGkF,WAAW,EAAG,EAAGP,EAAgCA,EAAgC3E,EAAGmF,KAAMnF,EAAGoF,cAAeJ,GAE/GhF,EAAGsC,UAAUnB,EAAQ4C,iBAAkB,GACvCF,EAAYkB,EAAiBjB,IAAI,GACjChE,EAAA,EAAKkE,gBAAgBhE,EAAIrC,EAAIsG,YAAaJ,EAAUK,SACpDlE,EAAGmE,SAAS,EAAG,EAAGQ,EAAgCA,GAClD3E,EAAGoE,WAAWpE,EAAGqE,UAAW,EAAG,EAE/B,IAAIgB,GAAa,GAAIJ,YAA0B,EAAfJ,EAChC7E,GAAGkF,WAAW,EAAG,EAAGP,EAAgCA,EAAgC3E,EAAGmF,KAAMnF,EAAGoF,cAAeC,GAE/GN,EAAiBhE,UACjB+D,EAAgB/D,SAOhB,KAAI,GALAuE,GAAS7H,EAAAQ,EAAAsH,EAAA,KACTC,EAAS/H,EAAAQ,EAAAsH,EAAA,KAETE,EAAqB,GAAIC,cAAab,GACtCc,EAAqB,GAAID,cAAab,GAClC5G,EAAI,EAAGA,EAAIoH,EAAWzB,OAAQ3F,GAAG,EAAG,CAC1C,GAAI2H,GAAM3H,EAAE,EACR4H,EAAKC,EAAUd,EAAY/G,GAC3B8H,EAAKD,EAAUT,EAAYpH,EAC/BwH,GAAmBG,GAAOC,EAC1BF,EAAmBC,GAAOG,EAC1BT,EAAOU,IAAIH,GACXL,EAAOQ,IAAID,GAGb,GAAIE,IACFX,SACAE,SACAC,qBACAE,qBACAf,WAAYD,EAGduB,GAAAvE,EAAIwE,KAAK,oBAAqBF,GA1LhC,GACInF,GAAcG,EACdN,EACAV,EAOAqE,EAVAtE,EAAKrC,EAAIqC,GAITuB,GAAyBC,EAAG,GAAG,IAAKC,EAAG,IAAI,IAAKC,EAAG,IAAI,IAAKC,EAAG,GAC/DrB,EAAe7C,EAAAQ,EAAAmI,EAAA,GAAgBzI,EAUnC,OAFAuI,GAAAvE,EAAI0E,GAAG,uBAAwB5B,IAG7BpF,aACAyC,2BACAtB,uBACAU,iBA2KJ,QAAS4E,GAAUQ,EAAQC,GACvB,MAAO9I,GAAAQ,EAAAuI,EAAA,GACLF,EAAOC,EAAS,GAChBD,EAAOC,EAAS,GAChBD,EAAOC,EAAS,GAChBD,EAAOC,EAAS,IFhIW/I,EAAuB,EAAI4B,CACvC,IAAIU,GAA0CrC,EAAoB,QAC9DgJ,EAAiEhJ,EAAoB,QACrF2C,EAA4C3C,EAAoB,QAChE2I,EAA8C3I,EAAoB,QAClEuD,EAAyDvD,EAAoB,QAC7E8H,EAAuD9H,EAAoB,QAC3E+I,EAAoD/I,EAAoB,QACxEiJ,EAAqCjJ,EAAoB,QACzDyI,EAA6CzI,EAAoBkJ,EAAED,GE/EtFnH,EAAoC,GAAIkH,GAAA,GF+RxCG,OACA,SAAUrJ,EAAQC,EAAqBC,GAE7C,YACqB,IAAIoJ,GAAqEpJ,EAAoB,QACzFqJ,EAA6ErJ,EAAoBkJ,EAAEE,GACnGE,EAAkEtJ,EAAoB,QACtFuJ,EAA0EvJ,EAAoBkJ,EAAEI,GG/SpGE,EHmTA,WGlTnB,QAAAA,KAAcH,IAAAI,KAAAD,GHwUd,MAjBAD,KAA0EC,IACxEE,IAAK,aACLC,MAAO,WGxTM,MAAO,MH4TpBD,IAAK,eACLC,MAAO,WG5TQ,MAAO,MHgUtBD,IAAK,cACLC,MAAO,WGhUO,MAAO,OHqUhBH,IAGoBzJ,GAAuB,EAAI,GAIlD6J,OACA,SAAU9J,EAAQC,EAAqBC,GAE7C,YI9UAD,GAAA,GAIE4D,QAAS,EAKTf,SAAU,EAKViH,MAAO,IJyVHC,OACA,SAAUhK,EAAQC,EAAqBC,GAE7C,YK9Te,SAAS+J,GAA6BC,GAEnD,MAAOhK,GAAAQ,EAAAyJ,EAAA,GAAYD,GAAiBE,KAAK,SAAAC,GACvC,GAAIA,EAAkBnJ,MACpB,MAAOmJ,EAGTH,GAAkBG,EAAkBC,SAEpC,IAAIC,GAAeC,EAAWC,MAAMP,GAAmBQ,QAASC,GAKhE,OAJAJ,GAAaK,KAAOV,EAEhBK,EAAa/I,IAAIqJ,aAAYN,EAAarJ,MAAQ4J,EAAYP,EAAa/I,MAExE+I,IAIX,QAASO,GAAYtJ,GACnB,GAAIuJ,GAAOvJ,EAAIwJ,YAAY,GAEvBC,EAAaF,EAAKG,MAClBC,EAAaF,EAAWE,aACxBC,EAASH,EAAWG,OACpBpC,EAASoC,EAAOC,aAAaF,EAAWG,MACxCA,EAAOF,EAAOG,SAASC,OAAOxC,EAASmC,EAAWM,OACtDH,IAAQF,EAAOG,SAASG,UAAUT,EAAWU,MAAOV,EAAWW,IAC/D,IAAIC,GAAS,QAAUV,EAAWG,KAAO,KACrCQ,EAAWf,EAAKgB,IACpB,QACE7K,MACE2K,EAASP,EAAO,KAChBU,EAAWH,EAAOxF,QAAU2F,EAAWb,EAAWM,QAAU,IAC9DQ,YAAaH,EACbI,aAAcA,EAAaJ,IAI/B,QAASI,GAAaJ,GACpB,MAAOA,GAASK,QAAQ,UAAY,GAClCL,EAASK,QAAQ,YAAe,EAGpC,QAASH,GAAW3F,GAClB,MAAO,IAAI+F,OAAM/F,EAAS,GAAGgG,KAAK,KLmRHpM,EAAuB,EAAIgK,CACvC,IAAIqC,GAAqCpM,EAAoB,QACzDqM,EAA6CrM,EAAoBkJ,EAAEkD,GKlX5FnC,EAAAjK,EAAA,QAUIsK,GACFC,MADe,SACTG,GACJ,OACEA,OACApJ,KACEqJ,WAAY,KAQpB3K,GAAAsM,EAAA,GAAApC,KAAA,WAEEI,EAAatK,EAAQ,QAGrBqM,EAAAnI,EAAIwE,KAAK,sBALX6D,KAAA,KAAAvM,IAAAwM,MAAAxM,EAAAyM,GAQA,IAAIhC,iML0aEiC,OACA,SAAU5M,EAAQC,EAAqBC,GAE7C,YMvcA,SAAS2M,GAAazM,GAgBpB,QAASoD,KACP+I,EAAAnI,EAAI0I,IAAI,QAASC,GACjBtK,EAAGuK,cAAcnI,GAGnB,QAASoI,KACP,GAAKC,EAAL,CACAA,GAAa,CAIbzK,GAAGqC,YAAYrC,EAAG0K,WAAYtI,GAC9BpC,EAAG2K,WAAW3K,EAAG0K,WAAY,EAAG1K,EAAGmF,KAFvB,EAAY,EAEgC,EAAGnF,EAAGmF,KAAMnF,EAAGoF,cAAewF,GACtF5K,EAAGqC,YAAYrC,EAAG0K,WAAY,OAGhC,QAASJ,GAAkBO,GACzBD,EAAcC,EACdJ,GAAa,EAjCf,GAAIzK,GAAKrC,EAAIqC,GAGT4K,EAAc,GAAI3F,YAAW6F,KAC7B1I,EAAe2I,EAAA,EAAOC,cAAchL,EAAIA,EAAGiL,QAASL,EAFvC,EAAiB,GAG9BH,GAAa,CAKjB,OAJA9M,GAAIyE,aAAeA,EAEnB0H,EAAAnI,EAAI0E,GAAG,QAASiE,IAGdE,iBACAzJ,WN2biB,GAAI8I,GAAqCpM,EAAoB,QACzDqM,EAA6CrM,EAAoBkJ,EAAEkD,GACnEkB,EAA0CtN,EAAoB,OM5cvFD,GAAA,KN4fM0N,KACA,SAAU3N,EAAQC,EAAqBC,GAE7C,YO7fe,SAASiH,GAAQyG,EAAKC,GAKnC,QAASC,GAASC,EAASC,GAiBzB,QAASC,GAAezB,GAClBA,EAAE0B,kBACJL,EAAQM,UACNC,OAAQ5B,EAAE4B,OACVC,MAAO7B,EAAE6B,MACTC,QAAS9B,EAAE4B,OAAS5B,EAAE6B,QAK5B,QAASE,KACP,GAAmB,MAAfC,EAAIC,OAEN,WADAT,6BAAiCQ,EAAIC,OAArC,iBAA4Db,EAG9D,IAAIc,GAAWF,EAAIE,QAEU,UAAzBb,EAAQc,cAA+C,gBAAbD,KAE5CA,EAAWE,KAAKC,MAAMH,IAGxBX,EAAQW,GAGV,QAASI,KACPd,wBAA6BJ,GAG/B,QAASmB,KACPf,2BAAgCJ,GA9ClC,GAAIY,GAAM,GAAIQ,eAEkB,mBAArBnB,GAAQM,UACjBK,EAAIS,iBAAiB,WAAYhB,GAAgB,GAGnDO,EAAIS,iBAAiB,OAAQV,GAAkB,GAC/CC,EAAIS,iBAAiB,QAASH,GAAgB,GAC9CN,EAAIS,iBAAiB,QAASF,GAAkB,GAEhDP,EAAIU,KAAK,MAAOtB,GACZC,EAAQc,eACVH,EAAIG,aAAed,EAAQc,cAE7BH,EAAIW,KAAK,MAjBX,MAFKtB,KAASA,MAEP,GAAAuB,GAAAhL,EAAY0J,GP2fY7N,EAAuB,EAAIkH,CACvC,IAAIkI,GAA8DnP,EAAoB,QAClFkP,EAAsElP,EAAoBkJ,EAAEiG,IAkE/GC,KACA,SAAUtP,EAAQC,EAAqBC,GAE7C,YQvjBA,SAAS4E,GAAYrC,EAAIkE,EAAS4I,GAChC9M,EAAG+M,cAAc/M,EAAGgN,SAAWF,GAC/B9M,EAAGqC,YAAYrC,EAAG0K,WAAYxG,GAGhC,QAAS+I,GAAajN,EAAIkN,GACxB,GAAI5G,GAAStG,EAAGiN,cAGhB,OAFAjN,GAAGmN,WAAWnN,EAAGoN,aAAc9G,GAC/BtG,EAAGqN,WAAWrN,EAAGoN,aAAcF,EAAMlN,EAAGsN,aACjChH,EAGT,QAAS0E,GAAchL,EAAIuN,EAAQL,EAAMM,EAAOC,GAC9C,GAAIvJ,GAAUlE,EAAGgL,eAYjB,OAXAhL,GAAGqC,YAAYrC,EAAG0K,WAAYxG,GAC9BlE,EAAG0N,cAAc1N,EAAG0K,WAAY1K,EAAG2N,eAAgB3N,EAAG4N,eACtD5N,EAAG0N,cAAc1N,EAAG0K,WAAY1K,EAAG6N,eAAgB7N,EAAG4N,eACtD5N,EAAG0N,cAAc1N,EAAG0K,WAAY1K,EAAG8N,mBAAoBP,GACvDvN,EAAG0N,cAAc1N,EAAG0K,WAAY1K,EAAG+N,mBAAoBR,GACnDL,YAAgBjI,YAChBjF,EAAG2K,WAAW3K,EAAG0K,WAAY,EAAG1K,EAAGmF,KAAMqI,EAAOC,EAAQ,EAAGzN,EAAGmF,KAAMnF,EAAGoF,cAAe8H,GAEtFlN,EAAG2K,WAAW3K,EAAG0K,WAAY,EAAG1K,EAAGmF,KAAMnF,EAAGmF,KAAMnF,EAAGoF,cAAe8H,GAExElN,EAAGqC,YAAYrC,EAAG0K,WAAY,MACvBxG,EAGT,QAASF,GAAgBhE,EAAIiE,EAAaC,GACxClE,EAAGgE,gBAAgBhE,EAAGgO,YAAa/J,GAC/BC,GACAlE,EAAGiO,qBAAqBjO,EAAGgO,YAAahO,EAAGkO,kBAAmBlO,EAAG0K,WAAYxG,EAAS,GAI5F,QAASlC,GAAchC,EAAIsG,EAAQ6H,EAAWC,GAC5CpO,EAAGmN,WAAWnN,EAAGoN,aAAc9G,GAC/BtG,EAAGqO,wBAAwBF,GAC3BnO,EAAGsO,oBAAoBH,EAAWC,EAAepO,EAAGuO,OAAO,EAAO,EAAG,GAGvE,QAASxO,GAAcC,EAAIwO,EAAcC,GAiCvC,QAASvO,KACPF,EAAG0O,cAAcvN,GAjCnB,GAAIA,GAAUnB,EAAGD,gBAEb4O,EAAeC,EAAa5O,EAAIA,EAAG6O,cAAeL,GAClDM,EAAiBF,EAAa5O,EAAIA,EAAG+O,gBAAiBN,EAM1D,IAJAzO,EAAGgP,aAAa7N,EAASwN,GACzB3O,EAAGgP,aAAa7N,EAAS2N,GAEzB9O,EAAGiP,YAAY9N,IACVnB,EAAGkP,oBAAoB/N,EAASnB,EAAGmP,aACpC,KAAM,IAAIC,OAAMpP,EAAGqP,kBAAkBlO,GAGzC,IAMIlD,GANAqR,GACFnO,QAASA,EACTjB,UAGEqP,EAAgBvP,EAAGkP,oBAAoB/N,EAASnB,EAAGwP,kBAEvD,KAAKvR,EAAI,EAAGA,EAAIsR,EAAetR,IAAK,CAChC,GAAIkQ,GAAYnO,EAAGyP,gBAAgBtO,EAASlD,EAC5CqR,GAAQnB,EAAUjP,MAAQc,EAAG0P,kBAAkBvO,EAASgN,EAAUjP,MAEtE,GAAIyQ,GAAc3P,EAAGkP,oBAAoB/N,EAASnB,EAAG4P,gBACrD,KAAK3R,EAAI,EAAGA,EAAI0R,EAAa1R,IAAK,CAC9B,GAAI4R,GAAU7P,EAAG8P,iBAAiB3O,EAASlD,EAC3CqR,GAAQO,EAAQ3Q,MAAQc,EAAG+P,mBAAmB5O,EAAS0O,EAAQ3Q,MAGnE,MAAOoQ,GAOT,QAASV,GAAa5O,EAAIgQ,EAAMrH,GAC9B,GAAIsH,GAASjQ,EAAG4O,aAAaoB,EAI7B,IAHAhQ,EAAGkQ,aAAaD,EAAQtH,GAExB3I,EAAGmQ,cAAcF,IACZjQ,EAAGoQ,mBAAmBH,EAAQjQ,EAAGqQ,gBAClC,KAAM,IAAIjB,OAAMpP,EAAGsQ,iBAAiBL,GAGxC,OAAOA,GAjGTzS,EAAA,GACEwN,cAAeA,EACfhH,gBAAiBA,EACjBjE,cAAeA,EACfkN,aAAcA,EACdjL,cAAeA,EACfK,YAAaA,IR2qBTkO,KACA,SAAUhT,EAAQC,EAAqBC,GAE7C,YACqB,IAAI+S,GAA8E/S,EAAoB,QAClGgT,EAAsFhT,EAAoBkJ,EAAE6J,GAC5GE,EAAqEjT,EAAoB,QACzFkT,EAA6ElT,EAAoBkJ,EAAE+J,GACnGE,EAAkEnT,EAAoB,QACtFoT,EAA0EpT,EAAoBkJ,EAAEiK,GAChGE,EAAgFrT,EAAoB,QACpGsT,EAAwFtT,EAAoBkJ,EAAEmK,GAC9GE,EAA+DvT,EAAoB,QACnFwT,EAAuExT,EAAoBkJ,EAAEqK,GAC7FE,EAAgDzT,EAAoB,QACpE0T,EAAqD1T,EAAoB,QACzE2T,EAA6C3T,EAAoB,QSvsBrE4T,ETitBa,SAAUC,GShtB1C,QAAAD,GAAYhS,GAAYsR,IAAAzJ,KAAAmK,EAAA,IAAAE,GAAAR,IAAA7J,MAAAmK,EAAAG,WAAAf,IAAAY,IAAAI,KAAAvK,MAAA,OAEtBqK,GAAKlS,WAAaA,GAAc,GAFVkS,ET+uBxB,MA9BAN,KAAuEI,EAA6BC,GAWpGT,IAA0EQ,IACxElK,IAAK,mBACLC,MAAO,SSztBQsK,GACfxK,KAAK7H,WAAaqS,KT4tBlBvK,IAAK,aACLC,MAAO,WSztBP,mKAQF3J,EAAAQ,EAAAmT,EAAA,KARE,QT6tBAjK,IAAK,eACLC,MAAO,WS/sBP,WACF+J,EAAA,EADE,mdAoBFjK,KAAK7H,WAAa6H,KAAK7H,WAAa,kDApBlC,WTstBKgS,GShvBgDH,EAAA,ETmvB5B1T,GAAuB,EAAI,GAIlDmU,KACA,SAAUpU,EAAQC,EAAqBC,GAE7C,YUjvBO,SAASmU,GAAgBC,EAAKC,EAAKC,GACxC,GAAW,GAAPF,EAEF,MADAC,GAAIC,EAAc,GAAK,EAAGD,EAAIC,EAAc,GAAK,EAAGD,EAAIC,EAAc,GAAK,OAAGD,EAAIC,EAAc,GAAK,EAIvG,IAAIC,GAAMC,KAAKC,IAAIL,GACfM,EAAWF,KAAKG,MAAMC,IAAUL,GAEpCG,IAAaG,EAAKH,IAAaH,EAAM,EAAO,EAAI,EAChDG,GAAaG,EAAKH,GAAYH,EAAO,EAAI,CAEzC,IAAIO,EAEAA,GADAJ,EAAW,IACAH,EAAM,KAASM,EAAKH,EAAW,IAAQ,EAEvCH,EAAOM,EAAKH,GAAa,CAGxC,IAAIxQ,GAAIwQ,EAAW,GACnBI,IAAY,GACZ,IAAI7Q,GAAIuQ,KAAKG,MAAMG,EACnBA,IAAY7Q,EACZ6Q,GAAY,GACZ,IAAIC,GAAIP,KAAKG,MAAMG,EACnBA,IAAYC,EACZD,GAAY,GACZ,IAAIE,GAA2B,EAAvBR,KAAKG,MAAMG,IAAoBV,EAAM,EAAO,EAAG,EAEvDC,GAAIC,EAAc,GAAKpQ,EAAGmQ,EAAIC,EAAc,GAAKrQ,EAAGoQ,EAAIC,EAAc,GAAKS,EAAGV,EAAIC,EAAc,GAAKU,EAWhG,QAASC,GAAgBlR,EAAGC,EAAGC,EAAGC,GACvC,GAAIgR,GAAIV,KAAKG,MAAM5Q,EAAI,IACnBoR,EAAIX,KAAKG,MAAM3Q,EAAI,IACnBoR,EAAIZ,KAAKG,MAAM1Q,EAAI,IACnBoR,EAAIb,KAAKG,MAAMzQ,EAAI,IAEnBwQ,EAAWQ,EAAI,GAMnB,QALW,EAAOG,EAAI,EAAO,KACZH,EAAI,EAAO,EAAI,GACdC,EAAI,IACJC,EAAI,MACJZ,KAAKG,MAAMU,EAAI,GAAO,SACfR,EAAKH,GAGhC,QAASG,GAAKH,GAAY,MAAOF,MAAKc,IAAIZ,EAAWF,KAAKe,KV2rBzBxV,EAAuB,EAAIoU,EAC3BpU,EAAuB,EAAIkV,CACvC,IAAIO,GAAgExV,EAAoB,QACpF4U,EAAwE5U,EAAoBkJ,EAAEsM,IAyEjHC,OACA,SAAU3V,EAAQC,EAAqBC,GAE7C,YWr0Be,SAAS0V,GAAwBxV,EAAKwN,EAAKiI,GAYxD,QAASC,GAAYrU,GACfoU,GAAaA,EAAU3U,OACzB2U,EAAU3U,MAAMO,GAIpB,QAASsU,GAAWC,GAClBrP,EAAUqP,EACNH,GAAaA,EAAUvU,MACzBuU,EAAUvU,KAAKsM,GAInB,QAAShN,GAAcgD,EAASqS,GAC9B,GAAIC,GAAYD,EAAaE,CAC7B3I,GAAA,EAAQ1I,YAAY1E,EAAIqC,GAAIkE,EAASuP,GACrC9V,EAAIqC,GAAGsC,UAAUnB,UAAgBqS,GAAeC,GA3BlD,GAAIvP,GAAU,IAGd,OAFAzG,GAAAQ,EAAA0V,EAAA,GAAYhW,EAAIqC,GAAImL,GAAKxD,KAAK2L,GAAYrJ,MAAMoJ,IAG9ClV,gBACA4C,QAFK,WAIHpD,EAAIqC,GAAGuK,cAAcrG,KX8zBM1G,EAAuB,EAAI2V,CACvC,IAAIQ,GAA6ClW,EAAoB,QACjEsN,EAA0CtN,EAAoB,QWj1BvFmW,EAAAnW,EAAA,QAOMiW,EAAoBE,EAAA,EAAOF,mBXu3B3BG,KACA,SAAUtW,EAAQC,EAAqBC,GAE7C,YYt2Be,SAASqW,GAAU9T,GAiJhC,QAAS+T,GAAgBC,GACvB,GAAKA,EAAL,CACA,GAAIC,GAAoBC,OAAkBvW,EAAIuF,KAS9C,IAPAiR,EAAiBH,EAAS,OAAQC,GAClCE,EAAiBH,EAAS,OAAQC,GAClCE,EAAiBH,EAAS,OAAQC,GAClCE,EAAiBH,EAAS,OAAQC,OAIbG,KAAjBJ,EAAQ1Q,UAAuC8Q,KAAjBJ,EAAQvQ,KAAoB,CAE5D,GAAI4Q,GAAepC,KAAKC,IAAI+B,EAAkB3Q,KAAO2Q,EAAkBxQ,MAAMwO,KAAKC,IAAIvU,EAAIuF,KAAKI,KAAO3F,EAAIuF,KAAKO,MAC3G6Q,GAAM3W,EAAIuF,KAAKM,KAAO7F,EAAIuF,KAAKG,MAAM,EACrCkR,GAAa5W,EAAIuF,KAAKM,KAAO7F,EAAIuF,KAAKG,MAAM,CAChD4Q,GAAkB5Q,KAAOiR,EAAKC,EAAYF,EAC1CJ,EAAkBzQ,KAAO8Q,EAAKC,EAAYF,EAI5CG,EAAiBP,IAGnB,QAASE,GAAiBM,EAAQtN,EAAKuN,GACrC,GAAItN,GAAQuN,IAAkBF,EAAOtN,GACjCyN,KAAgBxN,KAClBsN,EAAevN,GAAOC,GAI1B,QAASyN,GAAYC,GACnBC,EAAkBD,EAGpB,QAASE,KACPD,EAAkB,KAGpB,QAASE,GAAaxU,GACpB,GAAIyU,GAAOC,SAAS1U,EAAG,GACvB2U,GAAA,EAASH,aAAaC,GACtBvX,EAAIwC,UAAYiV,EAAA,EAASC,eACzBC,EAAYC,gBAAgBL,GAG9B,QAASG,KACP,MAAOD,GAAA,EAASC,eAGlB,QAASG,KACP,MAAOJ,GAAA,EAASI,yBAGlB,QAASC,GAAuBhV,GAC9B,GAAIiV,GAAIC,WAAWlV,EACfmU,KAAgBc,KAClB/X,EAAIgF,oBAAsB+S,EAC1BN,EAAA,EAASK,uBAAuBC,GAChCE,EAAAjU,EAAIwE,KAAK,+BAAgCuP,IAI7C,QAASG,GAAUC,GACjBC,EAAWD,EACXE,IAIF,QAASC,GAAgBxV,GACvB,GAAIiV,GAAIC,WAAWlV,EACfmU,KAAgBc,KAClB/X,EAAIuY,YAAcR,EAClBN,EAAA,EAASe,WAAWT,IAIxB,QAASU,KACP,MAAOhB,GAAA,EAASiB,aAIlB,QAASC,KACP,MAAOlB,GAAA,EAASmB,mBAGlB,QAASC,GAAkBC,GACpB7B,IAAgB6B,IACjBA,IAAqBC,IACrBD,EAAmB,IAEvBjW,EAAqBiW,GAErBC,EAAgBD,EAChBrB,EAAA,EAASuB,iBAAiBF,KAI5B,QAASG,GAAmBnW,GAC1B,GAAIiV,GAAIC,WAAWlV,EACfmU,KAAgBc,KAElBN,EAAA,EAASwB,mBAAmBlB,GAC5B/X,EAAIgG,gBAAkB+R,GAI1B,QAASmB,KACP,MAAOzB,GAAA,EAASyB,qBAGlB,QAASC,KACPC,EAAeC,OAAOC,WAAYD,OAAOE,aAEzCC,EAAcC,uBAEdC,EAAkBC,GAGpB,QAASP,GAAeQ,EAAGC,GACzB,GAAIC,GAAKxF,KAAKyF,IAAQ,IAAJH,EAAU,IACxBI,EAAK1F,KAAKyF,IAAQ,IAAJF,EAAU,GAC5BI,GAAWpK,MAAQ+J,EAAI,EAAIE,EAC3BG,EAAWnK,OAAS+J,EAAI,EAAIG,EAC5BC,EAAWC,KAAQF,EACnBC,EAAWE,MAASL,CAGpB,IAAIM,GAAS/X,EAAG+X,MAChBA,GAAOvK,MAAQoK,EAAWpK,MAC1BuK,EAAOtK,OAASmK,EAAWnK,OAC3BsK,EAAOC,MAAMF,MAASL,EAAM,KAC5BM,EAAOC,MAAMH,KAAQF,EAAM,KAG7B,QAAS5W,KACLkX,IACAC,GAAQnX,UACRiW,OAAOmB,oBAAoB,SAAUrB,GAAU,GAC/CsB,EAAcrX,UACdsX,GAAuBtX,UAG3B,QAASiV,KACHsC,GAEAvC,IAEJuC,EAAqBC,sBAAsBC,IAG7C,QAASP,KACPQ,qBAAqBH,GACrBA,EAAqB,EAGvB,QAASE,KACPF,EAAqB,EAErBI,IAEI3D,GAAiBA,EAAgB4D,QAAQ3Y,EAAG+X,QAEhD/B,IAGF,QAAS0C,KACPvB,EAAcyB,mBACdtD,EAAYuD,gBACZ1B,EAAc2B,sBACdxD,EAAYxT,2BAGd,QAAStB,GAAqBqE,GAE5BlH,EAAIgD,wBAA0BsR,KAAK8G,KAAK9G,KAAK+G,KAAKnU,IAClDyQ,EAAY9U,uBAad,QAASyY,KACP,GAAIC,GAAY9D,EAAA,EAAS+D,UACpB3L,EAAiBoK,EAAjBpK,MAAOC,EAAUmK,EAAVnK,OAER2L,EAAKnH,KAAKoH,GAAKpH,KAAKqH,EACpBC,EAAKtH,KAAKoH,GAAKpH,KAAKqH,EACpBE,EAAK,EACLC,EAAK,CACLP,KACFE,EAAKF,EAAU1V,KAAO0V,EAAU7V,KAChCkW,EAAKL,EAAUzV,KAAOyV,EAAU5V,KAGhCkW,EAAKhM,GAAS0L,EAAU7V,KAAO6V,EAAU1V,MAAM,EAC/CiW,EAAKjM,GAAS0L,EAAU5V,KAAO4V,EAAUzV,MAAM,EAGjD,IAAIiW,GAAKN,EAAK5L,EAAM,EAChBmM,EAAKJ,EAAK9L,EAAO,CACrByK,IAAQ0B,eACN9B,MAAO4B,EAAKF,EACZ3B,KAAM8B,EAAKF,EACXI,MAAOH,EAAKF,EACZM,OAAQH,EAAKF,IAIjB,QAASpC,GAAkB0C,GA2BzB,QAASC,GAAQvZ,GACf,OAAQA,EAAIsZ,EAAUtZ,GAAGsZ,EAAUE,MAGrC,QAASC,GAAQxZ,GACf,OAAQA,EAAIqZ,EAAUrZ,GAAGqZ,EAAUE,MA/BrC9C,EAAcgD,oBAAqB,EAEnC7C,EAAwB7W,EAAIsZ,EAAUtZ,EACtC6W,EAAwB5W,EAAIqZ,EAAUrZ,EACtC4W,EAAwB2C,MAAQF,EAAUE,KALN,IAO/BzM,GAAiBoK,EAAjBpK,MAAOC,EAAUmK,EAAVnK,OAERpK,EAAO2W,EAAQ,GACf1W,EAAO4W,EAAQ,GACf1W,EAAOwW,EAAQxM,GACf/J,EAAOyW,EAAQzM,GAIf2M,EAAI,GACRlX,GAAKG,KAAO4O,KAAKoI,MAAMD,EAAI/W,EAAKmK,GAAO4M,EACvClX,EAAKI,KAAO2O,KAAKoI,MAAMD,GAAK9W,EAAKkK,GAAO4M,EACxClX,EAAKM,KAAOyO,KAAKoI,MAAMD,EAAI5W,EAAKgK,GAAO4M,EACvClX,EAAKO,KAAOwO,KAAKoI,MAAMD,GAAK3W,EAAM+J,GAAO4M,EAGzChF,EAAA,EAASkF,SAASpX,GAElB0S,EAAAjU,EAAIwE,KAAK,cAAejD,GAW1B,QAASqX,KACP,GAAIhD,GAAItF,KAAKoH,GAAKpH,KAAKqH,EAAI,GACvB9B,EAAIvF,KAAKoH,GAAKpH,KAAKqH,EAAI,EAE3B9E,IACEnR,MAAOkU,EACPjU,MAAOkU,EACPhU,KAAM+T,EACN9T,KAAM+T,IAIV,QAAShD,GAAiBgG,GACxBpF,EAAA,EAASkF,SAASE,GAA+B,GACjDvB,IAEAf,GAAQuC,OAAO,EAAG,GAAG,GA3ZvB,GAAI7C,IAAepK,MAAO,EAAGC,OAAQ,EAAGoK,IAAK,EAAGC,KAAM,EACtDf,GAAe/W,EAAG+X,OAAOvK,MAAOxN,EAAG+X,OAAOtK,QAC1CuJ,OAAOxK,iBAAiB,SAAUsK,GAAU,GAM5ClB,EAAAjU,EAAI0E,GAAG,eAAgBwO,GACvBe,EAAAjU,EAAI0E,GAAG,cAAe2O,EACtB,IAAID,GAAkB,KAIlB7R,EAAOkS,EAAA,EAAS+D,cAChB7B,GACF2C,MAAO,EACPxZ,EAAG,EACHC,EAAG,GAIDgW,EAAgBtB,EAAA,EAASmB,kBAE7BvW,GAAG0a,QAAQ1a,EAAG2a,YACd3a,EAAG0a,QAAQ1a,EAAG4a,aAKd,IAkDItC,GAlDA3a,GACFqC,KACAkD,OACA0U,aAEA/Z,OAAQ,KAERoG,YAAajE,EAAG6a,oBAGhB5Y,WAAY6Y,EAAA,EAAK7N,aAAajN,EAAI,GAAI0F,eAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAErFvF,UAAWiV,EAAA,EAASC,eAKpB0F,kBAAmB,EAEnBpY,oBAAqByS,EAAA,EAASI,yBAG9B7R,gBAAiByR,EAAA,EAASyB,qBAG1BjU,MAAO,EAIPC,QAEEC,OAAQ,EAAGC,OAAQ,EAGnBC,OAAQ,EAAGC,OAAQ,GAIrBtC,wBAAyB,EAGzBuV,YAAad,EAAA,EAASiB,aAKtBjU,aAAc,MAKZ2T,GAAW,EAEXiF,EAAcvd,EAAAQ,EAAAgd,EAAA,GAAkBtd,GAGhCwZ,EAAgB1Z,EAAAQ,EAAAid,EAAA,GAAoBvd,GACpC2X,EAAc7X,EAAAQ,EAAAkd,EAAA,GAA2Bxd,GACzCya,EAAgB3a,EAAAQ,EAAAmd,EAAA,GAAoBzd,GACpC0a,GAAyB5a,EAAAQ,EAAAod,EAAA,GAA6B/F,EAG1D9U,GAAqBkW,EAErB,IAAI4E,KACFpS,MAAO8M,EACPiC,OACAlX,UAEAwZ,mBACAxG,kBAEA8B,YAEAS,oBACAE,oBAEAP,kBACAG,kBAEAQ,qBACAC,qBAEArB,yBACAC,yBAEAR,eACAI,eAEAgD,0BAEA2C,cAEAO,cA7BQ,WA+BN,MAAO3D,IAGT4D,eAlCQ,WAoCN,MAAO7d,GAAIuF,OAIXgV,GA4LJ,WAOE,MANyBuD,KAAYzb,EAAG+X,QACtC2D,WAAW,EACXC,UAAW,KACXC,WAAYne,EAAAQ,EAAA4d,EAAA,GAAW7b,EAAG+X,OAAQV,OAzLtC,OANA4B,KAEA3a,WAAW,WACTsX,EAAAjU,EAAIwE,KAAK,cAAemV,MAGnBA,GZwtBwB9d,EAAuB,EAAIsW,CACvC,IAAIgI,GAAuEre,EAAoB,QAC3FmX,EAA+EnX,EAAoBkJ,EAAEmV,GACrGC,EAAyEte,EAAoB,QAC7FkX,EAAiFlX,EAAoBkJ,EAAEoV,GACvGC,EAAoEve,EAAoB,QACxFyW,EAA4EzW,EAAoBkJ,EAAEqV,GAClGlB,EAA0Crd,EAAoB,QAC9Dwe,EAAwCxe,EAAoB,QAC5Dge,EAAgDhe,EAAoBkJ,EAAEsV,GACtEC,EAAqCze,EAAoB,QACzDmY,EAA6CnY,EAAoBkJ,EAAEuV,GACnE9G,EAA0C3X,EAAoB,QAC9Doe,EAA4Cpe,EAAoB,QAChEyd,EAAwDzd,EAAoB,QAC5E0d,EAA+D1d,EAAoB,QACnF2d,EAAsD3d,EAAoB,QAC1E4d,EAA0D5d,EAAoB,QAC9Ewd,EAAoDxd,EAAoB,SAkc3F0e,KACA,SAAU5e,EAAQC,EAAqBC,GAE7C,Ya/wCAD,GAAA,EA/DI2K,4wDbg2CEiU,KACA,SAAU7e,EAAQC,EAAqBC,GAE7C,Yc3yCA,SAAS4X,KACP,GAAIlV,GAAYkc,EAAGvY,IAAI,KACvB,OAAOwY,GAAQnc,GAAaA,EAAYoc,EAASpc,UAGnD,QAAS8U,GAAa9U,GACfmc,EAAQnc,KACbkc,EAAGG,KAAKC,GAAItc,IACZuc,EAAaD,GAAKtc,GAGpB,QAASkW,KACP,GAAIsG,GAAUN,EAAGvY,IAAI,KACrB,OAAOwY,GAAQK,GAAWA,EAAUJ,EAASI,QAG/C,QAASxG,GAAWwG,GACbL,EAAQK,KACbN,EAAGG,KAAKI,GAAID,IACZD,EAAaE,GAAKD,GAGpB,QAASpG,KACP,GAAIG,GAAgB2F,EAAGvY,IAAI,KAC3B,OAAOwY,GAAQ5F,GAAiBA,EAAgB6F,EAAS7F,cAG3D,QAASC,GAAiBD,GACnB4F,EAAQ5F,KACb2F,EAAGG,KAAKK,GAAInG,IACZgG,EAAaG,GAAKnG,GAGpB,QAASlB,KACP,GAAIsH,GAAWT,EAAGvY,IAAI,KACtB,OAAOwY,GAAQQ,GAAYA,EAAWP,EAASO,SAGjD,QAASrH,GAAuBsH,GACzBT,EAAQS,KACbV,EAAGG,KAAKO,GAAIA,IACZL,EAAaK,GAAKA,GAGpB,QAASlG,KACP,GAAIlT,GAAkB0Y,EAAGvY,IAAI,KAC7B,OAAOwY,GAAQ3Y,GAAmBA,EAAkB4Y,EAAS5Y,gBAG/D,QAASiT,GAAmBjT,GACrB2Y,EAAQ3Y,KACbqZ,EAAMrZ,EAAiB,EAAG,GAC1B0Y,EAAGG,KAAKS,GAAItZ,KAGd,QAASwV,KACP,GAAI7E,GAAK+H,EAAGvY,IAAI,MACZoZ,EAAKb,EAAGvY,IAAI,MACZyT,EAAI8E,EAAGvY,IAAI,KACX0T,EAAI6E,EAAGvY,IAAI,IAGf,IADkBwY,EAAQhI,IAAOgI,EAAQY,IAAOZ,EAAQ/E,IAAM+E,EAAQ9E,GACtE,CAEA,GAAIkC,GAAKnC,EAAE,EACPoC,EAAKnC,EAAE,EACP4C,EAAI,GACR,QACE/W,KAAM4O,KAAKoI,MAAMD,GAAK9F,EAAKoF,IAAKU,EAChC5W,KAAMyO,KAAKoI,MAAMD,GAAK9F,EAAKoF,IAAKU,EAChC9W,KAAM2O,KAAKoI,MAAMD,GAAK8C,EAAKvD,IAAKS,EAChC3W,KAAMwO,KAAKoI,MAAMD,GAAK8C,EAAKvD,IAAKS,IAIpC,QAASE,GAASpX,GAAyB,GAAnBia,GAAmBC,UAAAxZ,OAAA,OAAAwQ,KAAAgJ,UAAA,IAAAA,UAAA,EACtCC,KACDhf,aAAagf,GACbA,EAAc,GAGZF,EAAWG,EAAWpa,GAExBma,EAAc/e,WAAW,iBAAMgf,GAAWpa,IAAO,KAIrD,QAASoa,GAAWpa,GAClBma,EAAc,CACd,IAAIna,IACFoR,GAA8B,IAAzBpR,EAAKG,KAAOH,EAAKM,MACtB0Z,GAA8B,IAAzBha,EAAKI,KAAOJ,EAAKO,MACtB8T,EAAIrU,EAAKM,KAAON,EAAKG,KACrBmU,EAAItU,EAAKM,KAAON,EAAKG,KAGnBH,GAAKqU,GAAK,GAAKrU,EAAKsU,GAAK,IAE7B6E,EAAGG,IAAItZ,GAEPwZ,EAAapI,GAAKpR,EAAKoR,GACvBoI,EAAaQ,GAAKha,EAAKga,GACvBR,EAAanF,EAAIrU,EAAKqU,EACtBmF,EAAalF,EAAItU,EAAKsU,GAGxB,QAAS3P,KACP,GAAI0V,GAASlB,EAAGvY,IAAI,KACpB,IAAIyZ,EAAQ,MAAOA,EAKnB,IAAIC,GAAUnB,EAAGvY,IAAI,OACrB,OAAI0Z,IACFD,EAAS9f,EAAAQ,EAAAwf,EAAA,GAAgBD,SAElBd,GAAavU,KACpBkU,EAAGG,IAAI,KAAMe,GACNA,GAGFG,EAGT,QAASC,KACP,MAAOD,GAGT,QAASE,GAASzV,GAChBkU,EAAGG,KACDqB,GAAI1V,IAENuU,EAAavU,KAAOA,EAGtB,QAASmU,GAAQwB,GACf,MAAOlJ,KAAgBkJ,GAGzB,QAASd,GAAMvc,EAAGsd,EAAKrG,GACrB,MAAOjX,GAAIsd,EAAMA,EACVtd,EAAIiX,EAAOA,EAAMjX,Ed8pCL,Gct1CjB4c,Gds1CqBvB,EAAuEre,EAAoB,QAC3FmX,EAA+EnX,EAAoBkJ,EAAEmV,GACrGkC,EAA4CvgB,EAAoB,QAChEwgB,EAAoDxgB,EAAoBkJ,EAAEqX,GAC1EE,EAAqCzgB,EAAoB,QACzD0gB,EAA6C1gB,EAAoBkJ,EAAEuX,GACnEE,EAAqD3gB,EAAoB,QACzEggB,EAAiDhgB,EAAoB,Qc52C1F4e,EAAK4B,QACPI,WAAW,EAMXC,qBAAqB,IAGnB5B,EAAeL,EAAGvY,MAElB4Z,EAAqBjgB,EAAAQ,EAAAwf,EAAA,GAAAc,yCAIrBhC,GACFO,SAAU,IACVnZ,gBAAiB,KACjB+S,cAAe,IACfiG,QAAS,KACTxc,UAAWie,EAAA,EAAWhd,SAGpBod,GACFC,UAAWzH,OAAOC,WAAa,IAGjCzZ,GAAA,GACEghB,gBACAlE,WACAnB,UACAuF,MAJa,WAIH,MAAOrC,IACjBuB,WACA/V,UACA8V,iBAEA9G,qBACAD,qBAEApB,yBACAC,yBAEAc,mBACAI,mBAEAN,aACAF,aAEAd,eACAJ,gBAGFoH,EAAGsC,SAAS,WACVR,EAAAxc,EAAIwE,KAAK,cAAe6Q,OAAO4H,UdkhD3BC,KACA,SAAUthB,EAAQC,EAAqBC,GAE7C,YACqB,IAAI+S,GAA8E/S,EAAoB,QAClGgT,EAAsFhT,EAAoBkJ,EAAE6J,GAC5GsO,EAAgFrhB,EAAoB,QACpGshB,EAAwFthB,EAAoBkJ,EAAEmY,GAC9GE,EAA+DvhB,EAAoB,QACnFwhB,EAAuExhB,EAAoBkJ,EAAEqY,GAC7FE,EAAqEzhB,EAAoB,QACzF0hB,EAA6E1hB,EAAoBkJ,EAAEuY,GACnGE,EAAkE3hB,EAAoB,QACtF4hB,EAA0E5hB,EAAoBkJ,EAAEyY,GAChGlO,EAAgDzT,EAAoB,QACpE6hB,EAAqD7hB,EAAoB,QACzE8hB,EAA6C9hB,EAAoB,QACjE+hB,EAA6D/hB,EAAoB,QACjFgiB,EAAkDhiB,EAAoB,QACtEiiB,EAAuDjiB,EAAoB,Qe9lD/EkiB,Ef2mDK,We1mDxB,QAAAA,GAAYvU,GAAS+T,IAAAjY,KAAAyY,GACnBzY,KAAK0Y,mBAAqB,GAAIN,GAAA,GAAqC,GACnEpY,KAAK2Y,YAAc,GAAIL,GAAA,EACvBtY,KAAK4Y,mBAAqB,GAAIJ,GAAA,EAC9BxY,KAAK6Y,cAAgB,GAAIC,GACzB9Y,KAAK+Y,sBAAwB,GAAIX,GAAA,GAAqC,GACtEpY,KAAKgZ,cAAgB,GAAIT,GAAA,GAAkBU,QAAQ,IACnDjZ,KAAKkZ,cAAgB,GAAIX,GAAA,GAAkBU,QAAQ,IAEnDjZ,KAAK/G,UAAYiL,GAAWA,EAAQjL,UfsoDtC,MAtBAkf,KAA0EM,IACxExY,IAAK,uBACLC,MAAO,Se/mDYiZ,GACnBnZ,KAAK2Y,YAAYS,iBAAiBD,MfknDlClZ,IAAK,kBACLC,MAAO,We/mDP,4NfmnDAD,IAAK,oBACLC,MAAO,WetmDP,GAAImZ,IACFrZ,KAAK0Y,mBACL1Y,KAAK6Y,cACL7Y,KAAK2Y,YACL3Y,KAAK4Y,oBACHU,YADuB,WAErB,gDAKJtZ,KAAK+Y,sBAEP,OAAOxiB,GAAAQ,EAAAshB,EAAA,GAAYgB,OfmmDdZ,IAGoBniB,GAAuB,EAAI,CAExD,IepmDMwiB,GfomDsB,SAAU1O,GAGpC,QAAS0O,KAGP,MAFAb,KAA6EjY,KAAM8Y,GAE5EjB,IAAwF7X,MAAO8Y,EAAsBxO,WAAaf,IAAsFuP,IAAwBS,MAAMvZ,KAAMkW,YAsBrQ,MA3BA6B,KAAuEe,EAAuB1O,GAQ9F+N,IAA0EW,IACxE7Y,IAAK,aACLC,MAAO,We7mDP,gHfinDAD,IAAK,eACLC,MAAO,WevmDP,yOf6mDAD,IAAK,cACLC,MAAO,WenmDP,0gBfwmDK4Y,GehoD2B9O,EAAA,IfqoD9BwP,OACA,SAAUnjB,EAAQC,EAAqBC,GAE7C,YgB/rDe,SAASkjB,GAAYJ,GAWlC,QAASK,GAAU/X,GACbA,GAAMV,EAAKpK,KAAK8K,GAXtB,GAAIV,KAQJ,OANAoY,GAAMM,QAAQ,SAAAC,GAAcA,EAAKC,YAAYH,EAAUE,EAAKC,gBAC5DR,EAAMM,QAAQ,SAAAC,GAAcA,EAAKE,cAAcJ,EAAUE,EAAKE,kBAE9DJ,EAAU,iBACRL,EAAMM,QAAQ,SAAAC,GAAcA,EAAKN,aAAaI,EAAUE,EAAKN,iBAC/DI,EAAU,KACHzY,EAAKyB,KAAK,MhBurDcpM,EAAuB,EAAImjB,GA0BtDM,KACA,SAAU1jB,EAAQC,EAAqBC,GAE7C,YiB3tDe,SAASyjB,KAetB,QAASC,KACPpD,EAAMqD,OAAOC,kBACb3J,EAAM0J,OAAOE,kBAhBf,GAAIvD,GAAKrG,CAYT,QATE6J,OADQ,WACG,MAAOxD,IAClByD,OAFQ,WAEG,MAAO9J,IAClB1R,IAHQ,SAGJvF,GACEA,EAAIsd,IAAKA,EAAMtd,GACfA,EAAIiX,IAAKA,EAAMjX,IAErB0gB,MAAOA,GAbX3jB,EAAA,EAAA0jB,GjB+vDMO,KACA,SAAUlkB,EAAQC,EAAqBC,GAE7C,YkB9uDAD,GAAA,EAjBM2K,sdlBywDAuZ,KACA,SAAUnkB,EAAQC,EAAqBC,GAE7C,YACqB,IAAI+S,GAA8E/S,EAAoB,QAClGgT,EAAsFhT,EAAoBkJ,EAAE6J,GAC5GE,EAAqEjT,EAAoB,QACzFkT,EAA6ElT,EAAoBkJ,EAAE+J,GACnGE,EAAkEnT,EAAoB,QACtFoT,EAA0EpT,EAAoBkJ,EAAEiK,GAChGE,EAAgFrT,EAAoB,QACpGsT,EAAwFtT,EAAoBkJ,EAAEmK,GAC9GE,EAA+DvT,EAAoB,QACnFwT,EAAuExT,EAAoBkJ,EAAEqK,GAC7FE,EAAgDzT,EAAoB,QACpEkkB,EAAuDlkB,EAAoB,QAC3EmkB,EAAuDnkB,EAAoB,QmBrxD/EokB,EnBmyDC,SAAUvQ,GmBlyD9B,QAAAuQ,GAAYC,GAAUnR,IAAAzJ,KAAA2a,EAAA,IAAAtQ,GAAAR,IAAA7J,MAAA2a,EAAArQ,WAAAf,IAAAoR,IAAApQ,KAAAvK,MAAA,OAKpBqK,GAAKuQ,SAAWA,EALIvQ,EnBy0DtB,MAtCAN,KAAuE4Q,EAAiBvQ,GAaxFT,IAA0EgR,IACxE1a,IAAK,eACLC,MAAO,WmBzyDP,GAAIF,KAAK4a,SACP,eACAH,EAAA,EADA,SAEAC,EAAA,EAFA,QnB8yDFza,IAAK,aACLC,MAAO,WmBvyDP,GAAIF,KAAK4a,SAET,kOnB4yDA3a,IAAK,cACLC,MAAO,WmB9xDT,MAAIF,MAAK4a,SACP,wJAOA,sVnB8xDKD,GmB10DoC3Q,EAAA,EnB60DhB1T,GAAuB,EAAI,GAIlDukB,KACA,SAAUxkB,EAAQC,EAAqBC,GAE7C,YoB/yDA,SAASoX,GAAY1J,GACnB,IAAK6W,EAOH,WANAvkB,GAAAsM,EAAA,GAAApC,KAAA,WACEqa,EAAWvkB,EAAQ,QACnBuZ,OAAOhC,WAAaA,EACpBH,EAAY1J,IAHdnB,KAAA,KAAAvM,IAAAwM,MAAAxM,EAAAyM,GAaF,IAJI6K,GACFA,EAAgBkD,QAGbgK,IAAsB,CACzB,GAAIC,GAAeC,SAASC,cAAc,SAI1C,OAHAF,GAAaG,aAAa,MAAOlX,GAAO,sDACxC+W,EAAaI,OAAS,iBAAMzN,GAAY1J,QACxCgX,UAASI,KAAKC,YAAYN,GAI5BnN,EAAkB,GAAIiN,IAClBS,OAAQ,eACRC,UAAW,GACXC,SAAS,EACTzjB,KAAM,YACN0jB,UAAW,OACXC,MAAO,QACPC,iBACE,OAAQ,SAId9L,OAAO+L,aAAc,EACrBhO,EAAgB7L,QAChB8Z,EAAArhB,EAAIwE,KAAK,eAAgB4O,GAG3B,QAASkN,KACP,MAA+B,mBAAjBgB,cAGhB,QAASjO,KACPgC,OAAO+L,aAAc,EACrBC,EAAArhB,EAAIwE,KAAK,cAAe4O,GACxBA,EAAgBkD,OAChBlD,EAAgBmO,OpBgwDlBC,OAAOC,eAAe5lB,EAAqB,cAAgB4J,OAAO,GAC7C,IAAIic,GAAuC5lB,EAAoB,QoB71DpF6lB,EAAA7lB,EAAA,QAAAulB,EAAAvlB,EAAAkJ,EAAA2c,GASIvL,EAASoK,SAASoB,eAAe,QAEjCxL,IAQJ,SAA4BA,GAC1BA,EAAOvK,MAAQwJ,OAAOC,WACtBc,EAAOtK,OAAUuJ,OAAOE,WACxB,IAAIsM,IAAcC,cAAc,GAE5BzjB,EAAK+X,EAAO2L,WAAW,QAASF,IAC5BzL,EAAO2L,WAAW,qBAAsBF,EAEhD,IAAIxjB,EAAI,CACNgX,OAAO2M,cAAe,CACtB,IAAI/E,GAAQnhB,EAAAQ,EAAAolB,EAAA,GAAUrjB,EACtB4e,GAAM1V,QAEN8N,OAAO4H,MAAQA,MAEf5H,QAAO2M,cAAe,GAvBK5L,GAG/Bta,EAAAsM,EAAA,GAAApC,KAAA,WAEElK,EAAQ,SAFVuM,KAAA,KAAAvM,IAAAwM,MAAAxM,EAAAyM,GAwBA,IAAI8X,GACAjN,CAEJiC,QAAOnC,YAAcA,EACrBmC,OAAO+L,aAAc,GpBs5Dfa,OACA,SAAUrmB,EAAQC,EAAqBC,GAE7C,YqBh6DAD,GAAA,EAnCM2K,miCrB08DA0b,KACA,SAAUtmB,EAAQC,EAAqBC,GAE7C,YsBv4DA,SAASqmB,GAAWC,EAAUC,GACxBD,EAASE,YACXD,EAAMjmB,KAAKgmB,EAASE,cAGxB,QAASC,GAAQH,EAAUC,GACrBD,EAASI,SACXH,EAAMjmB,KAAKgmB,EAASI,WAIxB,QAASC,KACP,OACEC,aADK,aAELF,QAFK,cAMT,QAASG,KAMP,QAASD,KACP,mFAMF,QAASF,KACP,6JAbF,OACEE,eACAF,WtBm3DiB,GAAItd,GAAqEpJ,EAAoB,QACzFqJ,EAA6ErJ,EAAoBkJ,EAAEE,GACnGE,EAAkEtJ,EAAoB,QACtFuJ,EAA0EvJ,EAAoBkJ,EAAEI,GAChGwd,EAAuD9mB,EAAoB,QAC3E+mB,EAAkD/mB,EAAoB,QACtEgnB,EAAqDhnB,EAAoB,QsB/8D7EinB,EtBw9DG,WsBv9DtB,QAAAA,GAAYvkB,GAAW2G,IAAAI,KAAAwd,GACrBxd,KAAK/G,UAAYA,EACjB+G,KAAKyd,eAAkBxkB,IAAcskB,EAAA,EAAWrjB,QtB8/DlD,MAjCA4F,KAA0E0d,IACxEvd,IAAK,oBACLC,MAAO,WsB39DP,GAAIwd,MACAC,IAWJ,OATI3d,MAAKyd,gBAEPC,EAAU7mB,KAAK,kCACf8mB,EAAS9mB,KAAK,sCAGd6mB,EAAU7mB,KAAK,kCACf8mB,EAAS9mB,KAAK,qCAEhB,2BACF6mB,EAAUhb,KAAK,MADb,sBAIFib,EAASjb,KAAK,MAJZ,StB+9DAzC,IAAK,kBACLC,MAAO,SsBx9DOmW,GACd,GAAIuH,GAAkBR,IAClBS,EAAa7d,KAAKyd,eAAiBP,IAAiB3mB,EAAAQ,EAAAumB,EAAA,GAAiBtd,KAAK/G,UAAWod,GACrFyH,IACJlB,GAAWgB,EAAiBE,GAC5BlB,EAAWiB,EAAYC,EACvB,IAAIC,KAIJ,OAHAf,GAAQY,EAAiBG,GACzBf,EAAQa,EAAYE,GAEpB,kIAMFH,EAAgBT,gBAAkB,IANhC,MAOFU,EAAWV,gBAAkB,IAP3B,OASFE,EAAA,EATE,OAWFS,EAAQpb,KAAK,MAXX,8KAmBFqb,EAAKrb,KAAK,MAnBR,yLtB49DK8a,IAGoBlnB,GAAuB,EAAI,GAsClD0nB,KACA,SAAU3nB,EAAQC,EAAqBC,GAE7C,YuBljEO,SAAS0nB,KACd,6DvBkjE+B3nB,EAAuB,EAAI2nB,GAOtDC,KACA,SAAU7nB,EAAQC,EAAqBC,GAE7C,YwBzjEe,SAAS4nB,GAAiBllB,EAAWod,GAUlD,QAAS8G,KACP,2EAGFiB,EAAIvE,aAHF,KAIFwE,EAAUxE,aAJR,KAQF,QAASkD,KACP,uPAQFqB,EAAItE,eARF,KASFuE,EAAUvE,eATR,KAaF,QAASmD,KAeP,2DAZIhkB,IAAcqlB,EAAA,EAAWnlB,SAC3BolB,gMAKAA,uIAMF,KA/CF,GAAIH,GAAM,GAAII,GAAA,EAA4BnI,GACtCgI,EAAY,GAAII,GAAA,CAEpB,QACEtB,eACAF,UACAF,cxBmjE6BzmB,EAAuB,EAAI6nB,CACvC,IAAIK,GAA6DjoB,EAAoB,QACjFkoB,EAAsDloB,EAAoB,QAC1E+nB,EAAqD/nB,EAAoB,SAsC5FmoB,KACA,SAAUroB,EAAQC,EAAqBC,GAE7C,YyBhmEe,SAASooB,GAA6BvQ,GA2BnD,QAASvU,KACP+I,EAAAnI,EAAI0I,IAAI,oBAAqByb,GAG/B,QAASje,KACP,MAAOke,GAAA,EAASle,UAGlB,QAASme,GAAQve,GACf,GAAIA,IAAoBwe,EAOtB,YAJIne,GAAgBA,EAAarJ,OAE/BqnB,IAKJI,GAAcze,GAAiBE,KAAK,SAACwe,GACnC,IAAIA,EAAOC,UAAX,CAEA,GAAID,GAAUA,EAAO1nB,MAEnB,MADA4nB,GAAgBF,EAAO1nB,OAChB0nB,CAGTF,GAAyBxe,EACzB6T,EAAInT,KAAOV,EACXse,EAAA,EAASnI,SAASnW,MAItB,QAAS4e,GAAgBve,GACnBA,GAAgBA,EAAarJ,OAC/B6c,EAAI7c,MAAQqJ,EAAarJ,MACzB6c,EAAI9R,YAAc1B,EAAa0B,YAC/B8R,EAAI7R,aAAe3B,EAAa2B,eAEhC6R,EAAI7c,MAAQ,GACZ6c,EAAI9R,YAAc,GAClB8R,EAAI7R,cAAe,GAoBvB,QAASqc,GAAUQ,GACjB,MAAO7oB,GAAAQ,EAAAsoB,EAAA,GAA6BD,GAAcL,GAC/Cte,KAAK,SAAA6e,GAGJ,MAFA1e,GAAe0e,EACfH,EAAgBve,EAAarJ,OACtBqJ,IAIb,QAASoe,GAAcze,GACrBgf,GAA6B,CAC7B,IAAIC,GAAkBD,CAEtB,OAAOX,GAAUre,GAAiBE,KAAK,SAAAG,GACrC,GAAI4e,IAAoBD,EAGtB,MAFA3e,GAAase,WAAY,EAElBte,CAGT,IAAIA,EAAarJ,MACf,MAAOqJ,EAGT,KAEE,MADAwN,GAAYjW,WAAWyI,EAAaK,MAC7BL,EACP,MAAOiC,GACP,OACEtL,OACEA,MAAOsL,EAAE4c,aArHnB7c,EAAAnI,EAAI0E,GAAG,oBAAqByf,EAC5B,IAOIhe,GAPA2e,EAA4B,EAG5BR,EAAyBF,EAAA,EAASle,WAmEtC,WACE,GAAI+e,GAAgBb,EAAA,EAASle,SACzB+e,GACFV,EAAcU,GAAejf,KAAK,SAAAwe,GAC3BA,EAAO1nB,QAEZK,QAAQL,MAAM,4CAA6C0nB,EAAO1nB,OAElEynB,EAAcH,EAAA,EAASpI,qBAIzBuI,EAAcH,EAAA,EAASpI,oBAvE3B,IAAIrC,IACFzT,UACAme,UACAjlB,UAGAoH,KAAM8d,EACNxnB,MAAO,GACP+K,YAAa,GACbC,cAAc,EAGhB,OAAO6R,GzBwkEwB9d,EAAuB,EAAIqoB,CACvC,IAAIhc,GAAqCpM,EAAoB,QACzDqM,EAA6CrM,EAAoBkJ,EAAEkD,GACnEkc,EAA0CtoB,EAAoB,QAC9D8oB,EAA8D9oB,EAAoB,SA0IrGopB,KACA,SAAUtpB,EAAQC,EAAqBC,GAE7C,Y0BxvEe,SAAS8gB,GAAgBuI,GACtC,iMAMEA,EANF,qBALFtpB,EAAA,EAAA+gB,G1BwwEMwI,KACA,SAAUxpB,EAAQypB,EAASvpB,G2BrwEjC,GAAIwpB,GAAWxpB,EAAQ,OAEvBF,GAAOypB,QAAUC,O3B+wEXC,KACA,SAAU3pB,EAAQC,EAAqBC,GAE7C,Y4BvxEe,SAAS0pB,GAAYnnB,EAAImL,GAetC,QAASic,GAAYpoB,GACnBqoB,EAAcroB,GAGhB,QAASqD,KACP,GAAI6B,GAAUlE,EAAGgL,gBAEbsc,EAAiBtnB,EAAGmF,KACpBoiB,EAAYvnB,EAAGmF,KACfqiB,EAAUxnB,EAAGoF,aACjBpF,GAAGqC,YAAYrC,EAAG0K,WAAYxG,GAC9BlE,EAAG2K,WAAW3K,EAAG0K,WALL,EAKwB4c,EACtBC,EAAWC,EAASC,GAE9BC,EAAWD,EAAMja,QAAUka,EAAWD,EAAMha,QAC7CzN,EAAG2nB,eAAe3nB,EAAG0K,aAErB1K,EAAG0N,cAAc1N,EAAG0K,WAAY1K,EAAG2N,eAAgB3N,EAAG4N,eACtD5N,EAAG0N,cAAc1N,EAAG0K,WAAY1K,EAAG6N,eAAgB7N,EAAG4N,eACtD5N,EAAG0N,cAAc1N,EAAG0K,WAAY1K,EAAG8N,mBAAoB9N,EAAG4nB,SAG7DC,EAAe3jB,GApCjB,GAAI2jB,GAAgBR,EAEhBI,EAAQ,GAAIK,MAOhB,OANAL,GAAMM,YAAc,GAEpBN,EAAMnF,OAASjgB,EACfolB,EAAMO,QAAUZ,EAChBK,EAAMQ,IAAM9c,EAEL,GAAAwB,GAAAhL,EAAY,SAAC2J,EAASC,GAC3Bsc,EAAiBvc,EACjB+b,EAAgB9b,IA6BpB,QAASmc,GAAWtgB,GAClB,MAAgC,KAAxBA,EAASA,EAAQ,G5B8uEM5J,EAAuB,EAAI2pB,CACvC,IAAIva,GAA8DnP,EAAoB,QAClFkP,EAAsElP,EAAoBkJ,EAAEiG,IAiD/Gsb,KACA,SAAU3qB,EAAQC,EAAqBC,GAE7C,Y6Bn0Ee,SAAS0qB,GAAaxqB,GA2BnC,QAASoD,KACPiiB,EAAArhB,EAAI0I,IAAI,+BAAgC9J,GACxCyiB,EAAArhB,EAAI0I,IAAI,cAAe9J,GACvB6nB,IAGF,QAASA,KACHC,GAAoBroB,EAAGuK,cAAc8d,GACrCC,GAAoBtoB,EAAGuK,cAAc+d,GAG3C,QAAS/nB,KACHgoB,GAAoBlqB,aAAakqB,GACrCA,EAAqBjqB,WAAW,WAC9BkqB,GAAmB,EACnBD,EAAqB,GACpB,IAGL,QAAS3mB,GAAeT,GACtBnB,EAAGmD,UAAUhC,EAAQsnB,iBAAkBC,EAAgBnH,SAAUmH,EAAgBlH,UAGnF,QAAShhB,KACP4nB,IAEAznB,EAA0BhD,EAAIgD,wBAC9BkE,EAAelE,EAA0BA,EAEzCqE,EAAa,GAAIC,YAA0B,EAAfJ,GAC5BQ,EAAa,GAAIJ,YAA0B,EAAfJ,GAC5BwjB,EAAqBvoB,EAAA,EAAKkL,cAAchL,EAAIA,EAAGiL,QAASjG,EAAYrE,EAAyBA,GAC7F2nB,EAAqBxoB,EAAA,EAAKkL,cAAchL,EAAIA,EAAGiL,QAAS5F,EAAY1E,EAAyBA,GAE7FJ,IAGF,QAASlB,KACPkB,IAGF,QAASuB,GAAyBX,GAC3BqnB,GAAqBxjB,GAAeK,IACzCmjB,GAAmB,EAGnB1oB,EAAA,EAAKkE,gBAAgBhE,EAAIrC,EAAIsG,YAAaokB,GAC1CroB,EAAGsC,UAAUnB,EAAQ4C,iBAAkB4kB,GACvC3oB,EAAGoE,WAAWpE,EAAGqE,UAAW,EAAG,GAC/BrE,EAAGkF,WAAW,EAAG,EAAGvE,EAAyBA,EAAyBX,EAAGmF,KAAMnF,EAAGoF,cAAeJ,GAEjGlF,EAAA,EAAKkE,gBAAgBhE,EAAIrC,EAAIsG,YAAaqkB,GAC1CtoB,EAAGsC,UAAUnB,EAAQ4C,iBAAkB6kB,GACvC5oB,EAAGoE,WAAWpE,EAAGqE,UAAW,EAAG,GAC/BrE,EAAGkF,WAAW,EAAG,EAAGvE,EAAyBA,EAAyBX,EAAGmF,KAAMnF,EAAGoF,cAAeC,GAEjGwjB,KAGF,QAASA,KACPH,EAAgBvH,OAEhB,KAAI,GAAIljB,GAAI,EAAGA,EAAIoH,EAAWzB,OAAQ3F,GAAG,EAAG,CAC1C,GAAI4H,GAAKC,EAAUd,EAAY/G,GAC3B8H,EAAKD,EAAUT,EAAYpH,GAC3B6qB,EAAI7W,KAAK+G,KAAKnT,EAAKA,EAAKE,EAAKA,EACjC2iB,GAAgB1iB,IAAI8iB,IA5FxB,GAEIR,GAAoBD,EACpB1nB,EACA4nB,EACA1jB,EAEAG,EACAK,EARAmjB,GAAmB,EAClBxoB,EAAMrC,EAANqC,GAKD0oB,EAAkBjrB,EAAAQ,EAAA8qB,EAAA,IAMtB,OASA,YACE/F,EAAArhB,EAAI0E,GAAG,+BAAgC9F,GACvCyiB,EAAArhB,EAAI0E,GAAG,cAAe9F,OAVtBlB,aACAyC,2BACAtB,uBACAoB,iBACArB,qBACAQ,WA+EJ,QAAS+E,GAAUQ,EAAQC,GACvB,MAAO9I,GAAAQ,EAAA+qB,EAAA,GACL1iB,EAAOC,EAAS,GAChBD,EAAOC,EAAS,GAChBD,EAAOC,EAAS,GAChBD,EAAOC,EAAS,I7B6tEW/I,EAAuB,EAAI2qB,CACvC,IAAIroB,GAA0CrC,EAAoB,QAC9D6lB,EAAqC7lB,EAAoB,QACzDulB,EAA6CvlB,EAAoBkJ,EAAE2c,GACnE0F,EAAoDvrB,EAAoB,QACxEsrB,EAAuDtrB,EAAoB,Q6Bh1E9FkrB,EAAU,EACVC,EAAU,G7Bq8EVK,KACA,SAAU1rB,EAAQC,EAAqBC,GAE7C,Y8Bv8Ee,SAASyrB,GAAkBvrB,GAwBxC,QAASib,KAEP9Y,EAAA,EAAQkE,gBAAgBhE,EAAIrC,EAAIsG,YAAaklB,GAC7CnpB,EAAGmE,SAAS,EAAG,EAAGyT,EAAWpK,MAAOoK,EAAWnK,QAE3C6N,EAAInB,oBAAsBiP,GAI5BC,EAAyB5R,KAAO9Z,EAAIuF,KAAKG,KAAO+lB,EAAwB/lB,OAAO1F,EAAIuF,KAAKM,KAAO7F,EAAIuF,KAAKG,MACxGgmB,EAAyB1R,KAAOha,EAAIuF,KAAKI,KAAO8lB,EAAwB9lB,OAAO3F,EAAIuF,KAAKO,KAAO9F,EAAIuF,KAAKI,MACxG+lB,EAAyBpP,OAAStc,EAAIuF,KAAKM,KAAO7F,EAAIuF,KAAKG,OAAS+lB,EAAwB5lB,KAAO4lB,EAAwB/lB,MAC3HimB,EAAYC,EAAmB5rB,EAAIuY,YAAamT,IAEhDC,EAAYC,EAAmB5rB,EAAIuY,YAAasT,GAIpD,QAAS1Q,KACPhZ,EAAA,EAAQkE,gBAAgBhE,EAAI,MAE5BypB,IAEAzpB,EAAG0pB,OAAO1pB,EAAG2pB,OACb3pB,EAAG4pB,UAAU5pB,EAAG6pB,UAAW7pB,EAAG8pB,qBAC9B9pB,EAAG+pB,WAAWC,EAAgBxoB,EAAGwoB,EAAgBvoB,EAAGuoB,EAAgBtoB,EAAGsoB,EAAgBroB,GACvF3B,EAAGiqB,MAAMjqB,EAAGkqB,kBACZZ,EAAYH,EAAe,EAAKK,GAChCxpB,EAAG0a,QAAQ1a,EAAG2pB,MAEd,IAAInlB,GAAO+kB,CACXA,GAAoBJ,EACpBA,EAAgB3kB,EAEhB8W,EAAInB,oBAAqB,EACrBnD,OAAO5U,cACTknB,EAAYtS,OAAO5U,aAAc,EAAKonB,GAI1C,QAASpS,KAAuB,GACzB5J,GAAiBoK,EAAjBpK,MAAOC,EAAUmK,EAAVnK,OACR0c,EAAc,GAAIllB,YAAWuI,EAAQC,EAAS,EAC9C0b,IACFnpB,EAAGuK,cAAc4e,GAEfI,GACFvpB,EAAGuK,cAAcgf,GAGnBJ,EAAgBrpB,EAAA,EAAQkL,cAAchL,EAAIA,EAAGiL,QAASkf,EAAa3c,EAAOC,GAC1E8b,EAAoBzpB,EAAA,EAAQkL,cAAchL,EAAIA,EAAGiL,QAASkf,EAAa3c,EAAOC,GAGhF,QAASgc,KACP,IAAKL,EAQH,YAPAA,GACE/lB,KAAM1F,EAAIuF,KAAKG,KACfC,KAAM3F,EAAIuF,KAAKI,KACfE,KAAM7F,EAAIuF,KAAKM,KACfC,KAAM9F,EAAIuF,KAAKO,MAMnB2lB,GAAwB/lB,KAAO1F,EAAIuF,KAAKG,KACxC+lB,EAAwB9lB,KAAO3F,EAAIuF,KAAKI,KACxC8lB,EAAwB5lB,KAAO7F,EAAIuF,KAAKM,KACxC4lB,EAAwB3lB,KAAO9F,EAAIuF,KAAKO,KAG1C,QAAS6lB,GAAYplB,EAASkmB,EAASC,GACrC,GAAIlpB,GAAUgW,CACdnX,GAAG+B,WAAWZ,EAAQA,SACtBrB,EAAA,EAAQkC,cAAchC,EAAIrC,EAAIsE,WAAYd,EAAQe,MAAO,GAGzDpC,EAAA,EAAQuC,YAAYrC,EAAIkE,EAASvG,EAAIod,mBACrC/a,EAAGsC,UAAUnB,EAAQmpB,SAAU3sB,EAAIod,mBAEnC/a,EAAGuC,UAAUpB,EAAQopB,iBAAkB,KACvCvqB,EAAGuC,UAAUpB,EAAQqpB,UAAWJ,GAChCpqB,EAAGyqB,UAAUtpB,EAAQupB,YAAaL,EAAiB5S,GAAI4S,EAAiB1S,GAAI0S,EAAiBpQ,OAE7Fja,EAAGoE,WAAWpE,EAAGqE,UAAW,EAAG,GA7GY,GAGzC8kB,GAAeI,EAFdvpB,EAAkBrC,EAAlBqC,GAAI4X,EAAcja,EAAdia,WAGLyR,GAA4B5R,GAAI,EAAGE,GAAI,EAAGsC,MAAO,GACjDmP,EAA0B,KAI1BY,GAAoBxoB,EAAG,GAAG,IAAKC,EAAG,GAAG,IAAKC,EAAG,GAAG,IAAKC,EAAG,EAE5DyV,IACA,IAAID,GAAgBrX,EAAA,EAAQC,cAAcC,EAsG1C,s4BA2BA,muBA/HIsb,GACF1C,mBACAE,sBACA1B,uBAEA+C,oBAAoB,EAGtB,OAAOmB,G9Bk7EwB9d,EAAuB,EAAI0rB,C8B/8E5D,IAAAppB,GAAArC,EAAA,QAKM+rB,GAAgB/R,GAAI,EAAGE,GAAI,EAAGsC,MAAO,I9BklFrC0Q,KACA,SAAUptB,EAAQC,EAAqBC,GAE7C,YACqB,IAAI+S,GAA8E/S,EAAoB,QAClGgT,EAAsFhT,EAAoBkJ,EAAE6J,GAC5GE,EAAqEjT,EAAoB,QACzFkT,EAA6ElT,EAAoBkJ,EAAE+J,GACnGE,EAAkEnT,EAAoB,QACtFoT,EAA0EpT,EAAoBkJ,EAAEiK,GAChGE,EAAgFrT,EAAoB,QACpGsT,EAAwFtT,EAAoBkJ,EAAEmK,GAC9GE,EAA+DvT,EAAoB,QACnFwT,EAAuExT,EAAoBkJ,EAAEqK,GAC7FE,EAAgDzT,EAAoB,Q+BnmFxEmtB,E/B2mFM,SAAUtZ,G+B1mFnC,QAAAsZ,KAAe,MAAAja,KAAAzJ,KAAA0jB,GAAA7Z,IAAA7J,MAAA0jB,EAAApZ,WAAAf,IAAAma,IAAAnZ,KAAAvK,O/BooFf,MAzBA+J,KAAuE2Z,EAAsBtZ,GAQ7FT,IAA0E+Z,IACxEzjB,IAAK,aACLC,MAAO,W+BhnFP,kC/BonFAD,IAAK,eACLC,MAAO,W+B/mFP,4S/BmnFAD,IAAK,cACLC,MAAO,W+BxmFP,4C/B6mFKwjB,G+BroFyC1Z,EAAA,E/BwoFrB1T,GAAuB,EAAI,GAIlDqtB,KACA,SAAUttB,EAAQC,EAAqBC,GAE7C,YgC9oFe,SAASqtB,GAAUlsB,GAChC,IAAKA,EAAM,MAAO+N,GAAAhL,EAAQ4J,OAAO,eACjC,IAAIwf,GAAUnsB,EAAKosB,MACnB,KAAKD,EAAS,MAAOpe,GAAAhL,EAAQ4J,OAAO,eAEpC,IAAI0f,GAAiBC,EAAYpnB,IAAIinB,EACrC,OAAIE,GAAuBte,EAAAhL,EAAQ2J,QAAQ2f,GAEpCxtB,EAAAQ,EAAAktB,EAAA,GAAQvsB,GAAM+I,KAAK,SAAAQ,GAExB,MADA+iB,GAAY1O,IAAI5d,EAAMuJ,GACfA,IhCqoFsB3K,EAAuB,EAAIstB,CACvC,IAAIle,GAA8DnP,EAAoB,QAClFkP,EAAsElP,EAAoBkJ,EAAEiG,GAC5Fwe,EAA0D3tB,EAAoB,QAC9E4tB,EAAkE5tB,EAAoBkJ,EAAEykB,GACxFD,EAA+C1tB,EAAoB,QgCvpFxFytB,EAAc,GAAAG,GAAA1pB,GhC6qFZ2pB,KACA,SAAU/tB,EAAQC,EAAqBC,GAE7C,YiC5qFe,SAAS8tB,KAQtB,QAAStsB,GAAUuU,EAAYgY,GAC7B,GAAIC,GAAcC,EAAY5nB,IAAI0P,EAC9BiY,IACFA,EAAY1qB,UAEd2qB,EAAYlP,IAAIhJ,EAAYgY,GAG9B,QAASrpB,GAAehB,GACtBwqB,EAAiBxqB,EACjBuqB,EAAY7K,QAAQ+K,GAGtB,QAASA,GAAmBptB,EAAOgV,GACjChV,EAAML,cAAcwtB,EAAgBnY,GArBtC,GACImY,GADAD,EAAc,GAAAG,GAAAlqB,CAElB,QACEQ,iBACAlD,ajCwqF6BzB,EAAuB,EAAI+tB,CACvC,IAAIO,GAA0DruB,EAAoB,QAC9EouB,EAAkEpuB,EAAoBkJ,EAAEmlB,IAkC3GC,KACA,SAAUxuB,EAAQC,EAAqBC,GAE7C,YkCjtFe,SAASuuB,GAAWjU,EAAQkU,GACzC,GAAIC,GAAS,EACTC,EAAS,EACTC,EAAY,CAMhB,QACEC,eADK,SACUC,GACb,GAAI7U,GAAK6U,EAAa7rB,EAClBkX,EAAK2U,EAAa5rB,CAGP,IADD0rB,EAAYE,EAAarS,OAEnChI,KAAKC,IAAIuF,EAAKyU,GATG,KAUjBja,KAAKC,IAAIyF,EAAKwU,GAVG,MAerBD,EAASzU,EACT0U,EAASxU,EACTyU,EAAYE,EAAarS,MAEzBgS,EAA0BK,KAG5BC,SApBK,WAqBH,MAAOxU,KArCbva,EAAA,EAAAwuB,GlCmwFMQ,KACA,SAAUjvB,EAAQC,EAAqBC,GAE7C,YAEiEA,GAAoB,QAClBA,EAAoB,SA6FjFgvB,KACA,SAAUlvB,EAAQC,EAAqBC,GAE7C,YmCh2Fe,SAASivB,GAAoB/uB,GAY1C,QAASoD,KACPiW,OAAOmB,oBAAoB,YAAawU,GAAa,GACrD3V,OAAOmB,oBAAoB,YAAayU,GAAc,GACtD5V,OAAOmB,oBAAoB,aAAc0U,GAAc,GACvD7V,OAAOmB,oBAAoB,YAAa2U,GAAa,GAGvD,QAASD,GAAa9iB,GACpB,GAAIgjB,GAAahjB,EAAEijB,QAAQ,EACtBD,KAELE,EAASF,EAAW/S,QAAS+S,EAAW7S,SACxCgT,EAASH,EAAW/S,QAAS+S,EAAW7S,UAG1C,QAAS4S,GAAY/iB,GACnB,GAAIgjB,GAAahjB,EAAEijB,QAAQ,EACtBD,IACLG,EAASH,EAAW/S,QAAS+S,EAAW7S,SAG1C,QAASyS,GAAY5iB,GAAKmjB,EAASnjB,EAAEiQ,QAASjQ,EAAEmQ,SAEhD,QAAS0S,GAAa7iB,GAAKkjB,EAASljB,EAAEiQ,QAASjQ,EAAEmQ,SAEjD,QAASgT,GAASlT,EAASE,GACzBvc,EAAIkF,OAAOG,OAASmqB,EAAqBnT,GACzCrc,EAAIkF,OAAOI,OAASmqB,EAAqBlT,GAG3C,QAAS+S,GAASjT,EAASE,GACzBvc,EAAIkF,OAAOC,OAASqqB,EAAqBnT,GACzCrc,EAAIkF,OAAOE,OAASqqB,EAAqBlT,GAG3C,QAASiT,GAAqBnT,GAC5B,GAAIvC,IAAMuC,EAAUpC,EAAWE,MAAMF,EAAWpK,KAChD,QAAQtK,EAAKM,KAAON,EAAKG,MAAQoU,EAAKvU,EAAKG,KAG7C,QAAS+pB,GAAqBlT,GAC5B,GAAIvC,GAAK,GAAOuC,EAAUtC,EAAWC,KAAKD,EAAWnK,MACrD,QAAQvK,EAAKI,KAAOJ,EAAKO,MAAQkU,EAAKzU,EAAKO,KAtDE,GAC1CmU,GAAoBja,EAApBia,WAAY1U,EAAQvF,EAARuF,IAOjB,OALA8T,QAAOxK,iBAAiB,YAAamgB,GAAa,GAClD3V,OAAOxK,iBAAiB,YAAaogB,GAAc,GACnD5V,OAAOxK,iBAAiB,aAAcqgB,GAAc,GACpD7V,OAAOxK,iBAAiB,YAAasgB,GAAa,IAGhD/rB,WAlBJvD,EAAA,EAAAkvB,GnCs7FMW,KACA,SAAU9vB,EAAQC,EAAqBC,GAE7C,YoC56Fe,SAAS6vB,GAAqB3vB,GA+B3C,QAAS4vB,KACHjY,GAAaA,EAAYpV,QAE7B,IAAMstB,GAAY,GAAIC,GAAA,EAAkB9vB,EAAIwC,UAC5CmV,GAAcxV,EAAA,EAAKC,cAAcC,EAAIwtB,EAAU5tB,gBAAgB8tB,GAAqBF,EAAU9tB,qBAGhG,QAASoC,KACF4rB,IAEL/vB,EAAIiF,OAAS,EACbjF,EAAI8E,UAAYwP,KAAK0b,SAGjBvjB,GAAcA,EAAaI,iBAE/BpL,EAAsB0C,4BAGxB,QAASyT,KACPgY,IAGF,QAASluB,GAAWke,GAClB5f,EAAIiF,MAAQ,EACZ8qB,EAAqBnQ,EACrBne,EAAsBC,WAAWke,GAEjCgQ,IAGF,QAAS/sB,KACPG,EAA0BhD,EAAIgD,wBAC9BkE,EAAelE,EAA0BA,CACzC,IAAIitB,GAAkB,GAAIloB,cAAab,GACnCgpB,EAAiB,GAAI5oB,YAA0B,EAAfJ,GAChCipB,EAAiB,GAAI7oB,YAA0B,EAAfJ,EAEpC/F,SAAQC,IAAI,sBAAsB8F,EAKlC,KAAK,GAHDxB,GAAO1F,EAAIuF,KAAKG,KAAUC,EAAO3F,EAAIuF,KAAKI,KAC1CkK,EAAQ7P,EAAIuF,KAAKM,KAAOH,EACxBoK,EAAS9P,EAAIuF,KAAKO,KAAOH,EACpBrF,EAAI,EAAGA,EAAI4G,EAAc5G,IAChCR,EAAAQ,EAAA8vB,EAAA,GAAiB9b,KAAK0b,SAAYngB,EAAQnK,EAAMwqB,EAAoB,EAAJ5vB,GAChER,EAAAQ,EAAA8vB,EAAA,GAAiB9b,KAAK0b,SAAYlgB,EAASnK,EAAMwqB,EAAoB,EAAJ7vB,GAEjE2vB,EAAgB3vB,GAAKA,CAGnB+vB,IAAqBhuB,EAAGiuB,aAAaD,GACzCA,EAAsBluB,EAAA,EAAKmN,aAAajN,EAAI4tB,GAE5CxuB,EAAsBoB,qBAAqBqtB,EAAgBC,GAG7D,QAASjV,KACP,GAAK6U,EAAL,CAEA,GAAIvsB,GAAUmU,CACdtV,GAAG+B,WAAWZ,EAAQA,SAEtBrB,EAAA,EAAKkC,cAAchC,EAAIguB,EAAqB7sB,EAAQ+sB,QAAS,GAE7D9uB,EAAsB8B,cAAcC,GACpCxD,EAAIE,OAAOsE,eAAehB,GAE1BnB,EAAGuC,UAAUpB,EAAQuB,IAAK/E,EAAIgF,qBAC9B3C,EAAGuC,UAAUpB,EAAQyB,MAAOjF,EAAIiF,OAChC5C,EAAGuC,UAAUpB,EAAQgtB,gBAAiBxtB,EACtC,IAAIuC,GAAOvF,EAAIuF,IACflD,GAAGmD,UAAUhC,EAAQiC,MAAOF,EAAKG,KAAMH,EAAKI,MAC5CtD,EAAGmD,UAAUhC,EAAQoC,MAAOL,EAAKM,KAAMN,EAAKO,KAE5C,IAAIZ,GAASlF,EAAIkF,MACjB7C,GAAGqB,UAAUF,EAAQ0B,OAAQA,EAAOC,OAAQD,EAAOE,OAAQF,EAAOG,OAAQH,EAAOI,QACjFjD,EAAGoE,WAAWpE,EAAGouB,OAAQ,EAAGvpB,IA1G9B,GAEIlE,GAAyBqtB,EACzBnpB,EAIAuF,EAEAkL,EATAtV,EAAKrC,EAAIqC,GAKT0tB,EAAqB,GACrBtuB,EAAwB3B,EAAAQ,EAAAowB,EAAA,GAA0B1wB,EAMtD,OAQA,YAEE4vB,IAEIe,EAAA,EAAOC,iBACLnkB,GAAcA,EAAarJ,UAC/BqJ,EAAe3M,EAAAQ,EAAAuwB,EAAA,GAAmB7wB,QAbpC6C,uBACAsB,2BACA+W,gBACAxZ,aACAkW,mBpC25F6B/X,EAAuB,EAAI8vB,CACvC,IAAIxtB,GAA0CrC,EAAoB,QAC9DgwB,EAA+DhwB,EAAoB,QACnF4wB,EAAuD5wB,EAAoB,QAC3EswB,EAAuDtwB,EAAoB,QAC3E6wB,EAAwC7wB,EAAoB,QAC5D+wB,EAA8C/wB,EAAoB,SA+HrFgxB,KACA,SAAUlxB,EAAQC,EAAqBC,GAE7C,YqC5jGe,SAASixB,GAAkB1uB,EAAIY,EAAYD,GAoBxD,QAASguB,GAAsBxtB,GAC7BytB,EAAS/N,QAAQ,SAAAgO,GACf7uB,EAAGsC,UAAUnB,EAAQ,eAAiB0tB,EAAM3vB,MAAO2vB,EAAMC,SAI7D,QAAS/tB,KACP6tB,EAAS/N,QAAQ,SAAAgO,GAAA,MAAS7uB,GAAGuK,cAAcskB,EAAM3qB,WAGnD,QAASrC,GAAa7B,EAAImB,GACxBytB,EAAS/N,QAAQ,SAACgO,GAChB/uB,EAAA,EAAOuC,YAAYrC,EAAI6uB,EAAM3qB,QAAS2qB,EAAMC,OAC5C9uB,EAAGsC,UAAUnB,EAAQ,eAAiB0tB,EAAM3vB,MAAO2vB,EAAMC,SAhC7D,GAAIF,GAAWhuB,EAAWmuB,IAAI,SAACtc,EAAGqc,GAOhC,OALE5qB,QAASpE,EAAA,EAAOkL,cAAchL,EAAIA,EAAGiL,QAASwH,EAAE5R,cAAeF,EAAyBA,GACxFmuB,MAAOA,EACP5vB,KAAMuT,EAAEvT,OAMZ,QACE6B,UACAc,eACA8sB,wBACA/qB,OAAQhD,EAAWgD,OACnBgrB,WACA9qB,IANK,SAMD7F,GAAK,MAAO2wB,GAAS3wB,KrC4iGIT,EAAuB,EAAIkxB,CqCnkG5D,IAAA5uB,GAAArC,EAAA,SrCunGMuxB,KACA,SAAUzxB,EAAQC,EAAqBC,GAE7C,YACqB,IAAIwxB,GAA0CxxB,EAAoB,QsCznGjFyxB,GAEJX,gBAAgB,EAGhBY,oBAAoB,EAGpBzb,kBAAmB,EAGnB0b,aAAcH,EAAA,EAASvQ,QAAQ5a,IAAI,kBAAmB,EAGxDtG,GAAA,KtCgoGM6xB,KACA,SAAU9xB,EAAQC,EAAqBC,GAE7C,YuCxoGe,SAAS6xB,GAAiBnnB,GACvC,IAAKA,EAAM,MAAO,IAAAwE,GAAAhL,EAAY,SAAA2J,GAAA,MAAWA,GAAQikB,IAEjD,IAAIC,GAAcC,EAAkBtnB,EACpC,OAAIqnB,GAAYE,QAAQ9rB,OAAS,EACxB+I,EAAAhL,EAAQguB,IAAIH,EAAYE,SAAS/nB,KAAK,iBAAM6nB,KAChDvlB,MAAM,SAAAxL,GAAW,OAAQA,OAAQA,YAG/B,GAAAkO,GAAAhL,EAAY,SAAA2J,GAAA,MAAWA,GAAQkkB,KAGxC,QAASC,GAAkBtnB,GAoBzB,QAASN,KACP,MAAO+nB,GAAYhmB,KAAK,MAG1B,QAASimB,GAAchnB,GACrB,GAAoC,IAAhCA,EAAKa,QAAQomB,GAAsB,CACrC,GAAIC,GAAUlnB,EAAKE,OAAO+mB,EAAclsB,QACpCosB,EAAcC,CAClBP,GAAQ3xB,KAAKN,EAAAQ,EAAAiyB,EAAA,GAAUH,GAASpoB,KAAK,SAAAQ,GACnCynB,EAAYI,GAAe7nB,MA5BjC,GAAIunB,MACAS,EAAQhoB,EAAKioB,MAAM,MACnBR,KACAK,EAAe,CAWnB,OAVAE,GAAMtP,QAAQ,SAAChY,EAAMimB,GACnBmB,EAAenB,EACXjmB,GAAoB,MAAZA,EAAK,IACf+mB,EAAY7xB,KAAK,IACjB8xB,EAAchnB,IAEd+mB,EAAY7xB,KAAK8K,MAKnBhB,UACA6nB,WvC4mG6BlyB,EAAuB,EAAI8xB,CACvC,IAAI1iB,GAA8DnP,EAAoB,QAClFkP,EAAsElP,EAAoBkJ,EAAEiG,GAC5FsjB,EAA8CzyB,EAAoB,QuCrpGvFqyB,EAAgB,YAChBP,GAAapnB,KAAM,KvCytGjBkoB,KACA,SAAU9yB,EAAQC,EAAqBC,GAE7C,YACqB,IAAI+S,GAA8E/S,EAAoB,QAClGgT,EAAsFhT,EAAoBkJ,EAAE6J,GAC5GE,EAAqEjT,EAAoB,QACzFkT,EAA6ElT,EAAoBkJ,EAAE+J,GACnGE,EAAkEnT,EAAoB,QACtFoT,EAA0EpT,EAAoBkJ,EAAEiK,GAChGE,EAAgFrT,EAAoB,QACpGsT,EAAwFtT,EAAoBkJ,EAAEmK,GAC9GE,EAA+DvT,EAAoB,QACnFwT,EAAuExT,EAAoBkJ,EAAEqK,GAC7FE,EAAgDzT,EAAoB,QwCxuGxE6yB,ExCgvGE,SAAUhf,GwC/uG/B,QAAAgf,GAAYC,GAAQ5f,IAAAzJ,KAAAopB,EAAA,IAAA/e,GAAAR,IAAA7J,MAAAopB,EAAA9e,WAAAf,IAAA6f,IAAA7e,KAAAvK,MAAA,OAIlBqK,GAAK4O,OAASoQ,GAAUA,EAAOpQ,OAC/B5O,EAAKif,WAAcD,GAAUA,EAAOE,SAAY,MAL9Blf,ExCgxGpB,MAhCAN,KAAuEqf,EAAkBhf,GAczFT,IAA0Eyf,IACxEnpB,IAAK,aACLC,MAAO,WwCvvGP,GAAIF,KAAKiZ,OAET,4DxC4vGAhZ,IAAK,cACLC,MAAO,WwCrvGP,MAAIF,MAAKiZ,OACP,yGAGMjZ,KAAKspB,WAHX,mCAIMtpB,KAAKspB,WAJX,yBAOF,gBACStpB,KAAKspB,WADd,mCAEStpB,KAAKspB,WAFd,4BxCqvGKF,GwCjxGqCpf,EAAA,ExCoxGjB1T,GAAuB,EAAI,KAIrD","file":"static/js/app.1131a9f313620402904f.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ \"/eR5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createInputsModel;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__programs_inputs_inputCollection__ = __webpack_require__(\"n67P\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__programs_inputs_videoInput__ = __webpack_require__(\"p2DF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__programs_inputs_imageInput__ = __webpack_require__(\"I6d+\");\n\n\n\n\n// Allows to bind media elements to vector field\nfunction createInputsModel(ctx) {\n  ctx.inputs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__programs_inputs_inputCollection__[\"a\" /* default */])();\n  var inputs = [];\n\n  var api = {\n    getInputs: getInputs,\n    addInput: addInput\n  };\n\n  return api;\n\n  function getInputs() {\n    return inputs;\n  }\n\n  function addInput() {\n    inputs.push(createInputElementViewModel(ctx));\n  }\n}\n\nfunction createInputElementViewModel(ctx) {\n  var pendingUpdate = null;\n\n  var input = {\n    link: '',\n    error: null,\n    name: 'input0',\n    updateBinding: updateBinding\n  };\n\n  return input;\n\n  function updateBinding() {\n    if (pendingUpdate) {\n      clearTimeout(pendingUpdate);\n      pendingUpdate = null;\n    }\n\n    pendingUpdate = setTimeout(setBinding, 300);\n  }\n\n  function setBinding() {\n    input.error = null;\n    pendingUpdate = null;\n    var binding = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__programs_inputs_imageInput__[\"a\" /* default */])(ctx, input.link, {\n      done: function done() {\n        // TODO: Preview\n        console.log('ok');\n      },\n      error: function error(err) {\n        // TODO: Better Error checking\n        input.error = err;\n      }\n    });\n    ctx.inputs.bindInput(0, binding);\n  }\n}\n\n/***/ }),\n\n/***/ \"3xg8\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = updatePositionProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph__ = __webpack_require__(\"Qv35\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__colorModes__ = __webpack_require__(\"6c6E\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__colorProgram__ = __webpack_require__(\"gIFv\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__ = __webpack_require__(\"pXNl\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__ = __webpack_require__(\"V39N\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__bus__);\n\n\n\n\n\n\n\n\n\nvar particlePositionShaderCodeBuilder = new __WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph__[\"a\" /* default */]();\n\nfunction updatePositionProgram(ctx) {\n  var gl = ctx.gl;\n  var readTextures, writeTextures;\n  var particleStateResolution;\n  var updateProgram;\n  var uniformParticleColor = { r: 77 / 255, g: 188 / 255, b: 201 / 255, a: 1 };\n  var readVelocity = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__colorProgram__[\"a\" /* default */])(ctx);\n\n  // If someone needs to get vectors out from the GPU, they send a `vector-lines-request`\n  // over the bus. This request is delayed until next compute frame. Once it is handled,\n  // we send them back response with calculated vectors.\n  var pendingVectorLines;\n\n  // TODO: need to make sure we are not leaking.\n  __WEBPACK_IMPORTED_MODULE_7__bus___default.a.on('vector-lines-request', putVectorLinesRequestIntoQueue);\n\n  return {\n    updateCode: updateCode,\n    updateParticlesPositions: updateParticlesPositions,\n    updateParticlesCount: updateParticlesCount,\n    prepareToDraw: prepareToDraw\n  };\n\n  function updateCode(vectorField) {\n    particlePositionShaderCodeBuilder.setCustomVectorField(vectorField);\n    var fragment = particlePositionShaderCodeBuilder.getFragmentShader();\n    var vertex = particlePositionShaderCodeBuilder.getVertexShader();\n\n    var newProgram = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createProgram(gl, vertex, fragment);\n\n    if (updateProgram) updateProgram.unload();\n    updateProgram = newProgram;\n\n    if (ctx.colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) readVelocity.requestSpeedUpdate();\n  }\n\n  function updateParticlesCount(x, y) {\n    particleStateResolution = ctx.particleStateResolution;\n\n    var dimensions = [{\n      name: 'x',\n      particleState: x\n    }, {\n      name: 'y',\n      particleState: y\n    }];\n\n    if (readTextures) readTextures.dispose();\n    readTextures = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, particleStateResolution);\n\n    if (writeTextures) writeTextures.dispose();\n    writeTextures = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, particleStateResolution);\n\n    readVelocity.updateParticlesCount();\n  }\n\n  function prepareToDraw(program) {\n    var colorMode = ctx.colorMode;\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].UNIFORM) gl.uniform4f(program.u_particle_color, uniformParticleColor.r, uniformParticleColor.g, uniformParticleColor.b, uniformParticleColor.a);else if (colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) readVelocity.setColorMinMax(program);\n\n    readTextures.bindTextures(gl, program);\n  }\n\n  function updateParticlesPositions() {\n    var program = updateProgram;\n    gl.useProgram(program.program);\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n\n    ctx.inputs.updateBindings(program);\n\n    // TODO: Remove this.\n    if (ctx.audioTexture) {\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, ctx.audioTexture, 5);\n      gl.uniform1i(program['u_audio'], 5);\n    }\n\n    readTextures.bindTextures(gl, program);\n\n    gl.uniform1f(program.u_rand_seed, ctx.frameSeed);\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    gl.uniform1f(program.u_drop_rate, ctx.dropProbability);\n\n    // Draw each coordinate individually\n    for (var i = 0; i < writeTextures.length; ++i) {\n      var writeInfo = writeTextures.get(i);\n      gl.uniform1i(program.u_out_coordinate, i);\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n      gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n\n    // TODO: I think I need to keep this time-bound, i.e. allocate X ms to\n    // process particle positions, and move on. So that the rendering thread is not paused for too long\n    if (ctx.colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) {\n      readVelocity.updateParticlesPositions(program);\n    }\n\n    if (pendingVectorLines) {\n      processVectorLinesRequest(program);\n      pendingVectorLines = null;\n    }\n\n    // swap the particle state textures so the new one becomes the current one\n    var temp = readTextures;\n    readTextures = writeTextures;\n    writeTextures = temp;\n  }\n\n  function putVectorLinesRequestIntoQueue(request) {\n    pendingVectorLines = request;\n  }\n\n  function processVectorLinesRequest(program) {\n    // TODO: Move this out\n    var dimensions = [{\n      name: 'x',\n      particleState: pendingVectorLines.x\n    }, {\n      name: 'y',\n      particleState: pendingVectorLines.y\n    }];\n\n    // We create temporary textures and load requested positions in there\n    var resolutionOfParticlesInRequest = pendingVectorLines.resolution;\n    var numParticles = resolutionOfParticlesInRequest * resolutionOfParticlesInRequest;\n\n    var texturesForRead = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, resolutionOfParticlesInRequest);\n    var texturesForWrite = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, resolutionOfParticlesInRequest);\n\n    texturesForRead.bindTextures(gl, program);\n\n    // Then we request coordinates out from GPU for each dimension\n    var writeInfo = texturesForWrite.get(0);\n    gl.uniform1i(program.u_out_coordinate, 6); // v_x\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_x = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    gl.uniform1i(program.u_out_coordinate, 7); // v_y\n    writeInfo = texturesForWrite.get(1);\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_y = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    texturesForWrite.dispose();\n    texturesForRead.dispose();\n\n    var xStats = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__[\"a\" /* default */])();\n    var yStats = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__[\"a\" /* default */])();\n\n    var decoded_velocity_x = new Float32Array(numParticles);\n    var decoded_velocity_y = new Float32Array(numParticles);\n    for (var i = 0; i < velocity_y.length; i += 4) {\n      var idx = i / 4;\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      decoded_velocity_x[idx] = vx;\n      decoded_velocity_y[idx] = vy;\n      xStats.add(vx);\n      yStats.add(vy);\n    }\n\n    var vectorLineInfo = {\n      xStats: xStats,\n      yStats: yStats,\n      decoded_velocity_x: decoded_velocity_x,\n      decoded_velocity_y: decoded_velocity_y,\n      resolution: resolutionOfParticlesInRequest\n    };\n\n    __WEBPACK_IMPORTED_MODULE_7__bus___default.a.fire('vector-line-ready', vectorLineInfo);\n  }\n}\n\nfunction readFloat(buffer, offset) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__[\"b\" /* decodeFloatRGBA */])(buffer[offset + 0], buffer[offset + 1], buffer[offset + 2], buffer[offset + 3]);\n}\n\n/***/ }),\n\n/***/ \"4KA4\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);\n\n\n\nvar BaseShaderNode = function () {\n  function BaseShaderNode() {\n    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, BaseShaderNode);\n  }\n\n  __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(BaseShaderNode, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      return '';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '';\n    }\n  }]);\n\n  return BaseShaderNode;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (BaseShaderNode);\n\n/***/ }),\n\n/***/ \"6c6E\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Various color modes.\n * \n * TODO: This could be generalized by allowing custom color shader\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  /**\n   * Each particle gets its own color\n   */\n  UNIFORM: 1,\n\n  /**\n   * Color of a particle depends on its velocity\n   */\n  VELOCITY: 2,\n\n  /**\n   * Color of a particle depends on its velocity vector angle.\n   */\n  ANGLE: 3\n});\n\n/***/ }),\n\n/***/ \"85ps\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getParsedVectorFieldFunction;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pragmaParser__ = __webpack_require__(\"svlg\");\n/**\n * This module parses user defined vector field code.\n */\n\n\n\n\n// This is naive parser that is being used until the real `glsl-parser`\n// is loaded asynchronously. This parser assumes there are no errors\n// TODO: maybe I should be more careful here?\nvar glslParser = {\n  check: function check(code) {\n    return {\n      code: code,\n      log: {\n        errorCount: 0\n      }\n    };\n  }\n};\n\n// glsl-parser is ~179KB uncompressed, we don't want to wait until it is downloaded.\n// So we load it asynchronously...\n__webpack_require__.e/* require.ensure */(2).then((function () {\n  // ... and replace the naive parser with the real one, when ready.\n  glslParser = __webpack_require__(\"TFw8\");\n\n  // notify interested parties, so that they can recheck code if they wish.\n  __WEBPACK_IMPORTED_MODULE_0__bus___default.a.fire('glsl-parser-ready');\n}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n\nvar vectorFieldGlobals = '\\nimport {\\n  float PI;\\n  float snoise(vec2 v);\\n  float frame;\\n  vec4 cursor;\\n  vec2 rotate(vec2 p,float a);\\n  float audio(float index);\\n  sampler2D input0;\\n  sampler2D input1;\\n}';\n\n/**\n * Given a string, verifies that it is a valid glsl code for a vector field,\n * and then returns code + log.\n * \n * @param {String} vectorFieldCode \n */\nfunction getParsedVectorFieldFunction(vectorFieldCode) {\n  // TODO: what if we want to support 3d?\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__pragmaParser__[\"a\" /* default */])(vectorFieldCode).then(function (pragmaParseResult) {\n    if (pragmaParseResult.error) {\n      return pragmaParseResult;\n    }\n\n    vectorFieldCode = pragmaParseResult.getCode();\n\n    var parserResult = glslParser.check(vectorFieldCode, { globals: vectorFieldGlobals });\n    parserResult.code = vectorFieldCode;\n\n    if (parserResult.log.errorCount) parserResult.error = parserError(parserResult.log);\n\n    return parserResult;\n  });\n}\n\nfunction parserError(log) {\n  var diag = log.diagnostics[0];\n  // TODO probably need to check kind (errors are 0, warnings are 1)\n  var firstError = diag.range;\n  var lineColumn = firstError.lineColumn();\n  var source = firstError.source;\n  var offset = source._lineOffsets[lineColumn.line];\n  var line = source.contents.substr(offset, lineColumn.column);\n  line += source.contents.substring(firstError.start, firstError.end);\n  var prefix = 'Line ' + lineColumn.line + ': ';\n  var diagText = diag.text;\n  return {\n    error: prefix + line + '\\n' + whitespace(prefix.length) + whitespace(lineColumn.column) + '^',\n    errorDetail: diagText,\n    isFloatError: isFloatError(diagText)\n  };\n}\n\nfunction isFloatError(diagText) {\n  return diagText.indexOf('\"int\"') > -1 && diagText.indexOf('\"float\"') > -1;\n}\n\nfunction whitespace(length) {\n  return new Array(length + 1).join(' ');\n}\n\n/***/ }),\n\n/***/ \"94y8\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__gl_utils__ = __webpack_require__(\"Ddjs\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (audioProgram);\n\nfunction audioProgram(ctx) {\n  var gl = ctx.gl;\n\n  var audioWidth = 8,\n      audioHeight = 8;\n  var audioBuffer = new Uint8Array(audioWidth * audioHeight * 4);\n  var audioTexture = __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, audioBuffer, audioWidth, audioHeight);\n  var audioDirty = false;\n  ctx.audioTexture = audioTexture;\n\n  __WEBPACK_IMPORTED_MODULE_0__bus___default.a.on('audio', updateAudioBuffer);\n\n  return {\n    updateTextures: updateTextures,\n    dispose: dispose\n  };\n\n  function dispose() {\n    __WEBPACK_IMPORTED_MODULE_0__bus___default.a.off('audio', updateAudioBuffer);\n    gl.deleteTexture(audioTexture);\n  }\n\n  function updateTextures() {\n    if (!audioDirty) return;\n    audioDirty = false;\n\n    // TODO: This should come from fftSize?\n    var width = 5,\n        height = 5;\n    gl.bindTexture(gl.TEXTURE_2D, audioTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, audioBuffer);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  function updateAudioBuffer(newBuffer) {\n    audioBuffer = newBuffer;\n    audioDirty = true;\n  }\n}\n\n/***/ }),\n\n/***/ \"C8nW\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = request;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(\"//Fk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n\n/**\n * XMLHttpRequest wrapped into a promise.\n * \n * @param {String} url \n */\nfunction request(url, options) {\n  if (!options) options = {};\n\n  return new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a(download);\n\n  function download(resolve, reject) {\n    var req = new XMLHttpRequest();\n\n    if (typeof options.progress === 'function') {\n      req.addEventListener('progress', updateProgress, false);\n    }\n\n    req.addEventListener('load', transferComplete, false);\n    req.addEventListener('error', transferFailed, false);\n    req.addEventListener('abort', transferCanceled, false);\n\n    req.open('GET', url);\n    if (options.responseType) {\n      req.responseType = options.responseType;\n    }\n    req.send(null);\n\n    function updateProgress(e) {\n      if (e.lengthComputable) {\n        options.progress({\n          loaded: e.loaded,\n          total: e.total,\n          percent: e.loaded / e.total\n        });\n      }\n    }\n\n    function transferComplete() {\n      if (req.status !== 200) {\n        reject('Unexpected status code ' + req.status + ' when calling ' + url);\n        return;\n      }\n      var response = req.response;\n\n      if (options.responseType === 'json' && typeof response === 'string') {\n        // IE\n        response = JSON.parse(response);\n      }\n\n      resolve(response);\n    }\n\n    function transferFailed() {\n      reject('Failed to download ' + url);\n    }\n\n    function transferCanceled() {\n      reject('Cancelled download of ' + url);\n    }\n  }\n}\n\n/***/ }),\n\n/***/ \"Ddjs\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n * \n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n * \n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  createTexture: createTexture,\n  bindFramebuffer: bindFramebuffer,\n  createProgram: createProgram,\n  createBuffer: createBuffer,\n  bindAttribute: bindAttribute,\n  bindTexture: bindTexture\n});\n\nfunction bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\n\nfunction createBuffer(gl, data) {\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return buffer;\n}\n\nfunction createTexture(gl, filter, data, width, height) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  if (data instanceof Uint8Array) {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  }\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\n\nfunction bindFramebuffer(gl, framebuffer, texture) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (texture) {\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  }\n}\n\nfunction bindAttribute(gl, buffer, attribute, numComponents) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.enableVertexAttribArray(attribute);\n  gl.vertexAttribPointer(attribute, numComponents, gl.FLOAT, false, 0, 0);\n}\n\nfunction createProgram(gl, vertexSource, fragmentSource) {\n  var program = gl.createProgram();\n\n  var vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    throw new Error(gl.getProgramInfoLog(program));\n  }\n\n  var wrapper = {\n    program: program,\n    unload: unload\n  };\n\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  var i;\n  for (i = 0; i < numAttributes; i++) {\n    var attribute = gl.getActiveAttrib(program, i);\n    wrapper[attribute.name] = gl.getAttribLocation(program, attribute.name);\n  }\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (i = 0; i < numUniforms; i++) {\n    var uniform = gl.getActiveUniform(program, i);\n    wrapper[uniform.name] = gl.getUniformLocation(program, uniform.name);\n  }\n\n  return wrapper;\n\n  function unload() {\n    gl.deleteProgram(program);\n  }\n}\n\nfunction createShader(gl, type, source) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw new Error(gl.getShaderInfoLog(shader));\n  }\n\n  return shader;\n}\n\n/***/ }),\n\n/***/ \"DuZ1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__ = __webpack_require__(\"JjDM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__customInput__ = __webpack_require__(\"bvb0\");\n\n\n\n\n\n\n\n\n\nvar UserDefinedVelocityFunction = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(UserDefinedVelocityFunction, _BaseShaderNode);\n\n  function UserDefinedVelocityFunction(updateCode) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, UserDefinedVelocityFunction);\n\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (UserDefinedVelocityFunction.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(UserDefinedVelocityFunction)).call(this));\n\n    _this.updateCode = updateCode || '';\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(UserDefinedVelocityFunction, [{\n    key: 'setNewUpdateCode',\n    value: function setNewUpdateCode(newUpdateCode) {\n      this.updateCode = newUpdateCode;\n    }\n  }, {\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float frame;\\nuniform vec4 cursor;\\n// TODO: use inputN instead.\\nuniform sampler2D u_audio;\\n\\n#define PI 3.1415926535897932384626433832795\\n\\n' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__customInput__[\"a\" /* getInputUniforms */])() + '\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      // TODO: Do I need to worry about \"glsl injection\" (i.e. is there potential for security attack?)\n      // TODO: Do I need to inject snoise only when it's used?\n      return '\\n' + __WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__[\"a\" /* default */] + '\\n\\nvec2 rotate(vec2 p,float a) {\\n\\treturn cos(a)*p+sin(a)*vec2(p.y,-p.x);\\n}\\n\\n// TODO: This will change. Don\\'t use it.\\nfloat audio(float index) {\\n  float rgbI = floor(index/4.);\\n  vec2 txPos = vec2(fract(rgbI / 5.), floor(rgbI / 5.) / 5.);\\n  vec4 rgba = texture2D(u_audio, txPos);\\n  \\n  float offset = mod(index, 4.);\\n  if (offset == 0.) return rgba[0];\\n  if (offset == 1.) return rgba[1];\\n  if (offset == 2.) return rgba[2];\\n  return rgba[3];\\n}\\n\\n' + (this.updateCode ? this.updateCode : 'vec2 get_velocity(vec2 p) { return vec2(0.); }') + '\\n  ';\n    }\n  }]);\n\n  return UserDefinedVelocityFunction;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (UserDefinedVelocityFunction);\n\n/***/ }),\n\n/***/ \"FaU1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = encodeFloatRGBA;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = decodeFloatRGBA;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2__ = __webpack_require__(\"yI0F\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2__);\n\n/**\n * This file encodes/decodes float values into 32bit rgba array\n * \n * It is based on https://computergraphics.stackexchange.com/questions/4151/webgl-packing-unpacking-functions-that-can-roundtrip-all-typical-32-bit-floats\n * and it is not perfect. If you know how to improve it - please let me know.\n */\n\n/**\n * Encodes float value into output array\n * @param {float} val - value to be encode\n * @param {Uint8Array} out  - array where encoded value needs to be written.\n * @param {Number} writeOffset - offset in the original array where values should be written.\n */\nfunction encodeFloatRGBA(val, out, writeOffset) {\n  if (val == 0.0) {\n    out[writeOffset + 0] = 0;out[writeOffset + 1] = 0;out[writeOffset + 2] = 0;out[writeOffset + 3] = 0;\n    return;\n  }\n\n  var mag = Math.abs(val);\n  var exponent = Math.floor(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2___default()(mag));\n  // Correct log2 approximation errors.\n  exponent += exp2(exponent) <= mag / 2.0 ? 1 : 0;\n  exponent -= exp2(exponent) > mag ? 1 : 0;\n\n  var mantissa;\n  if (exponent > 100.0) {\n    mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\n  } else {\n    mantissa = mag / exp2(exponent) - 1.0;\n  }\n\n  var a = exponent + 127.0;\n  mantissa *= 256.0;\n  var b = Math.floor(mantissa);\n  mantissa -= b;\n  mantissa *= 256.0;\n  var c = Math.floor(mantissa);\n  mantissa -= c;\n  mantissa *= 128.0;\n  var d = Math.floor(mantissa) * 2.0 + (val < 0.0 ? 1 : 0);\n\n  out[writeOffset + 0] = a;out[writeOffset + 1] = b;out[writeOffset + 2] = c;out[writeOffset + 3] = d;\n}\n\n/**\n * Given byte values in range [0..255] returns decoded float value.\n * \n * @param {Byte} r \n * @param {Byte} g \n * @param {Byte} b \n * @param {Byte} a \n */\nfunction decodeFloatRGBA(r, g, b, a) {\n  var A = Math.floor(r + 0.5);\n  var B = Math.floor(g + 0.5);\n  var C = Math.floor(b + 0.5);\n  var D = Math.floor(a + 0.5);\n\n  var exponent = A - 127.0;\n  var sign = 1.0 - D % 2.0 * 2.0;\n  var mantissa = (A > 0.0 ? 1 : 0) + B / 256.0 + C / 65536.0 + Math.floor(D / 2.0) / 8388608.0;\n  return sign * mantissa * exp2(exponent);\n}\n\nfunction exp2(exponent) {\n  return Math.exp(exponent * Math.LN2);\n}\n\n/***/ }),\n\n/***/ \"I6d+\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createImageInputBinding;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__loadTexture__ = __webpack_require__(\"egvE\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config__ = __webpack_require__(\"rvz5\");\n/**\n * Creates a single image binding element in the input collection.\n */\n\n\n\n\nvar FREE_TEXTURE_UNIT = __WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* default */].FREE_TEXTURE_UNIT;\n\nfunction createImageInputBinding(ctx, url, callbacks) {\n  var texture = null;\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__loadTexture__[\"a\" /* default */])(ctx.gl, url).then(setTexture).catch(handleError);\n\n  return {\n    updateBinding: updateBinding,\n    dispose: function dispose() {\n      // TODO: Potential race condition, as loadTexture is async.\n      ctx.gl.deleteTexture(texture);\n    }\n  };\n\n  function handleError(err) {\n    if (callbacks && callbacks.error) {\n      callbacks.error(err);\n    }\n  }\n\n  function setTexture(loadedTexture) {\n    texture = loadedTexture;\n    if (callbacks && callbacks.done) {\n      callbacks.done(url);\n    }\n  }\n\n  function updateBinding(program, inputIndex) {\n    var realIndex = inputIndex + FREE_TEXTURE_UNIT;\n    __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].bindTexture(ctx.gl, texture, realIndex);\n    ctx.gl.uniform1i(program['input' + inputIndex], realIndex);\n  }\n}\n\n/***/ }),\n\n/***/ \"JHsM\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = initScene;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__ = __webpack_require__(\"AMV0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float__ = __webpack_require__(\"5dBV\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__ = __webpack_require__(\"woOf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_panzoom__ = __webpack_require__(\"yBIK\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_panzoom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_panzoom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__appState__ = __webpack_require__(\"NEgR\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__wglPanZoom__ = __webpack_require__(\"p0IO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__programs_screenProgram__ = __webpack_require__(\"h62Y\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__programs_drawParticlesProgram__ = __webpack_require__(\"pKWO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__utils_cursorUpdater__ = __webpack_require__(\"p9aJ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__editor_vectorFieldState__ = __webpack_require__(\"c5hq\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__createInputsModel__ = __webpack_require__(\"/eR5\");\n\n\n\n/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n *\n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n *\n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Kicks offs the app rendering. Initialized before even vue is loaded.\n *\n * @param {WebGLRenderingContext} gl\n */\nfunction initScene(gl) {\n  // Canvas size management\n  var canvasRect = { width: 0, height: 0, top: 0, left: 0 };\n  setWidthHeight(gl.canvas.width, gl.canvas.height);\n  window.addEventListener('resize', onResize, true);\n\n  // Video capturing is available in super advanced mode. You'll need to install\n  // and start https://github.com/greggman/ffmpegserver.js\n  // Then type in the console: window.startRecord();\n  // This will trigger frame-by-frame recording (it is slow). To stop it, call window.stopRecord();\n  __WEBPACK_IMPORTED_MODULE_5__bus___default.a.on('start-record', startRecord);\n  __WEBPACK_IMPORTED_MODULE_5__bus___default.a.on('stop-record', stopRecord);\n  var currentCapturer = null;\n\n  // TODO: It feels like bounding box management needs to be moved out from here.\n  // TODO: bbox needs to be a class with width/height properties.\n  var bbox = __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getBBox() || {};\n  var currentPanZoomTransform = {\n    scale: 1,\n    x: 0,\n    y: 0\n  };\n\n  // How many particles do we want?\n  var particleCount = __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getParticleCount();\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n\n  // Context variable is a way to share rendering state between multiple programs. It has a lot of stuff on it.\n  // I found that it's the easiest way to work in state-full world of WebGL.\n  // Until I discover a better way to write WebGL code.\n  var ctx = {\n    gl: gl,\n    bbox: bbox,\n    canvasRect: canvasRect,\n\n    inputs: null,\n\n    framebuffer: gl.createFramebuffer(),\n\n    // This is used only to render full-screen rectangle. Main magic happens inside textures.\n    quadBuffer: __WEBPACK_IMPORTED_MODULE_3__gl_utils__[\"a\" /* default */].createBuffer(gl, new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1])),\n\n    colorMode: __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getColorMode(),\n\n    // This defines texture unit for screen rendering. First few indices are taken by textures\n    // that compute particles position/color\n    // TODO: I need to find a better way to manage this.\n    screenTextureUnit: 3,\n\n    integrationTimeStep: __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getIntegrationTimeStep(),\n\n    // On each frame the likelihood for a particle to reset its position is this:\n    dropProbability: __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getDropProbability(),\n\n    // current frame number. Reset every time when new shader is compiled\n    frame: 0,\n\n    // Information about mouse cursor. Could be useful to simplify\n    // exploration\n    cursor: {\n      // Where mouse was last time clicked (or tapped)\n      clickX: 0, clickY: 0,\n      // where mouse was last time moved. If this is a touch device\n      // this is the same as clickX, clickY\n      hoverX: 0, hoverY: 0\n    },\n\n    // Texture size to store particles' positions\n    particleStateResolution: 0,\n\n    // How quickly we should fade previous frame (from 0..1)\n    fadeOpacity: __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getFadeout(),\n\n    // Ignore this one for a moment. Yes, the app support web audio API,\n    // but it's rudimentary, so... shhh! it's a secret.\n    // Don't shhh on me!\n    audioTexture: null\n  };\n\n  // Frame management\n  var lastAnimationFrame;\n  var isPaused = false;\n\n  var inputsModel = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__createInputsModel__[\"a\" /* default */])(ctx);\n\n  // screen rendering;\n  var screenProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__programs_screenProgram__[\"a\" /* default */])(ctx);\n  var drawProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__programs_drawParticlesProgram__[\"a\" /* default */])(ctx);\n  var cursorUpdater = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10__utils_cursorUpdater__[\"a\" /* default */])(ctx);\n  var vectorFieldEditorState = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_11__editor_vectorFieldState__[\"a\" /* default */])(drawProgram);\n\n  // particles\n  updateParticlesCount(particleCount);\n\n  var api = {\n    start: nextFrame,\n    stop: stop,\n    dispose: dispose,\n\n    resetBoundingBox: resetBoundingBox,\n    moveBoundingBox: moveBoundingBox,\n\n    setPaused: setPaused,\n\n    getParticlesCount: getParticlesCount,\n    setParticlesCount: setParticlesCount,\n\n    setFadeOutSpeed: setFadeOutSpeed,\n    getFadeOutSpeed: getFadeOutSpeed,\n\n    setDropProbability: setDropProbability,\n    getDropProbability: getDropProbability,\n\n    getIntegrationTimeStep: getIntegrationTimeStep,\n    setIntegrationTimeStep: setIntegrationTimeStep,\n\n    setColorMode: setColorMode,\n    getColorMode: getColorMode,\n\n    vectorFieldEditorState: vectorFieldEditorState,\n\n    inputsModel: inputsModel,\n\n    getCanvasRect: function getCanvasRect() {\n      // We trust they don't do anything bad with this ...\n      return canvasRect;\n    },\n    getBoundingBox: function getBoundingBox() {\n      // again, we trust. Maybe to much?\n      return ctx.bbox;\n    }\n  };\n\n  var panzoom = initPanzoom();\n  restoreBBox();\n\n  setTimeout(function () {\n    __WEBPACK_IMPORTED_MODULE_5__bus___default.a.fire('scene-ready', api);\n  });\n\n  return api;\n\n  function moveBoundingBox(changes) {\n    if (!changes) return;\n    var parsedBoundingBox = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default()({}, ctx.bbox);\n\n    assignIfPossible(changes, 'minX', parsedBoundingBox);\n    assignIfPossible(changes, 'minY', parsedBoundingBox);\n    assignIfPossible(changes, 'maxX', parsedBoundingBox);\n    assignIfPossible(changes, 'maxY', parsedBoundingBox);\n\n    // for Y axis changes we need to preserve aspect ration, which means\n    // we also need to change X...\n    if (changes.minY !== undefined || changes.maxY !== undefined) {\n      // adjust values for X\n      var heightChange = Math.abs(parsedBoundingBox.minY - parsedBoundingBox.maxY) / Math.abs(ctx.bbox.minY - ctx.bbox.maxY);\n      var cx = (ctx.bbox.maxX + ctx.bbox.minX) / 2;\n      var prevWidth = (ctx.bbox.maxX - ctx.bbox.minX) / 2;\n      parsedBoundingBox.minX = cx - prevWidth * heightChange;\n      parsedBoundingBox.maxX = cx + prevWidth * heightChange;\n    }\n\n    applyBoundingBox(parsedBoundingBox);\n  }\n\n  function assignIfPossible(change, key, newBoundingBox) {\n    var value = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float___default()(change[key]);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(value)) {\n      newBoundingBox[key] = value;\n    }\n  }\n\n  function startRecord(capturer) {\n    currentCapturer = capturer;\n  }\n\n  function stopRecord() {\n    currentCapturer = null;\n  }\n\n  function setColorMode(x) {\n    var mode = parseInt(x, 10);\n    __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].setColorMode(mode);\n    ctx.colorMode = __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getColorMode();\n    drawProgram.updateColorMode(mode);\n  }\n\n  function getColorMode() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getColorMode();\n  }\n\n  function getIntegrationTimeStep() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getIntegrationTimeStep();\n  }\n\n  function setIntegrationTimeStep(x) {\n    var f = parseFloat(x);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(f)) {\n      ctx.integrationTimeStep = f;\n      __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].setIntegrationTimeStep(f);\n      __WEBPACK_IMPORTED_MODULE_5__bus___default.a.fire('integration-timestep-changed', f);\n    }\n  }\n\n  function setPaused(shouldPause) {\n    isPaused = shouldPause;\n    nextFrame();\n  }\n\n  // Main screen fade out configuration\n  function setFadeOutSpeed(x) {\n    var f = parseFloat(x);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(f)) {\n      ctx.fadeOpacity = f;\n      __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].setFadeout(f);\n    }\n  }\n\n  function getFadeOutSpeed() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getFadeout();\n  }\n\n  // Number of particles configuration\n  function getParticlesCount() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getParticleCount();\n  }\n\n  function setParticlesCount(newParticleCount) {\n    if (!__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(newParticleCount)) return;\n    if (newParticleCount === particleCount) return;\n    if (newParticleCount < 1) return;\n\n    updateParticlesCount(newParticleCount);\n\n    particleCount = newParticleCount;\n    __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].setParticleCount(newParticleCount);\n  }\n\n  // drop probability\n  function setDropProbability(x) {\n    var f = parseFloat(x);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(f)) {\n      // TODO: Do I need to worry about duplication/clamping?\n      __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].setDropProbability(f);\n      ctx.dropProbability = f;\n    }\n  }\n\n  function getDropProbability() {\n    return __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getDropProbability();\n  }\n\n  function onResize() {\n    setWidthHeight(window.innerWidth, window.innerHeight);\n\n    screenProgram.updateScreenTextures();\n\n    updateBoundingBox(currentPanZoomTransform);\n  }\n\n  function setWidthHeight(w, h) {\n    var dx = Math.max(w * 0.02, 30);\n    var dy = Math.max(h * 0.02, 30);\n    canvasRect.width = w + 2 * dx;\n    canvasRect.height = h + 2 * dy;\n    canvasRect.top = -dy;\n    canvasRect.left = -dx;\n\n    var canvas = gl.canvas;\n    canvas.width = canvasRect.width;\n    canvas.height = canvasRect.height;\n    canvas.style.left = -dx + 'px';\n    canvas.style.top = -dy + 'px';\n  }\n\n  function dispose() {\n    stop();\n    panzoom.dispose();\n    window.removeEventListener('resize', onResize, true);\n    cursorUpdater.dispose();\n    vectorFieldEditorState.dispose();\n  }\n\n  function nextFrame() {\n    if (lastAnimationFrame) return;\n\n    if (isPaused) return;\n\n    lastAnimationFrame = requestAnimationFrame(draw);\n  }\n\n  function stop() {\n    cancelAnimationFrame(lastAnimationFrame);\n    lastAnimationFrame = 0;\n  }\n\n  function draw() {\n    lastAnimationFrame = 0;\n\n    drawScreen();\n\n    if (currentCapturer) currentCapturer.capture(gl.canvas);\n\n    nextFrame();\n  }\n\n  function drawScreen() {\n    screenProgram.fadeOutLastFrame();\n    drawProgram.drawParticles();\n    screenProgram.renderCurrentScreen();\n    drawProgram.updateParticlesPositions();\n  }\n\n  function updateParticlesCount(numParticles) {\n    // we create a square texture where each pixel will hold a particle position encoded as RGBA\n    ctx.particleStateResolution = Math.ceil(Math.sqrt(numParticles));\n    drawProgram.updateParticlesCount();\n  }\n\n  function initPanzoom() {\n    var initializedPanzoom = __WEBPACK_IMPORTED_MODULE_4_panzoom___default()(gl.canvas, {\n      realPinch: true,\n      zoomSpeed: 0.025,\n      controller: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__wglPanZoom__[\"a\" /* default */])(gl.canvas, updateBoundingBox)\n    });\n\n    return initializedPanzoom;\n  }\n\n  function restoreBBox() {\n    var savedBBox = __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].getBBox();\n    var width = canvasRect.width,\n        height = canvasRect.height;\n\n\n    var sX = Math.PI * Math.E;\n    var sY = Math.PI * Math.E;\n    var tX = 0;\n    var tY = 0;\n    if (savedBBox) {\n      sX = savedBBox.maxX - savedBBox.minX;\n      sY = savedBBox.maxY - savedBBox.minY;\n      // TODO: Not sure if this is really the best way to do it.\n      // var ar = width/height;\n      tX = width * (savedBBox.minX + savedBBox.maxX) / 2;\n      tY = width * (savedBBox.minY + savedBBox.maxY) / 2;\n    }\n\n    var w2 = sX * width / 2;\n    var h2 = sY * height / 2;\n    panzoom.showRectangle({\n      left: -w2 + tX,\n      top: -h2 - tY,\n      right: w2 + tX,\n      bottom: h2 - tY\n    });\n  }\n\n  function updateBoundingBox(transform) {\n    screenProgram.boundingBoxUpdated = true;\n\n    currentPanZoomTransform.x = transform.x;\n    currentPanZoomTransform.y = transform.y;\n    currentPanZoomTransform.scale = transform.scale;\n\n    var width = canvasRect.width,\n        height = canvasRect.height;\n\n\n    var minX = clientX(0);\n    var minY = clientY(0);\n    var maxX = clientX(width);\n    var maxY = clientY(height);\n\n    // we divide by width to keep aspect ratio\n    // var ar = width/height;\n    var p = 10000;\n    bbox.minX = Math.round(p * minX / width) / p;\n    bbox.minY = Math.round(p * -minY / width) / p;\n    bbox.maxX = Math.round(p * maxX / width) / p;\n    bbox.maxY = Math.round(p * -maxY / width) / p;\n\n    __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].saveBBox(bbox);\n\n    __WEBPACK_IMPORTED_MODULE_5__bus___default.a.fire('bbox-change', bbox);\n\n    function clientX(x) {\n      return (x - transform.x) / transform.scale;\n    }\n\n    function clientY(y) {\n      return (y - transform.y) / transform.scale;\n    }\n  }\n\n  function resetBoundingBox() {\n    var w = Math.PI * Math.E * 0.5;\n    var h = Math.PI * Math.E * 0.5;\n\n    applyBoundingBox({\n      minX: -w,\n      minY: -h,\n      maxX: w,\n      maxY: h\n    });\n  }\n\n  function applyBoundingBox(boundingBox) {\n    __WEBPACK_IMPORTED_MODULE_6__appState__[\"a\" /* default */].saveBBox(boundingBox, /* immediate = */true);\n    restoreBBox();\n    // a hack to trigger panzoom event\n    panzoom.moveBy(0, 0, false);\n  }\n}\n\n/***/ }),\n\n/***/ \"JjDM\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvar code = \"\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute(vec3 x) {\\n  return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289(i); // Avoid truncation effects in permutation\\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\\n\\t\\t+ i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final noise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (code);\n\n/***/ }),\n\n/***/ \"NEgR\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__ = __webpack_require__(\"AMV0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_query_state__ = __webpack_require__(\"3zJd\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_query_state___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_query_state__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__ = __webpack_require__(\"6c6E\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__wrapVectorField__ = __webpack_require__(\"cj2E\");\n\n\n\n\n\n\n/**\n * The state of the fieldplay is stored in the query string. This is the\n * only place where query string can be manipulated or fetched.\n */\n\nvar qs = __WEBPACK_IMPORTED_MODULE_1_query_state___default()({}, {\n  useSearch: true,\n  // Older version of the app used hash to store application arguments.\n  // Turns out hash is not good for websites like reddit. They can block\n  // url, saying \"url was already submitted\" if the only part that is different\n  // is hash. So, we switch to search string, and maintain backward compatibility\n  // for fields created before.\n  rewriteHashToSearch: true\n});\n\nvar currentState = qs.get();\n\nvar defaultVectorField = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__wrapVectorField__[\"a\" /* default */])('v.x = 0.1 * p.y;\\n  v.y = -0.2 * p.y;');\n\nvar pendingSave;\nvar defaults = {\n  timeStep: 0.01,\n  dropProbability: 0.009,\n  particleCount: 10000,\n  fadeout: .998,\n  colorMode: __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__[\"a\" /* default */].UNIFORM\n};\n\nvar settingsPanel = {\n  collapsed: window.innerWidth < 600 ? true : false\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  settingsPanel: settingsPanel,\n  saveBBox: saveBBox,\n  getBBox: getBBox,\n  getQS: function getQS() {\n    return qs;\n  },\n\n  saveCode: saveCode,\n  getCode: getCode,\n  getDefaultCode: getDefaultCode,\n\n  getDropProbability: getDropProbability,\n  setDropProbability: setDropProbability,\n\n  getIntegrationTimeStep: getIntegrationTimeStep,\n  setIntegrationTimeStep: setIntegrationTimeStep,\n\n  getParticleCount: getParticleCount,\n  setParticleCount: setParticleCount,\n\n  getFadeout: getFadeout,\n  setFadeout: setFadeout,\n\n  getColorMode: getColorMode,\n  setColorMode: setColorMode\n});\n\nqs.onChange(function () {\n  __WEBPACK_IMPORTED_MODULE_2__bus___default.a.fire('scene-ready', window.scene);\n});\n\nfunction getColorMode() {\n  var colorMode = qs.get('cm');\n  return defined(colorMode) ? colorMode : defaults.colorMode;\n}\n\nfunction setColorMode(colorMode) {\n  if (!defined(colorMode)) return;\n  qs.set({ cm: colorMode });\n  currentState.cm = colorMode;\n}\n\nfunction getFadeout() {\n  var fadeout = qs.get('fo');\n  return defined(fadeout) ? fadeout : defaults.fadeout;\n}\n\nfunction setFadeout(fadeout) {\n  if (!defined(fadeout)) return;\n  qs.set({ fo: fadeout });\n  currentState.fo = fadeout;\n}\n\nfunction getParticleCount() {\n  var particleCount = qs.get('pc');\n  return defined(particleCount) ? particleCount : defaults.particleCount;\n}\n\nfunction setParticleCount(particleCount) {\n  if (!defined(particleCount)) return;\n  qs.set({ pc: particleCount });\n  currentState.pc = particleCount;\n}\n\nfunction getIntegrationTimeStep() {\n  var timeStep = qs.get('dt');\n  return defined(timeStep) ? timeStep : defaults.timeStep;\n}\n\nfunction setIntegrationTimeStep(dt) {\n  if (!defined(dt)) return;\n  qs.set({ dt: dt });\n  currentState.dt = dt;\n}\n\nfunction getDropProbability() {\n  var dropProbability = qs.get('dp');\n  return defined(dropProbability) ? dropProbability : defaults.dropProbability;\n}\n\nfunction setDropProbability(dropProbability) {\n  if (!defined(dropProbability)) return;\n  clamp(dropProbability, 0, 1);\n  qs.set({ dp: dropProbability });\n}\n\nfunction getBBox() {\n  var cx = qs.get('cx');\n  var cy = qs.get('cy');\n  var w = qs.get('w');\n  var h = qs.get('h');\n\n  var bboxDefined = defined(cx) && defined(cy) && defined(w) && defined(h);\n  if (!bboxDefined) return;\n\n  var w2 = w / 2;\n  var h2 = h / 2;\n  var p = 10000;\n  return {\n    minX: Math.round(p * (cx - w2)) / p,\n    maxX: Math.round(p * (cx + w2)) / p,\n    minY: Math.round(p * (cy - h2)) / p,\n    maxY: Math.round(p * (cy + h2)) / p\n  };\n}\n\nfunction saveBBox(bbox) {\n  var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (pendingSave) {\n    clearTimeout(pendingSave);\n    pendingSave = 0;\n  }\n\n  if (immediate) saveReally(bbox);else {\n    pendingSave = setTimeout(function () {\n      return saveReally(bbox);\n    }, 300);\n  }\n}\n\nfunction saveReally(bbox) {\n  pendingSave = 0;\n  var bbox = {\n    cx: (bbox.minX + bbox.maxX) * 0.5,\n    cy: (bbox.minY + bbox.maxY) * 0.5,\n    w: bbox.maxX - bbox.minX,\n    h: bbox.maxX - bbox.minX\n  };\n\n  if (bbox.w <= 0 || bbox.h <= 0) return;\n\n  qs.set(bbox);\n\n  currentState.cx = bbox.cx;\n  currentState.cy = bbox.cy;\n  currentState.w = bbox.w;\n  currentState.h = bbox.h;\n}\n\nfunction getCode() {\n  var vfCode = qs.get('vf');\n  if (vfCode) return vfCode;\n\n  // If we didn't get code yet, let's try read to read it from previous version\n  // of the API.\n  // TODO: Need to figure out how to develop this in backward/future compatible way.\n  var oldCode = qs.get('code');\n  if (oldCode) {\n    vfCode = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__wrapVectorField__[\"a\" /* default */])(oldCode);\n    // side effect - let's clean the old URL\n    delete currentState.code;\n    qs.set('vf', vfCode);\n    return vfCode;\n  }\n\n  return defaultVectorField;\n}\n\nfunction getDefaultCode() {\n  return defaultVectorField;\n}\n\nfunction saveCode(code) {\n  qs.set({\n    vf: code\n  });\n  currentState.code = code;\n}\n\nfunction defined(number) {\n  return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(number);\n}\n\nfunction clamp(x, min, max) {\n  return x < min ? min : x > max ? max : x;\n}\n\n/***/ }),\n\n/***/ \"Qv35\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__ = __webpack_require__(\"XMEc\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__renderNodes__ = __webpack_require__(\"S+/9\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__ = __webpack_require__(\"DuZ1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__ = __webpack_require__(\"vhRe\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__RungeKuttaIntegrator__ = __webpack_require__(\"i69e\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar UpdatePositionGraph = function () {\n  function UpdatePositionGraph(options) {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, UpdatePositionGraph);\n\n    this.readStoredPosition = new __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__[\"a\" /* default */]( /* isDecode = */true);\n    this.udfVelocity = new __WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__[\"a\" /* default */]();\n    this.integratePositions = new __WEBPACK_IMPORTED_MODULE_10__RungeKuttaIntegrator__[\"a\" /* default */]();\n    this.dropParticles = new RandomParticleDropper();\n    this.writeComputedPosition = new __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__[\"a\" /* default */]( /* isDecode = */false);\n    this.panZoomDecode = new __WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__[\"a\" /* default */]({ decode: true });\n    this.panZoomEncode = new __WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__[\"a\" /* default */]({ decode: false });\n\n    this.colorMode = options && options.colorMode;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(UpdatePositionGraph, [{\n    key: 'setCustomVectorField',\n    value: function setCustomVectorField(velocityCode) {\n      this.udfVelocity.setNewUpdateCode(velocityCode);\n    }\n  }, {\n    key: 'getVertexShader',\n    value: function getVertexShader() {\n      return 'precision highp float;\\n\\nattribute vec2 a_pos;\\nvarying vec2 v_tex_pos;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n\\nvoid main() {\\n    v_tex_pos = a_pos;\\n    gl_Position = vec4(1.0 - 2.0 * a_pos, 0, 1);\\n}';\n    }\n  }, {\n    key: 'getFragmentShader',\n    value: function getFragmentShader() {\n      var nodes = [this.readStoredPosition, this.dropParticles, this.udfVelocity, this.integratePositions, {\n        getMainBody: function getMainBody() {\n          return '\\n  vec2 newPos = pos + velocity;\\n  ';\n        }\n      }, this.writeComputedPosition];\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__renderNodes__[\"a\" /* default */])(nodes);\n    }\n  }]);\n\n  return UpdatePositionGraph;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (UpdatePositionGraph);\n\nvar RandomParticleDropper = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default()(RandomParticleDropper, _BaseShaderNode);\n\n  function RandomParticleDropper() {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, RandomParticleDropper);\n\n    return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default()(this, (RandomParticleDropper.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(RandomParticleDropper)).apply(this, arguments));\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(RandomParticleDropper, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float u_drop_rate;\\nuniform float u_rand_seed;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      // TODO: Ideally this node should probably depend on\n      // random number generator node, so that we don't duplicate code\n      return '\\n// pseudo-random generator\\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\\nfloat rand(const vec2 co) {\\n    float t = dot(rand_constants.xy, co);\\n    return fract(sin(t) * (rand_constants.z + t));\\n}\\n';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '\\n  // a random seed to use for the particle drop\\n  vec2 seed = (pos + v_tex_pos) * u_rand_seed;\\n  // drop rate is a chance a particle will restart at random position, to avoid degeneration\\n  float drop = step(1.0 - u_drop_rate, rand(seed));\\n\\n  // TODO: This can be customized to produce various emitters\\n  // random_pos is in range from 0..1, we move it to the bounding box:\\n  vec2 random_pos = vec2(rand(seed + 1.9), rand(seed + 8.4)) * (u_max - u_min) + u_min;\\n  pos = mix(pos, random_pos, drop);\\n';\n    }\n  }]);\n\n  return RandomParticleDropper;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"S+/9\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = renderNodes;\n\nfunction renderNodes(nodes) {\n  var code = [];\n\n  nodes.forEach(function (node) {\n    if (node.getDefines) addToCode(node.getDefines());\n  });\n  nodes.forEach(function (node) {\n    if (node.getFunctions) addToCode(node.getFunctions());\n  });\n\n  addToCode('void main() {');\n  nodes.forEach(function (node) {\n    if (node.getMainBody) addToCode(node.getMainBody());\n  });\n  addToCode('}');\n  return code.join('\\n');\n\n  function addToCode(line) {\n    if (line) code.push(line);\n  }\n}\n\n/***/ }),\n\n/***/ \"V39N\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = makeStatCounter;\n/**\n * A simple interface to compute eventual min/max \n */\nfunction makeStatCounter() {\n  var min, max;\n\n  var api = {\n    getMin: function getMin() {\n      return min;\n    },\n    getMax: function getMax() {\n      return max;\n    },\n    add: function add(x) {\n      if (x < min) min = x;\n      if (x > max) max = x;\n    },\n\n    reset: reset\n  };\n\n  return api;\n\n  function reset() {\n    min = Number.POSITIVE_INFINITY;\n    max = Number.NEGATIVE_INFINITY;\n  }\n}\n\n/***/ }),\n\n/***/ \"XFig\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * A shader function to decode rgba encoded color into float position.\n */\nvar code = \"\\nhighp float decodeFloatRGBA( vec4 v ) {\\n  float a = floor(v.r * 255.0 + 0.5);\\n  float b = floor(v.g * 255.0 + 0.5);\\n  float c = floor(v.b * 255.0 + 0.5);\\n  float d = floor(v.a * 255.0 + 0.5);\\n\\n  float exponent = a - 127.0;\\n  float sign = 1.0 - mod(d, 2.0)*2.0;\\n  float mantissa = float(a > 0.0)\\n                  + b / 256.0\\n                  + c / 65536.0\\n                  + floor(d / 2.0) / 8388608.0;\\n  return sign * mantissa * exp2(exponent);\\n}\\n\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (code);\n\n/***/ }),\n\n/***/ \"XMEc\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__ = __webpack_require__(\"a8s+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__ = __webpack_require__(\"XFig\");\n\n\n\n\n\n\n\n\n\n/**\n * Reads/writes particle coordinates from/to a texture;\n */\n\nvar TexturePosition = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(TexturePosition, _BaseShaderNode);\n\n  function TexturePosition(isDecode) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, TexturePosition);\n\n    // When it's decoding, it must read from the texture.\n    // Otherwise it must write to the texture;\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (TexturePosition.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(TexturePosition)).call(this));\n\n    _this.isDecode = isDecode;\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(TexturePosition, [{\n    key: 'getFunctions',\n    value: function getFunctions() {\n      if (this.isDecode) {\n        return '\\n    ' + __WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__[\"a\" /* default */] + '\\n    ' + __WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__[\"a\" /* default */] + '\\n';\n      }\n    }\n  }, {\n    key: 'getDefines',\n    value: function getDefines() {\n      if (this.isDecode) {\n        // TODO: How to avoid duplication and silly checks?\n        return '\\nprecision highp float;\\n\\nuniform sampler2D u_particles_x;\\nuniform sampler2D u_particles_y;\\n\\n// Which coordinate needs to be printed onto the texture\\nuniform int u_out_coordinate;\\n\\nvarying vec2 v_tex_pos;\\n';\n      }\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      if (this.isDecode) {\n        return '\\n   vec2 pos = vec2(\\n     decodeFloatRGBA(texture2D(u_particles_x, v_tex_pos)),\\n     decodeFloatRGBA(texture2D(u_particles_y, v_tex_pos))\\n   );\\n';\n      }\n      return '\\n    if (u_out_coordinate == 0) gl_FragColor = encodeFloatRGBA(newPos.x);\\n    else if (u_out_coordinate == 1) gl_FragColor = encodeFloatRGBA(newPos.y);\\n    else if (u_out_coordinate == 6) gl_FragColor = encodeFloatRGBA(get_velocity(pos).x);\\n    else if (u_out_coordinate == 7) gl_FragColor = encodeFloatRGBA(get_velocity(pos).y);\\n';\n    }\n  }]);\n\n  return TexturePosition;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TexturePosition);\n\n/***/ }),\n\n/***/ \"YJWA\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scene__ = __webpack_require__(\"JHsM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__bus__);\n/**\n * The main entry point to the application.\n * \n * It is initialized immediately with webgl, and puts\n * vue.js app loading into the future.\n */\n\n\n\nvar canvas = document.getElementById('scene');\n// Canvas may not be available in test run\nif (canvas) initVectorFieldApp(canvas);\n\n// Tell webpack to split bundle, and download settings UI later.\n__webpack_require__.e/* require.ensure */(0).then((function () {\n  // Settings UI is ready, initialize vue.js application\n  __webpack_require__(\"WOBu\");\n}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n\nfunction initVectorFieldApp(canvas) {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  var ctxOptions = { antialiasing: false };\n\n  var gl = canvas.getContext('webgl', ctxOptions) || canvas.getContext('experimental-webgl', ctxOptions);\n\n  if (gl) {\n    window.webGLEnabled = true;\n    var scene = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__scene__[\"a\" /* default */])(gl);\n    scene.start();\n    // TODO: too bad to plop stuff onto window?\n    window.scene = scene;\n  } else {\n    window.webGLEnabled = false;\n  }\n}\n\nvar CCapture;\nvar currentCapturer;\n\nwindow.startRecord = startRecord;\nwindow.isRecording = false;\n\nfunction startRecord(url) {\n  if (!CCapture) {\n    __webpack_require__.e/* require.ensure */(1).then((function () {\n      CCapture = __webpack_require__(\"nI+d\");\n      window.stopRecord = stopRecord;\n      startRecord(url);\n    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n\n    return;\n  }\n\n  if (currentCapturer) {\n    currentCapturer.stop();\n  }\n\n  if (!ffmpegScriptLoaded()) {\n    var ffmpegServer = document.createElement('script');\n    ffmpegServer.setAttribute('src', url || 'http://localhost:8080/ffmpegserver/ffmpegserver.js');\n    ffmpegServer.onload = function () {\n      return startRecord(url);\n    };\n    document.head.appendChild(ffmpegServer);\n    return;\n  }\n\n  currentCapturer = new CCapture({\n    format: 'ffmpegserver',\n    framerate: 60,\n    verbose: true,\n    name: \"fieldplay\",\n    extension: \".mp4\",\n    codec: \"mpeg4\",\n    ffmpegArguments: [\"-b:v\", \"12M\"]\n  });\n\n  window.isRecording = true;\n  currentCapturer.start();\n  __WEBPACK_IMPORTED_MODULE_1__bus___default.a.fire('start-record', currentCapturer);\n}\n\nfunction ffmpegScriptLoaded() {\n  return typeof FFMpegServer !== 'undefined';\n}\n\nfunction stopRecord() {\n  window.isRecording = false;\n  __WEBPACK_IMPORTED_MODULE_1__bus___default.a.fire('stop-record', currentCapturer);\n  currentCapturer.stop();\n  currentCapturer.save();\n}\n\n/***/ }),\n\n/***/ \"a8s+\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar code = \"\\nvec4 encodeFloatRGBA(highp float val) {\\n    if (val == 0.0) {\\n        return vec4(0.0, 0.0, 0.0, 0.0);\\n    }\\n\\n    float mag = abs(val);\\n    float exponent = floor(log2(mag));\\n    // Correct log2 approximation errors.\\n    exponent += float(exp2(exponent) <= mag / 2.0);\\n    exponent -= float(exp2(exponent) > mag);\\n\\n    float mantissa;\\n    if (exponent > 100.0) {\\n        // Not sure why this needs to be done in two steps for the largest float to work.\\n        // Best guess is the optimizer rewriting '/ exp2(e)' into '* exp2(-e)',\\n        // but exp2(-128.0) is too small to represent.\\n        mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\\n    } else {\\n        mantissa = mag / float(exp2(exponent)) - 1.0;\\n    }\\n\\n    float a = exponent + 127.0;\\n    mantissa *= 256.0;\\n    float b = floor(mantissa);\\n    mantissa -= b;\\n    mantissa *= 256.0;\\n    float c = floor(mantissa);\\n    mantissa -= c;\\n    mantissa *= 128.0;\\n    float d = floor(mantissa) * 2.0 + float(val < 0.0);\\n    return vec4(a, b, c, d) / 255.0;\\n}\\n\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (code);\n\n/***/ }),\n\n/***/ \"aZPT\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__ = __webpack_require__(\"XFig\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaderBasedColor__ = __webpack_require__(\"c5NW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__programs_colorModes__ = __webpack_require__(\"6c6E\");\n\n\n\n\n\n\n// TODO: this duplicates code from texture position.\n\nvar DrawParticleGraph = function () {\n  function DrawParticleGraph(colorMode) {\n    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, DrawParticleGraph);\n\n    this.colorMode = colorMode;\n    this.isUniformColor = colorMode === __WEBPACK_IMPORTED_MODULE_4__programs_colorModes__[\"a\" /* default */].UNIFORM;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(DrawParticleGraph, [{\n    key: 'getFragmentShader',\n    value: function getFragmentShader() {\n      var variables = [];\n      var mainBody = [];\n\n      if (this.isUniformColor) {\n        // uniform color comes via uniform setting\n        variables.push('uniform vec4 u_particle_color;');\n        mainBody.push('gl_FragColor = u_particle_color;');\n      } else {\n        // Otherwise it comes from a vertex shader\n        variables.push('varying vec4 v_particle_color;');\n        mainBody.push('gl_FragColor = v_particle_color;');\n      }\n      return 'precision highp float;\\n' + variables.join('\\n') + '\\n\\nvoid main() {\\n' + mainBody.join('\\n') + '\\n}';\n    }\n  }, {\n    key: 'getVertexShader',\n    value: function getVertexShader(vfCode) {\n      var decodePositions = textureBasedPosition();\n      var colorParts = this.isUniformColor ? uniformColor() : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__shaderBasedColor__[\"a\" /* default */])(this.colorMode, vfCode);\n      var methods = [];\n      addMethods(decodePositions, methods);\n      addMethods(colorParts, methods);\n      var main = [];\n      addMain(decodePositions, main);\n      addMain(colorParts, main);\n\n      return 'precision highp float;\\nattribute float a_index;\\nuniform float u_particles_res;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n\\n' + (decodePositions.getVariables() || '') + '\\n' + (colorParts.getVariables() || '') + '\\n\\n' + __WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__[\"a\" /* default */] + '\\n\\n' + methods.join('\\n') + '\\n\\nvoid main() {\\n  vec2 txPos = vec2(\\n        fract(a_index / u_particles_res),\\n        floor(a_index / u_particles_res) / u_particles_res);\\n  gl_PointSize = 1.0;\\n\\n' + main.join('\\n') + '\\n\\n  vec2 du = (u_max - u_min);\\n  v_particle_pos = (v_particle_pos - u_min)/du;\\n  gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);\\n}';\n    }\n  }]);\n\n  return DrawParticleGraph;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (DrawParticleGraph);\n\n\nfunction addMethods(producer, array) {\n  if (producer.getMethods) {\n    array.push(producer.getMethods());\n  }\n}\nfunction addMain(producer, array) {\n  if (producer.getMain) {\n    array.push(producer.getMain());\n  }\n}\n\nfunction uniformColor() {\n  return {\n    getVariables: function getVariables() {},\n    getMain: function getMain() {}\n  };\n}\n\nfunction textureBasedPosition() {\n  return {\n    getVariables: getVariables,\n    getMain: getMain\n  };\n\n  function getVariables() {\n    return '\\nuniform sampler2D u_particles_x;\\nuniform sampler2D u_particles_y;\\n    ';\n  }\n\n  function getMain() {\n    return '\\n  vec2 v_particle_pos = vec2(\\n    decodeFloatRGBA(texture2D(u_particles_x, txPos)),\\n    decodeFloatRGBA(texture2D(u_particles_y, txPos))\\n  );\\n';\n  }\n}\n\n/***/ }),\n\n/***/ \"bvb0\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getInputUniforms;\nfunction getInputUniforms() {\n  return \"uniform sampler2D input0;\\nuniform sampler2D input1;\";\n}\n\n/***/ }),\n\n/***/ \"c5NW\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = shaderBasedColor;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__UserDefinedVelocityFunction__ = __webpack_require__(\"DuZ1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RungeKuttaIntegrator__ = __webpack_require__(\"i69e\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__programs_colorModes__ = __webpack_require__(\"6c6E\");\n\n\n\n\nfunction shaderBasedColor(colorMode, vfCode) {\n  var udf = new __WEBPACK_IMPORTED_MODULE_0__UserDefinedVelocityFunction__[\"a\" /* default */](vfCode);\n  var integrate = new __WEBPACK_IMPORTED_MODULE_1__RungeKuttaIntegrator__[\"a\" /* default */]();\n\n  return {\n    getVariables: getVariables,\n    getMain: getMain,\n    getMethods: getMethods\n  };\n\n  function getVariables() {\n    return '\\nuniform vec2 u_velocity_range;\\nvarying vec4 v_particle_color;\\n' + udf.getDefines() + '\\n' + integrate.getDefines() + '\\n';\n  }\n\n  function getMethods() {\n    return '\\n// https://github.com/hughsk/glsl-hsv2rgb\\nvec3 hsv2rgb(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n' + udf.getFunctions() + '\\n' + integrate.getFunctions() + '\\n';\n  }\n\n  function getMain() {\n    // TODO: This needs to be refactored. I don't like code duplication.\n    var setParticleColor = void 0;\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_2__programs_colorModes__[\"a\" /* default */].VELOCITY) {\n      setParticleColor = '\\n  float speed = (length(velocity) - u_velocity_range[0])/(u_velocity_range[1] - u_velocity_range[0]);\\n  v_particle_color = vec4(hsv2rgb(vec3(0.05 + (1. - speed) * 0.5, 0.9, 1.)), 1.0);\\n';\n    } else {\n      setParticleColor = '\\n  float speed = (atan(velocity.y, velocity.x) + PI)/(2.0 * PI);\\n  v_particle_color = vec4(hsv2rgb(vec3(speed, 0.9, 1.)), 1.0);\\n';\n    }\n\n    return '\\nvec2 velocity = get_velocity(v_particle_pos);\\n' + setParticleColor + '\\n';\n  }\n}\n\n/***/ }),\n\n/***/ \"c5hq\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createVectorFieldEditorState;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__appState__ = __webpack_require__(\"NEgR\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getParsedVectorFieldFunction__ = __webpack_require__(\"85ps\");\n\n\n\n\n/**\n * A text editor state for the vector field equation. Manages vector field\n * program compilation and error reporting state.\n *\n * @param {Object} drawProgram \n */\nfunction createVectorFieldEditorState(drawProgram) {\n  __WEBPACK_IMPORTED_MODULE_0__bus___default.a.on('glsl-parser-ready', parseCode);\n  var currentVectorFieldVersion = 0;\n\n  // What is the current code?\n  var currentVectorFieldCode = __WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].getCode();\n\n  // For delayed parsing result verification (e.g. when vue is loaded it\n  // can request us to see if there were any errors)\n  var parserResult;\n\n  loadCodeFromAppState();\n\n  var api = {\n    getCode: getCode,\n    setCode: setCode,\n    dispose: dispose,\n\n    // These properties are for UI only\n    code: currentVectorFieldCode,\n    error: '',\n    errorDetail: '',\n    isFloatError: false\n  };\n\n  return api;\n\n  function dispose() {\n    __WEBPACK_IMPORTED_MODULE_0__bus___default.a.off('glsl-parser-ready', parseCode);\n  }\n\n  function getCode() {\n    return __WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].getCode();\n  }\n\n  function setCode(vectorFieldCode) {\n    if (vectorFieldCode === currentVectorFieldCode) {\n      // If field hasn't changed, let's make sure that there was no previous\n      // error\n      if (parserResult && parserResult.error) {\n        // And if there was error, let's revalidate code:\n        parseCode();\n      }\n      return;\n    }\n\n    trySetNewCode(vectorFieldCode).then(function (result) {\n      if (result.cancelled) return;\n\n      if (result && result.error) {\n        updateErrorInfo(result.error);\n        return result;\n      }\n\n      currentVectorFieldCode = vectorFieldCode;\n      api.code = vectorFieldCode;\n      __WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].saveCode(vectorFieldCode);\n    });\n  }\n\n  function updateErrorInfo(parserResult) {\n    if (parserResult && parserResult.error) {\n      api.error = parserResult.error;\n      api.errorDetail = parserResult.errorDetail;\n      api.isFloatError = parserResult.isFloatError;\n    } else {\n      api.error = '';\n      api.errorDetail = '';\n      api.isFloatError = false;\n    }\n  }\n\n  function loadCodeFromAppState() {\n    var persistedCode = __WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].getCode();\n    if (persistedCode) {\n      trySetNewCode(persistedCode).then(function (result) {\n        if (!result.error) return; // This means we set correctly;\n        // If we get here - something went wrong. see the console\n        console.error('Failed to restore previous vector field: ', result.error);\n        // Let's use default vector field\n        trySetNewCode(__WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].getDefaultCode());\n      });\n    } else {\n      // we want a default vector field\n      trySetNewCode(__WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].getDefaultCode());\n    }\n  }\n\n  function parseCode(customCode) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__getParsedVectorFieldFunction__[\"a\" /* default */])(customCode || currentVectorFieldCode).then(function (currentResult) {\n      parserResult = currentResult;\n      updateErrorInfo(parserResult.error);\n      return parserResult;\n    });\n  }\n\n  function trySetNewCode(vectorFieldCode) {\n    currentVectorFieldVersion += 1;\n    var capturedVersion = currentVectorFieldVersion;\n    // step 1 - run through parser\n    return parseCode(vectorFieldCode).then(function (parserResult) {\n      if (capturedVersion !== currentVectorFieldVersion) {\n        parserResult.cancelled = true;\n        // a newer request was issued. Ignore these results.\n        return parserResult;\n      }\n\n      if (parserResult.error) {\n        return parserResult;\n      }\n      // step 2 - run through real webgl\n      try {\n        drawProgram.updateCode(parserResult.code);\n        return parserResult;\n      } catch (e) {\n        return {\n          error: {\n            error: e.message\n          }\n        };\n      }\n    });\n  }\n}\n\n/***/ }),\n\n/***/ \"cj2E\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = wrapVectorField;\n/**\n * Wraps a simple vector field string into our default shader code.\n * @param {String} field \n */\nfunction wrapVectorField(field) {\n  return \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  \" + field + \"\\n\\n  return v;\\n}\";\n}\n\n/***/ }),\n\n/***/ \"eBcr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * A simple message bus. Facilitates uncoupled communication between\n * components of fieldplay.\n */\nvar eventify = __webpack_require__(\"puH/\");\n\nmodule.exports = eventify({});\n\n/***/ }),\n\n/***/ \"egvE\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = loadTexture;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(\"//Fk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\nfunction loadTexture(gl, url) {\n  var resolveTexture, rejectTexture;\n\n  var image = new Image();\n  image.crossOrigin = '';\n\n  image.onload = bindTexture;\n  image.onerror = reportError;\n  image.src = url;\n\n  return new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a(function (resolve, reject) {\n    resolveTexture = resolve;\n    rejectTexture = reject;\n  });\n\n  function reportError(err) {\n    rejectTexture(err);\n  }\n\n  function bindTexture() {\n    var texture = gl.createTexture();\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var srcFormat = gl.RGBA;\n    var srcType = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n\n    if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n      gl.generateMipmap(gl.TEXTURE_2D);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    resolveTexture(texture);\n  }\n}\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) == 0;\n}\n\n/***/ }),\n\n/***/ \"gIFv\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = colorProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_floatPacking__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_makeStatCounter__ = __webpack_require__(\"V39N\");\n\n\n\n\n\nvar OUT_V_X = 6;\nvar OUT_V_Y = 7;\n/**\n * This program allows to change color of each particle. It works by\n * reading current velocities into a texture from the framebuffer. Once\n * velocities are read, it checks velocity scale and passes it to a draw program.\n */\nfunction colorProgram(ctx) {\n  var speedNeedsUpdate = true;\n  var gl = ctx.gl;\n\n  var velocity_y_texture, velocity_x_texture;\n  var particleStateResolution;\n  var pendingSpeedUpdate;\n  var numParticles;\n  var velocityCounter = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_makeStatCounter__[\"a\" /* default */])();\n  var velocity_x;\n  var velocity_y;\n\n  listenToEvents();\n\n  return {\n    updateCode: updateCode,\n    updateParticlesPositions: updateParticlesPositions,\n    updateParticlesCount: updateParticlesCount,\n    setColorMinMax: setColorMinMax,\n    requestSpeedUpdate: requestSpeedUpdate,\n    dispose: dispose\n  };\n\n  function listenToEvents() {\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.on('integration-timestep-changed', requestSpeedUpdate);\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.on('bbox-change', requestSpeedUpdate);\n  }\n\n  function dispose() {\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.off('integration-timestep-changed', requestSpeedUpdate);\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.off('bbox-change', requestSpeedUpdate);\n    disposeTextures();\n  }\n\n  function disposeTextures() {\n    if (velocity_x_texture) gl.deleteTexture(velocity_x_texture);\n    if (velocity_y_texture) gl.deleteTexture(velocity_y_texture);\n  }\n\n  function requestSpeedUpdate() {\n    if (pendingSpeedUpdate) clearTimeout(pendingSpeedUpdate);\n    pendingSpeedUpdate = setTimeout(function () {\n      speedNeedsUpdate = true;\n      pendingSpeedUpdate = 0;\n    }, 50);\n  }\n\n  function setColorMinMax(program) {\n    gl.uniform2f(program.u_velocity_range, velocityCounter.getMin(), velocityCounter.getMax());\n  }\n\n  function updateParticlesCount() {\n    disposeTextures();\n\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n\n    velocity_x = new Uint8Array(numParticles * 4);\n    velocity_y = new Uint8Array(numParticles * 4);\n    velocity_x_texture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, velocity_x, particleStateResolution, particleStateResolution);\n    velocity_y_texture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, velocity_y, particleStateResolution, particleStateResolution);\n\n    requestSpeedUpdate();\n  }\n\n  function updateCode() {\n    requestSpeedUpdate();\n  }\n\n  function updateParticlesPositions(program) {\n    if (!speedNeedsUpdate || !velocity_x || !velocity_y) return;\n    speedNeedsUpdate = false;\n\n    // We assume this is called from update position program\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, velocity_x_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_X);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, velocity_y_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_Y);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    updateMinMax();\n  }\n\n  function updateMinMax() {\n    velocityCounter.reset();\n    // TODO: Do I want this to be async?\n    for (var i = 0; i < velocity_y.length; i += 4) {\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      var v = Math.sqrt(vx * vx + vy * vy);\n      velocityCounter.add(v);\n    }\n  }\n}\n\nfunction readFloat(buffer, offset) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_floatPacking__[\"b\" /* decodeFloatRGBA */])(buffer[offset + 0], buffer[offset + 1], buffer[offset + 2], buffer[offset + 3]);\n}\n\n/***/ }),\n\n/***/ \"h62Y\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = makeScreenProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/**\n * Renders computed state onto the screen.\n */\n\n\nvar NO_TRANSFORM = { dx: 0, dy: 0, scale: 1 };\n\nfunction makeScreenProgram(ctx) {\n  var gl = ctx.gl,\n      canvasRect = ctx.canvasRect;\n\n\n  var screenTexture, backgroundTexture;\n  var boundBoxTextureTransform = { dx: 0, dy: 0, scale: 1 };\n  var lastRenderedBoundingBox = null;\n\n  // TODO: Allow customization? Last time I tried, I didn't like it too much.\n  // It was very easy to screw up the design, and the tool looked ugly :-/\n  var backgroundColor = { r: 19 / 255, g: 41 / 255, b: 79 / 255, a: 1 };\n\n  updateScreenTextures();\n  var screenProgram = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createProgram(gl, getScreenVertexShader(), getScreenFragmentShader());\n\n  var api = {\n    fadeOutLastFrame: fadeOutLastFrame,\n    renderCurrentScreen: renderCurrentScreen,\n    updateScreenTextures: updateScreenTextures,\n\n    boundingBoxUpdated: false\n  };\n\n  return api;\n\n  function fadeOutLastFrame() {\n    // render to the frame buffer\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, screenTexture);\n    gl.viewport(0, 0, canvasRect.width, canvasRect.height);\n\n    if (api.boundingBoxUpdated && lastRenderedBoundingBox) {\n      // We move the back texture, relative to the bounding box change. This eliminates\n      // particle train artifacts, though, not all of them: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n      // If you know how to improve this - please let me know.\n      boundBoxTextureTransform.dx = -(ctx.bbox.minX - lastRenderedBoundingBox.minX) / (ctx.bbox.maxX - ctx.bbox.minX);\n      boundBoxTextureTransform.dy = -(ctx.bbox.minY - lastRenderedBoundingBox.minY) / (ctx.bbox.maxY - ctx.bbox.minY);\n      boundBoxTextureTransform.scale = (ctx.bbox.maxX - ctx.bbox.minX) / (lastRenderedBoundingBox.maxX - lastRenderedBoundingBox.minX);\n      drawTexture(backgroundTexture, ctx.fadeOpacity, boundBoxTextureTransform);\n    } else {\n      drawTexture(backgroundTexture, ctx.fadeOpacity, NO_TRANSFORM);\n    }\n  }\n\n  function renderCurrentScreen() {\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, null);\n\n    saveLastBbox();\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    drawTexture(screenTexture, 1.0, NO_TRANSFORM);\n    gl.disable(gl.BLEND);\n\n    var temp = backgroundTexture;\n    backgroundTexture = screenTexture;\n    screenTexture = temp;\n\n    api.boundingBoxUpdated = false;\n    if (window.audioTexture) {\n      drawTexture(window.audioTexture, 1.0, NO_TRANSFORM);\n    }\n  }\n\n  function updateScreenTextures() {\n    var width = canvasRect.width,\n        height = canvasRect.height;\n\n    var emptyPixels = new Uint8Array(width * height * 4);\n    if (screenTexture) {\n      gl.deleteTexture(screenTexture);\n    }\n    if (backgroundTexture) {\n      gl.deleteTexture(backgroundTexture);\n    }\n\n    screenTexture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n    backgroundTexture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n  }\n\n  function saveLastBbox() {\n    if (!lastRenderedBoundingBox) {\n      lastRenderedBoundingBox = {\n        minX: ctx.bbox.minX,\n        minY: ctx.bbox.minY,\n        maxX: ctx.bbox.maxX,\n        maxY: ctx.bbox.maxY\n      };\n\n      return;\n    }\n\n    lastRenderedBoundingBox.minX = ctx.bbox.minX;\n    lastRenderedBoundingBox.minY = ctx.bbox.minY;\n    lastRenderedBoundingBox.maxX = ctx.bbox.maxX;\n    lastRenderedBoundingBox.maxY = ctx.bbox.maxY;\n  }\n\n  function drawTexture(texture, opacity, textureTransform) {\n    var program = screenProgram;\n    gl.useProgram(program.program);\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n\n    // TODO: This index is very fragile. I need to find a way\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, texture, ctx.screenTextureUnit);\n    gl.uniform1i(program.u_screen, ctx.screenTextureUnit);\n\n    gl.uniform1f(program.u_opacity_border, 0.02);\n    gl.uniform1f(program.u_opacity, opacity);\n    gl.uniform3f(program.u_transform, textureTransform.dx, textureTransform.dy, textureTransform.scale);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n}\n\nfunction getScreenVertexShader() {\n  return '// screen program\\nprecision highp float;\\n\\nattribute vec2 a_pos;\\nvarying vec2 v_tex_pos;\\nuniform vec3 u_transform;\\n\\nvoid main() {\\n    v_tex_pos = a_pos;\\n    vec2 pos = a_pos;\\n\\n    // This transformation tries to move texture (raster) to the approximate position\\n    // of particles on the current frame. This is needed to avoid rendering artifacts\\n    // during pan/zoom: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\\n\\n    // PS: I must admit, I wrote this formula through sweat and tears, and\\n    // I still have no idea why I don\\'t need to apply (pos.y - 0.5) to Y coordinate.\\n    // Is it because I use aspect ratio for bounding box?\\n    pos.x = (pos.x - 0.5) / u_transform.z - u_transform.x + 0.5 * u_transform.z;\\n    pos.y = pos.y / u_transform.z + u_transform.y;\\n\\n    pos = 1.0 - 2.0 * pos;\\n    gl_Position = vec4(pos, 0, 1);\\n}';\n}\n\nfunction getScreenFragmentShader() {\n  return 'precision highp float;\\nuniform sampler2D u_screen;\\nuniform float u_opacity;\\nuniform float u_opacity_border;\\n\\nvarying vec2 v_tex_pos;\\n\\nvoid main() {\\n  vec2 p = 1.0 - v_tex_pos;\\n  vec4 color = texture2D(u_screen, p);\\n\\n  // For some reason particles near border leave trace when we translate the texture\\n  // This is my dirty hack to fix it: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\\n  if (p.x < u_opacity_border || p.x > 1. - u_opacity_border || p.y < u_opacity_border || p.y > 1. - u_opacity_border) {\\n    gl_FragColor = vec4(0.);\\n  } else {\\n    // opacity fade out even with a value close to 0.0\\n    gl_FragColor = vec4(floor(255.0 * color * u_opacity) / 255.0);\\n  }\\n}';\n}\n\n/***/ }),\n\n/***/ \"i69e\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n\n\n\n\n\n\n\nvar RungeKuttaIntegrator = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(RungeKuttaIntegrator, _BaseShaderNode);\n\n  function RungeKuttaIntegrator() {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, RungeKuttaIntegrator);\n\n    return __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (RungeKuttaIntegrator.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(RungeKuttaIntegrator)).call(this));\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(RungeKuttaIntegrator, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float u_h;\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      return '\\nvec2 rk4(const vec2 point) {\\n  vec2 k1 = get_velocity( point );\\n  vec2 k2 = get_velocity( point + k1 * u_h * 0.5);\\n  vec2 k3 = get_velocity( point + k2 * u_h * 0.5);\\n  vec2 k4 = get_velocity( point + k3 * u_h);\\n\\n  return k1 * u_h / 6. + k2 * u_h/3. + k3 * u_h/3. + k4 * u_h/6.;\\n}';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '\\n  vec2 velocity = rk4(pos);\\n';\n    }\n  }]);\n\n  return RungeKuttaIntegrator;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (RungeKuttaIntegrator);\n\n/***/ }),\n\n/***/ \"iw7m\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = fetchGLSL;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(\"//Fk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map__ = __webpack_require__(\"ifoU\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_request__ = __webpack_require__(\"C8nW\");\n\n\nvar loadedLinks = new __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map___default.a(); // from link to response\n\n\nfunction fetchGLSL(link) {\n  if (!link) return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.reject('Missing link');\n  var trimmed = link.trim();\n  if (!trimmed) return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.reject('Missing link');\n\n  var cachedResponse = loadedLinks.get(trimmed);\n  if (cachedResponse) return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.resolve(cachedResponse);\n\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_request__[\"a\" /* default */])(link).then(function (code) {\n    loadedLinks.set(link, code);\n    return code;\n  });\n}\n\n/***/ }),\n\n/***/ \"n67P\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createInputCollection;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map__ = __webpack_require__(\"ifoU\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map__);\n\n/**\n * Collection of input bindings. Individual program works with this collection\n * to command it update texture bindings.\n */\nfunction createInputCollection() {\n  var boundInputs = new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map___default.a();\n  var currentProgram;\n  return {\n    updateBindings: updateBindings,\n    bindInput: bindInput\n  };\n\n  function bindInput(inputIndex, inputBinding) {\n    var prevBinding = boundInputs.get(inputIndex);\n    if (prevBinding) {\n      prevBinding.dispose();\n    }\n    boundInputs.set(inputIndex, inputBinding);\n  }\n\n  function updateBindings(program) {\n    currentProgram = program;\n    boundInputs.forEach(updateInputBinding);\n  }\n\n  function updateInputBinding(input, inputIndex) {\n    input.updateBinding(currentProgram, inputIndex);\n  }\n}\n\n/***/ }),\n\n/***/ \"p0IO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = wglPanZoom;\n/**\n * Enables panning and zooming of canvas with vector field\n * \n * @param {HTMLCanvasElement} canvas that needs to be panned and zoomed\n * @param {*} updateBoundingBoxCallback callback that is called when vector field bounding box\n * needs to be updated\n */\nfunction wglPanZoom(canvas, updateBoundingBoxCallback) {\n  var lastDx = 0;\n  var lastDy = 0;\n  var lastScale = 1;\n\n  // We need to be moved at least this many pixels in order to let\n  // transform update bounding box.\n  var transformThreshold = 2.1;\n\n  return {\n    applyTransform: function applyTransform(newTransform) {\n      var dx = newTransform.x;\n      var dy = newTransform.y;\n\n      var dScale = lastScale - newTransform.scale;\n      if (dScale === 0 && Math.abs(dx - lastDx) < transformThreshold && Math.abs(dy - lastDy) < transformThreshold) {\n        // Wait for larger transform\n        return;\n      }\n\n      lastDx = dx;\n      lastDy = dy;\n      lastScale = newTransform.scale;\n\n      updateBoundingBoxCallback(newTransform);\n    },\n    getOwner: function getOwner() {\n      return canvas;\n    }\n  };\n}\n\n/***/ }),\n\n/***/ \"p2DF\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__config__ = __webpack_require__(\"rvz5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__gl_utils__ = __webpack_require__(\"Ddjs\");\n\n\n\nfunction createVideoInput(ctx, url) {\n  var playing = false;\n  var timeupdate = false;\n  var copyVideo = false;\n\n  var video = setupVideo();\n  var currentFrame = createTexture();\n\n  return {\n    updateBinding: updateBinding,\n    dispose: dispose\n  };\n\n  function updateBinding(program, inputIndex) {\n    var realIndex = inputIndex + __WEBPACK_IMPORTED_MODULE_0__config__[\"a\" /* default */].FREE_TEXTURE_UNIT;\n    __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].bindTexture(ctx.gl, currentFrame, realIndex);\n    if (copyVideo) updateTexture(ctx.gl);\n    ctx.gl.uniform1i(program['input' + inputIndex], realIndex);\n  }\n\n  function updateTexture(gl) {\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var srcFormat = gl.RGBA;\n    var srcType = gl.UNSIGNED_BYTE;\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, video);\n  }\n\n  function createTexture() {\n    var gl = ctx.gl;\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var width = 1;\n    var height = 1;\n    var border = 0;\n    var srcFormat = gl.RGBA;\n    var srcType = gl.UNSIGNED_BYTE;\n    var pixel = new Uint8Array([0, 0, 255, 255]);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n    return texture;\n  }\n  function dispose() {\n    video.removeEventListener('playing', onPlaying, true);\n    video.removeEventListener('timeupdate', onTimeUpdate, true);\n  }\n\n  function setupVideo() {\n    var video = document.createElement('video');\n    video.crossOrigin = '';\n    video.autoplay = true;\n    video.muted = true;\n    video.loop = true;\n\n    // Waiting for these 2 events ensures there is data in the video\n    video.addEventListener('playing', onPlaying, true);\n    video.addEventListener('timeupdate', onTimeUpdate, true);\n\n    video.src = url;\n    video.play();\n\n    return video;\n  }\n\n  function checkReady() {\n    if (playing && timeupdate) {\n      copyVideo = true;\n    }\n  }\n  function onPlaying() {\n    playing = true;\n    checkReady();\n  }\n\n  function onTimeUpdate() {\n    timeupdate = true;\n    checkReady();\n  }\n}\n\n/***/ }),\n\n/***/ \"p9aJ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createCursorUpdater;\n/**\n * This module allows to pass mouse coordinates down to the shader. Coordinates\n * will be available as `vec4 cursor` variable, where `xy` are the last\n * click position, and `zw` are the last hover position.\n * \n * Note: On Touch devices hover is the same click.\n * \n * Hopefully this will enables easier exploration\n */\nfunction createCursorUpdater(ctx) {\n  var canvasRect = ctx.canvasRect,\n      bbox = ctx.bbox;\n\n\n  window.addEventListener('mousemove', onMouseMove, true);\n  window.addEventListener('mousedown', onMouseClick, true);\n  window.addEventListener('touchstart', onTouchStart, true);\n  window.addEventListener('touchmove', onTouchMove, true);\n\n  return {\n    dispose: dispose\n  };\n\n  function dispose() {\n    window.removeEventListener('mousemove', onMouseMove, true);\n    window.removeEventListener('mousedown', onMouseClick, true);\n    window.removeEventListener('touchstart', onTouchStart, true);\n    window.removeEventListener('touchmove', onTouchMove, true);\n  }\n\n  function onTouchStart(e) {\n    var firstTouch = e.touches[0];\n    if (!firstTouch) return;\n\n    setClick(firstTouch.clientX, firstTouch.clientY);\n    setHover(firstTouch.clientX, firstTouch.clientY);\n  }\n\n  function onTouchMove(e) {\n    var firstTouch = e.touches[0];\n    if (!firstTouch) return;\n    setHover(firstTouch.clientX, firstTouch.clientY);\n  }\n\n  function onMouseMove(e) {\n    setHover(e.clientX, e.clientY);\n  }\n\n  function onMouseClick(e) {\n    setClick(e.clientX, e.clientY);\n  }\n\n  function setHover(clientX, clientY) {\n    ctx.cursor.hoverX = getSceneXFromClientX(clientX);\n    ctx.cursor.hoverY = getSceneYFromClientY(clientY);\n  }\n\n  function setClick(clientX, clientY) {\n    ctx.cursor.clickX = getSceneXFromClientX(clientX);\n    ctx.cursor.clickY = getSceneYFromClientY(clientY);\n  }\n\n  function getSceneXFromClientX(clientX) {\n    var dx = (clientX - canvasRect.left) / canvasRect.width;\n    return (bbox.maxX - bbox.minX) * dx + bbox.minX;\n  }\n\n  function getSceneYFromClientY(clientY) {\n    var dy = 1. - (clientY - canvasRect.top) / canvasRect.height;\n    return (bbox.minY - bbox.maxY) * dy + bbox.maxY;\n  }\n}\n\n/***/ }),\n\n/***/ \"pKWO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = drawParticlesProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shaderGraph_DrawParticleGraph__ = __webpack_require__(\"aZPT\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__updatePositionProgram__ = __webpack_require__(\"3xg8\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config__ = __webpack_require__(\"rvz5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__audioProgram__ = __webpack_require__(\"94y8\");\n\n\n\n\n\n\n\n/**\n * This program manages particles life-cycle. It updates particles positions\n * and initiates drawing them on screen.\n * \n * @param {Object} ctx rendering context. Holds WebGL state\n */\nfunction drawParticlesProgram(ctx) {\n  var gl = ctx.gl;\n\n  var particleStateResolution, particleIndexBuffer;\n  var numParticles;\n\n  var currentVectorField = '';\n  var updatePositionProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__updatePositionProgram__[\"a\" /* default */])(ctx);\n  var audioProgram;\n\n  var drawProgram;\n  initPrograms();\n\n  return {\n    updateParticlesCount: updateParticlesCount,\n    updateParticlesPositions: updateParticlesPositions,\n    drawParticles: drawParticles,\n    updateCode: updateCode,\n    updateColorMode: updateColorMode\n  };\n\n  function initPrograms() {\n    // need to update the draw graph because color mode shader has changed.\n    initDrawProgram();\n\n    if (__WEBPACK_IMPORTED_MODULE_4__config__[\"a\" /* default */].isAudioEnabled) {\n      if (audioProgram) audioProgram.dispose();\n      audioProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__audioProgram__[\"a\" /* default */])(ctx);\n    }\n  }\n\n  function initDrawProgram() {\n    if (drawProgram) drawProgram.unload();\n\n    var drawGraph = new __WEBPACK_IMPORTED_MODULE_1__shaderGraph_DrawParticleGraph__[\"a\" /* default */](ctx.colorMode);\n    drawProgram = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createProgram(gl, drawGraph.getVertexShader(currentVectorField), drawGraph.getFragmentShader());\n  }\n\n  function updateParticlesPositions() {\n    if (!currentVectorField) return;\n\n    ctx.frame += 1;\n    ctx.frameSeed = Math.random();\n\n    // TODO: Remove this.\n    if (audioProgram) audioProgram.updateTextures();\n\n    updatePositionProgram.updateParticlesPositions();\n  }\n\n  function updateColorMode() {\n    initDrawProgram();\n  }\n\n  function updateCode(vfCode) {\n    ctx.frame = 0;\n    currentVectorField = vfCode;\n    updatePositionProgram.updateCode(vfCode);\n\n    initDrawProgram();\n  }\n\n  function updateParticlesCount() {\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n    var particleIndices = new Float32Array(numParticles);\n    var particleStateX = new Uint8Array(numParticles * 4);\n    var particleStateY = new Uint8Array(numParticles * 4);\n\n    console.log(\"Num. of particles: \" + numParticles);\n\n    var minX = ctx.bbox.minX;var minY = ctx.bbox.minY;\n    var width = ctx.bbox.maxX - minX;\n    var height = ctx.bbox.maxY - minY;\n    for (var i = 0; i < numParticles; i++) {\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__[\"a\" /* encodeFloatRGBA */])(Math.random() * width + minX, particleStateX, i * 4); // randomize the initial particle positions\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__[\"a\" /* encodeFloatRGBA */])(Math.random() * height + minY, particleStateY, i * 4); // randomize the initial particle positions\n\n      particleIndices[i] = i;\n    }\n\n    if (particleIndexBuffer) gl.deleteBuffer(particleIndexBuffer);\n    particleIndexBuffer = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createBuffer(gl, particleIndices);\n\n    updatePositionProgram.updateParticlesCount(particleStateX, particleStateY);\n  }\n\n  function drawParticles() {\n    if (!currentVectorField) return;\n\n    var program = drawProgram;\n    gl.useProgram(program.program);\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindAttribute(gl, particleIndexBuffer, program.a_index, 1);\n\n    updatePositionProgram.prepareToDraw(program);\n    ctx.inputs.updateBindings(program);\n\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    gl.uniform1f(program.u_particles_res, particleStateResolution);\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n    gl.drawArrays(gl.POINTS, 0, numParticles);\n  }\n}\n\n/***/ }),\n\n/***/ \"pXNl\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = textureCollection;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/**\n * A wrapper over collection of textures. Can be used to represent\n * individual textures for every dimension.\n */\n\n\nfunction textureCollection(gl, dimensions, particleStateResolution) {\n  var textures = dimensions.map(function (d, index) {\n    var textureInfo = {\n      texture: __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, d.particleState, particleStateResolution, particleStateResolution),\n      index: index,\n      name: d.name\n    };\n\n    return textureInfo;\n  });\n\n  return {\n    dispose: dispose,\n    bindTextures: bindTextures,\n    assignProgramUniforms: assignProgramUniforms,\n    length: dimensions.length,\n    textures: textures,\n    get: function get(i) {\n      return textures[i];\n    }\n  };\n\n  function assignProgramUniforms(program) {\n    textures.forEach(function (tInfo) {\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n\n  function dispose() {\n    textures.forEach(function (tInfo) {\n      return gl.deleteTexture(tInfo.texture);\n    });\n  }\n\n  function bindTextures(gl, program) {\n    textures.forEach(function (tInfo) {\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, tInfo.texture, tInfo.index);\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n}\n\n/***/ }),\n\n/***/ \"rvz5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__appState__ = __webpack_require__(\"NEgR\");\n\n\nvar defaultConfig = {\n  // I need to flash our more details before making any promises.\n  isAudioEnabled: false,\n  // this allows to render an overlay grid with vectors. Enable it\n  // and drag the scene a little bit.\n  vectorLinesEnabled: false,\n\n  // Starting from which texture unit we can bind custom inputs?\n  FREE_TEXTURE_UNIT: 4,\n\n  // whether input bindings should be visible\n  showBindings: __WEBPACK_IMPORTED_MODULE_0__appState__[\"a\" /* default */].getQS().get('showBindings') || false\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (defaultConfig);\n\n/***/ }),\n\n/***/ \"svlg\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = makePragmaParser;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(\"//Fk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fetchGLSL_js__ = __webpack_require__(\"iw7m\");\n\n\n\nvar pragmaInclude = '#include ';\nvar nullCode = { code: ''\n\n  /**\n   * Naively parses glsl code and tries to replace all `#pragma` statements\n   * with empty string. Gives structured collection of pragma statements back\n   * \n   * @param {String} code \n   */\n};function makePragmaParser(code) {\n  if (!code) return new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a(function (resolve) {\n    return resolve(nullCode);\n  });\n\n  var parsedLines = processLineByLine(code);\n  if (parsedLines.pending.length > 0) {\n    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.all(parsedLines.pending).then(function () {\n      return parsedLines;\n    }).catch(function (error) {\n      return { error: { error: error } };\n    });\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a(function (resolve) {\n    return resolve(parsedLines);\n  });\n}\n\nfunction processLineByLine(code) {\n  var pending = [];\n  var lines = code.split('\\n');\n  var outputLines = [];\n  var currentIndex = 0;\n  lines.forEach(function (line, index) {\n    currentIndex = index;\n    if (line && line[0] === '#') {\n      outputLines.push('');\n      processPragma(line);\n    } else {\n      outputLines.push(line);\n    }\n  });\n\n  return {\n    getCode: getCode,\n    pending: pending\n  };\n\n  function getCode() {\n    return outputLines.join('\\n');\n  }\n\n  function processPragma(line) {\n    if (line.indexOf(pragmaInclude) === 0) {\n      var include = line.substr(pragmaInclude.length);\n      var insertIndex = currentIndex;\n      pending.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__fetchGLSL_js__[\"a\" /* default */])(include).then(function (code) {\n        outputLines[insertIndex] = code;\n      }));\n    }\n  }\n}\n\n/***/ }),\n\n/***/ \"vhRe\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n\n\n\n\n\n\n\nvar PanzoomTransform = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(PanzoomTransform, _BaseShaderNode);\n\n  function PanzoomTransform(config) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, PanzoomTransform);\n\n    // decode is used when we move particle read from the texture\n    // otherwise we write particle to texture and need to reverse transform\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (PanzoomTransform.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(PanzoomTransform)).call(this));\n\n    _this.decode = config && config.decode;\n    _this.srcPosName = config && config.posName || 'pos';\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(PanzoomTransform, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      if (this.decode) {\n        // TODO: Need to figure out how to not duplicate this.\n        return '\\n  uniform vec2 u_min;\\n  uniform vec2 u_max;\\n';\n      }\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      if (this.decode) {\n        return '\\n  // move particle position according to current transform\\n  vec2 du = (u_max - u_min);\\n  pos.x = ' + this.srcPosName + '.x * du.x + u_min.x;\\n  pos.y = ' + this.srcPosName + '.y * du.y + u_min.y;\\n';\n      }\n      return '\\n  pos.x = (' + this.srcPosName + '.x - u_min.x)/du.x;\\n  pos.y = (' + this.srcPosName + '.y - u_min.y)/du.y;\\n';\n    }\n  }]);\n\n  return PanzoomTransform;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (PanzoomTransform);\n\n/***/ })\n\n},[\"YJWA\"]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.1131a9f313620402904f.js","import createInputCollection from './programs/inputs/inputCollection';\nimport createVideoInput from './programs/inputs/videoInput';\nimport createImageInputBinding from './programs/inputs/imageInput';\n\n// Allows to bind media elements to vector field\nexport default function createInputsModel(ctx) {\n  ctx.inputs = createInputCollection();\n  var inputs = [];\n\n  var api = {\n    getInputs,\n    addInput,\n  };\n\n  return api;\n\n  function getInputs() {\n    return inputs;\n  }\n\n  function addInput() {\n    inputs.push(createInputElementViewModel(ctx));\n  }\n\n}\n\nfunction createInputElementViewModel(ctx) {\n  var pendingUpdate = null;\n\n  var input = {\n    link: '',\n    error: null,\n    name: 'input0',\n    updateBinding\n  }\n\n  return input;\n\n  function updateBinding() {\n    if (pendingUpdate) {\n      clearTimeout(pendingUpdate);\n      pendingUpdate = null;\n    }\n\n    pendingUpdate = setTimeout(setBinding, 300);\n  }\n\n  function setBinding() {\n    input.error = null;\n    pendingUpdate = null;\n    var binding = createImageInputBinding(ctx, input.link, {\n      done() {\n        // TODO: Preview\n        console.log('ok');\n      },\n      error(err) {\n        // TODO: Better Error checking\n        input.error = err;\n      }\n    });\n    ctx.inputs.bindInput(0, binding);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/createInputsModel.js","import util from '../gl-utils';\nimport UpdatePositionGraph from '../shaderGraph/updatePositionGraph';\nimport ColorMode from './colorModes';\nimport makeReadProgram from './colorProgram';\nimport textureCollection from '../utils/textureCollection';\nimport makeStatCounter from '../utils/makeStatCounter';\nimport {decodeFloatRGBA} from '../utils/floatPacking';\nimport bus from '../bus';\n\nconst particlePositionShaderCodeBuilder = new UpdatePositionGraph();\n\nexport default function updatePositionProgram(ctx) {\n  var gl = ctx.gl;\n  var readTextures, writeTextures;\n  var particleStateResolution;\n  var updateProgram;\n  var uniformParticleColor = { r: 77/255, g: 188/255, b: 201/255, a: 1  };\n  var readVelocity = makeReadProgram(ctx);\n\n  // If someone needs to get vectors out from the GPU, they send a `vector-lines-request`\n  // over the bus. This request is delayed until next compute frame. Once it is handled,\n  // we send them back response with calculated vectors.\n  var pendingVectorLines;\n\n  // TODO: need to make sure we are not leaking.\n  bus.on('vector-lines-request', putVectorLinesRequestIntoQueue);\n\n  return {\n    updateCode,\n    updateParticlesPositions,\n    updateParticlesCount,\n    prepareToDraw,\n  };\n\n  function updateCode(vectorField) {\n    particlePositionShaderCodeBuilder.setCustomVectorField(vectorField);\n    let fragment = particlePositionShaderCodeBuilder.getFragmentShader();\n    let vertex = particlePositionShaderCodeBuilder.getVertexShader();\n\n    let newProgram = util.createProgram(gl, vertex, fragment);\n\n    if (updateProgram) updateProgram.unload();\n    updateProgram = newProgram;\n\n    if (ctx.colorMode === ColorMode.VELOCITY) readVelocity.requestSpeedUpdate();\n  }\n  \n  function updateParticlesCount(x, y) {\n    particleStateResolution = ctx.particleStateResolution;\n\n    var dimensions = [{\n      name: 'x',\n      particleState: x\n    }, {\n      name: 'y',\n      particleState: y\n    }];\n\n    if (readTextures) readTextures.dispose();\n    readTextures = textureCollection(gl, dimensions, particleStateResolution);\n\n    if (writeTextures) writeTextures.dispose();\n    writeTextures = textureCollection(gl, dimensions, particleStateResolution);\n\n    readVelocity.updateParticlesCount();\n  }\n\n  function prepareToDraw(program) {\n    var colorMode = ctx.colorMode;\n    if (colorMode === ColorMode.UNIFORM) gl.uniform4f(program.u_particle_color, uniformParticleColor.r, uniformParticleColor.g, uniformParticleColor.b, uniformParticleColor.a);\n    else if (colorMode === ColorMode.VELOCITY) readVelocity.setColorMinMax(program);\n\n    readTextures.bindTextures(gl, program);\n  }\n\n  function updateParticlesPositions() {\n    var program = updateProgram;\n    gl.useProgram(program.program);\n  \n    util.bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n  \n    ctx.inputs.updateBindings(program);\n\n    // TODO: Remove this.\n    if (ctx.audioTexture) {\n      util.bindTexture(gl, ctx.audioTexture, 5);\n      gl.uniform1i(program['u_audio'], 5);\n    }\n\n    readTextures.bindTextures(gl, program);\n  \n    gl.uniform1f(program.u_rand_seed, ctx.frameSeed);\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    gl.uniform1f(program.u_drop_rate, ctx.dropProbability);\n  \n    // Draw each coordinate individually\n    for(var i = 0; i < writeTextures.length; ++i) {\n      var writeInfo = writeTextures.get(i);\n      gl.uniform1i(program.u_out_coordinate, i);\n      util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n      gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n\n    // TODO: I think I need to keep this time-bound, i.e. allocate X ms to\n    // process particle positions, and move on. So that the rendering thread is not paused for too long\n    if (ctx.colorMode === ColorMode.VELOCITY) {\n      readVelocity.updateParticlesPositions(program);\n    }\n\n    if (pendingVectorLines) {\n      processVectorLinesRequest(program);\n      pendingVectorLines = null;\n    }\n\n    // swap the particle state textures so the new one becomes the current one\n    var temp = readTextures;\n    readTextures = writeTextures;\n    writeTextures = temp;\n  }\n\n  function putVectorLinesRequestIntoQueue(request) {\n    pendingVectorLines = request;\n  }\n\n  function processVectorLinesRequest(program) {\n    // TODO: Move this out\n    var dimensions = [{\n      name: 'x',\n      particleState: pendingVectorLines.x\n    }, {\n      name: 'y',\n      particleState: pendingVectorLines.y\n    }];\n\n    // We create temporary textures and load requested positions in there\n    var resolutionOfParticlesInRequest = pendingVectorLines.resolution;\n    var numParticles = resolutionOfParticlesInRequest * resolutionOfParticlesInRequest;\n\n    var texturesForRead = textureCollection(gl, dimensions, resolutionOfParticlesInRequest);\n    var texturesForWrite = textureCollection(gl, dimensions, resolutionOfParticlesInRequest);\n\n    texturesForRead.bindTextures(gl, program);\n\n    // Then we request coordinates out from GPU for each dimension\n    var writeInfo = texturesForWrite.get(0);\n    gl.uniform1i(program.u_out_coordinate, 6); // v_x\n\n    util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_x = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    gl.uniform1i(program.u_out_coordinate, 7); // v_y\n    writeInfo = texturesForWrite.get(1);\n    util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_y = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    texturesForWrite.dispose();\n    texturesForRead.dispose();\n\n    var xStats = makeStatCounter();\n    var yStats = makeStatCounter();\n\n    var decoded_velocity_x = new Float32Array(numParticles);\n    var decoded_velocity_y = new Float32Array(numParticles);\n    for(var i = 0; i < velocity_y.length; i+=4) {\n      var idx = i/4;\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      decoded_velocity_x[idx] = vx;\n      decoded_velocity_y[idx] = vy;\n      xStats.add(vx);\n      yStats.add(vy);\n    }\n\n    var vectorLineInfo = {\n      xStats,\n      yStats,\n      decoded_velocity_x,\n      decoded_velocity_y,\n      resolution: resolutionOfParticlesInRequest\n    };\n\n    bus.fire('vector-line-ready', vectorLineInfo);\n  }\n}\n\nfunction readFloat(buffer, offset) {\n    return decodeFloatRGBA(\n      buffer[offset + 0],\n      buffer[offset + 1],\n      buffer[offset + 2],\n      buffer[offset + 3]\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/updatePositionProgram.js","export default class BaseShaderNode {\n  constructor() { }\n  getDefines() { return ''; }\n  getFunctions() { return ''; }\n  getMainBody() { return ''; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/BaseShaderNode.js","/**\n * Various color modes.\n * \n * TODO: This could be generalized by allowing custom color shader\n */\nexport default {\n  /**\n   * Each particle gets its own color\n   */\n  UNIFORM: 1,\n\n  /**\n   * Color of a particle depends on its velocity\n   */\n  VELOCITY: 2,\n\n  /**\n   * Color of a particle depends on its velocity vector angle.\n   */\n  ANGLE: 3\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/colorModes.js","/**\n * This module parses user defined vector field code.\n */\n\nimport bus from '../bus';\nimport pragmaParse from './pragmaParser';\n\n// This is naive parser that is being used until the real `glsl-parser`\n// is loaded asynchronously. This parser assumes there are no errors\n// TODO: maybe I should be more careful here?\nvar glslParser = {\n  check(code) {\n    return {\n      code,\n      log: {\n        errorCount: 0\n      }\n    };\n  }\n};\n\n// glsl-parser is ~179KB uncompressed, we don't want to wait until it is downloaded.\n// So we load it asynchronously...\nrequire.ensure('glsl-parser', () => {\n  // ... and replace the naive parser with the real one, when ready.\n  glslParser = require('glsl-parser');\n\n  // notify interested parties, so that they can recheck code if they wish.\n  bus.fire('glsl-parser-ready'); \n});\n\nvar vectorFieldGlobals = `\nimport {\n  float PI;\n  float snoise(vec2 v);\n  float frame;\n  vec4 cursor;\n  vec2 rotate(vec2 p,float a);\n  float audio(float index);\n  sampler2D input0;\n  sampler2D input1;\n}`;\n\n/**\n * Given a string, verifies that it is a valid glsl code for a vector field,\n * and then returns code + log.\n * \n * @param {String} vectorFieldCode \n */\nexport default function getParsedVectorFieldFunction(vectorFieldCode) {\n  // TODO: what if we want to support 3d?\n  return pragmaParse(vectorFieldCode).then(pragmaParseResult => {\n    if (pragmaParseResult.error) {\n      return pragmaParseResult;\n    }\n\n    vectorFieldCode = pragmaParseResult.getCode();\n\n    var parserResult = glslParser.check(vectorFieldCode, { globals: vectorFieldGlobals });\n    parserResult.code = vectorFieldCode;\n\n    if (parserResult.log.errorCount) parserResult.error = parserError(parserResult.log);\n\n    return parserResult;\n  });\n}\n\nfunction parserError(log) {\n  let diag = log.diagnostics[0];\n  // TODO probably need to check kind (errors are 0, warnings are 1)\n  let firstError = diag.range;\n  let lineColumn = firstError.lineColumn();\n  let source = firstError.source;\n  let offset = source._lineOffsets[lineColumn.line]\n  let line = source.contents.substr(offset,  lineColumn.column);\n  line += source.contents.substring(firstError.start, firstError.end);\n  let prefix = 'Line ' + lineColumn.line + ': ';\n  let diagText = diag.text;\n  return {\n    error: \n      prefix + line + '\\n' +\n      whitespace(prefix.length) + whitespace(lineColumn.column) + '^',\n    errorDetail: diagText,\n    isFloatError: isFloatError(diagText)\n  };\n}\n\nfunction isFloatError(diagText) {\n  return diagText.indexOf('\"int\"') > -1 &&\n    diagText.indexOf('\"float\"')  > -1;\n}\n\nfunction whitespace(length) {\n  return new Array(length + 1).join(' ');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/editor/getParsedVectorFieldFunction.js","import bus from '../bus';\nimport glUtil from '../gl-utils';\n\nexport default audioProgram;\n\nfunction audioProgram(ctx) {\n  var gl = ctx.gl;\n\n  var audioWidth = 8, audioHeight = 8;\n  var audioBuffer = new Uint8Array(audioWidth * audioHeight * 4);\n  var audioTexture = glUtil.createTexture(gl, gl.NEAREST, audioBuffer, audioWidth, audioHeight);\n  var audioDirty = false;\n  ctx.audioTexture = audioTexture;\n\n  bus.on('audio', updateAudioBuffer);\n\n  return {\n    updateTextures,\n    dispose\n  };\n\n  function dispose() {\n    bus.off('audio', updateAudioBuffer);\n    gl.deleteTexture(audioTexture);\n  }\n\n  function updateTextures() {\n    if (!audioDirty) return;\n    audioDirty = false;\n\n    // TODO: This should come from fftSize?\n    var width = 5, height = 5;\n    gl.bindTexture(gl.TEXTURE_2D, audioTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, audioBuffer);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  function updateAudioBuffer(newBuffer) {\n    audioBuffer = newBuffer;\n    audioDirty = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/audioProgram.js","/**\n * XMLHttpRequest wrapped into a promise.\n * \n * @param {String} url \n */\nexport default function request(url, options) {\n  if (!options) options = {};\n\n  return new Promise(download);\n\n  function download(resolve, reject) {\n    var req = new XMLHttpRequest();\n\n    if (typeof options.progress === 'function') {\n      req.addEventListener('progress', updateProgress, false);\n    }\n\n    req.addEventListener('load', transferComplete, false);\n    req.addEventListener('error', transferFailed, false);\n    req.addEventListener('abort', transferCanceled, false);\n\n    req.open('GET', url);\n    if (options.responseType) {\n      req.responseType = options.responseType;\n    }\n    req.send(null);\n\n    function updateProgress(e) {\n      if (e.lengthComputable) {\n        options.progress({\n          loaded: e.loaded,\n          total: e.total,\n          percent: e.loaded / e.total\n        });\n      }\n    }\n\n    function transferComplete() {\n      if (req.status !== 200) {\n        reject(`Unexpected status code ${req.status} when calling ${url}`);\n        return;\n      }\n      var response = req.response;\n\n      if (options.responseType === 'json' && typeof response === 'string') {\n        // IE\n        response = JSON.parse(response);\n      }\n\n      resolve(response);\n    }\n\n    function transferFailed() {\n      reject(`Failed to download ${url}`);\n    }\n\n    function transferCanceled() {\n      reject(`Cancelled download of ${url}`);\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/request.js","/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n * \n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n * \n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\nexport default {\n  createTexture: createTexture,\n  bindFramebuffer: bindFramebuffer,\n  createProgram: createProgram, \n  createBuffer: createBuffer,\n  bindAttribute: bindAttribute,\n  bindTexture: bindTexture\n}\n\nfunction bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\n\nfunction createBuffer(gl, data) {\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return buffer;\n}\n\nfunction createTexture(gl, filter, data, width, height) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  if (data instanceof Uint8Array) {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  }\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\n\nfunction bindFramebuffer(gl, framebuffer, texture) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  }\n}\n\nfunction bindAttribute(gl, buffer, attribute, numComponents) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.enableVertexAttribArray(attribute);\n  gl.vertexAttribPointer(attribute, numComponents, gl.FLOAT, false, 0, 0);\n}\n\nfunction createProgram(gl, vertexSource, fragmentSource) {\n  var program = gl.createProgram();\n\n  var vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(program));\n  }\n\n  var wrapper = {\n    program: program,\n    unload\n  };\n\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  var i;\n  for (i = 0; i < numAttributes; i++) {\n      var attribute = gl.getActiveAttrib(program, i);\n      wrapper[attribute.name] = gl.getAttribLocation(program, attribute.name);\n  }\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (i = 0; i < numUniforms; i++) {\n      var uniform = gl.getActiveUniform(program, i);\n      wrapper[uniform.name] = gl.getUniformLocation(program, uniform.name);\n  }\n\n  return wrapper; \n\n  function unload() {\n    gl.deleteProgram(program);\n  }\n}\n\nfunction createShader(gl, type, source) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new Error(gl.getShaderInfoLog(shader));\n  }\n\n  return shader;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/gl-utils.js","import BaseShaderNode from './BaseShaderNode';\nimport snoise from './parts/simplex-noise';\nimport {getInputUniforms} from './customInput';\n\nexport default class UserDefinedVelocityFunction extends BaseShaderNode {\n  constructor(updateCode) {\n    super();\n    this.updateCode = updateCode || '';\n  }\n\n  setNewUpdateCode(newUpdateCode) {\n    this.updateCode = newUpdateCode;\n  }\n\n  getDefines() {\n    return `\nuniform float frame;\nuniform vec4 cursor;\n// TODO: use inputN instead.\nuniform sampler2D u_audio;\n\n#define PI 3.1415926535897932384626433832795\n\n${getInputUniforms()}\n`\n  }\n\n  getFunctions() {\n  // TODO: Do I need to worry about \"glsl injection\" (i.e. is there potential for security attack?)\n  // TODO: Do I need to inject snoise only when it's used?\n    return `\n${snoise}\n\nvec2 rotate(vec2 p,float a) {\n\treturn cos(a)*p+sin(a)*vec2(p.y,-p.x);\n}\n\n// TODO: This will change. Don't use it.\nfloat audio(float index) {\n  float rgbI = floor(index/4.);\n  vec2 txPos = vec2(fract(rgbI / 5.), floor(rgbI / 5.) / 5.);\n  vec4 rgba = texture2D(u_audio, txPos);\n  \n  float offset = mod(index, 4.);\n  if (offset == 0.) return rgba[0];\n  if (offset == 1.) return rgba[1];\n  if (offset == 2.) return rgba[2];\n  return rgba[3];\n}\n\n${this.updateCode ? this.updateCode : 'vec2 get_velocity(vec2 p) { return vec2(0.); }'}\n  `\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/UserDefinedVelocityFunction.js","/**\n * This file encodes/decodes float values into 32bit rgba array\n * \n * It is based on https://computergraphics.stackexchange.com/questions/4151/webgl-packing-unpacking-functions-that-can-roundtrip-all-typical-32-bit-floats\n * and it is not perfect. If you know how to improve it - please let me know.\n */\n\n/**\n * Encodes float value into output array\n * @param {float} val - value to be encode\n * @param {Uint8Array} out  - array where encoded value needs to be written.\n * @param {Number} writeOffset - offset in the original array where values should be written.\n */\nexport function encodeFloatRGBA(val, out, writeOffset) {\n  if (val == 0.0) {\n    out[writeOffset + 0] = 0; out[writeOffset + 1] = 0; out[writeOffset + 2] = 0; out[writeOffset + 3] = 0;\n    return;\n  }\n\n  var mag = Math.abs(val);\n  var exponent = Math.floor(Math.log2(mag));\n  // Correct log2 approximation errors.\n  exponent += (exp2(exponent) <= mag / 2.0) ? 1 : 0;\n  exponent -= (exp2(exponent) > mag) ? 1 : 0;\n\n  var mantissa;\n  if (exponent > 100.0) {\n      mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\n  } else {\n      mantissa = mag / (exp2(exponent)) - 1.0;\n  }\n\n  var a = exponent + 127.0;\n  mantissa *= 256.0;\n  var b = Math.floor(mantissa);\n  mantissa -= b;\n  mantissa *= 256.0;\n  var c = Math.floor(mantissa);\n  mantissa -= c;\n  mantissa *= 128.0;\n  var d = Math.floor(mantissa) * 2.0 + ((val < 0.0) ? 1: 0);\n\n  out[writeOffset + 0] = a; out[writeOffset + 1] = b; out[writeOffset + 2] = c; out[writeOffset + 3] = d;\n}\n\n/**\n * Given byte values in range [0..255] returns decoded float value.\n * \n * @param {Byte} r \n * @param {Byte} g \n * @param {Byte} b \n * @param {Byte} a \n */\nexport function decodeFloatRGBA(r, g, b, a) {\n  var A = Math.floor(r + 0.5);\n  var B = Math.floor(g + 0.5);\n  var C = Math.floor(b + 0.5);\n  var D = Math.floor(a + 0.5);\n\n  var exponent = A - 127.0;\n  var sign = 1.0 - (D % 2.0) * 2.0;\n  var mantissa = ((A > 0.0) ? 1 : 0)\n                  + B / 256.0\n                  + C / 65536.0\n                  + Math.floor(D / 2.0) / 8388608.0;\n  return sign * mantissa * exp2(exponent);\n}\n\nfunction exp2(exponent) { return Math.exp(exponent * Math.LN2); }\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/floatPacking.js","/**\n * Creates a single image binding element in the input collection.\n */\nimport loadTexture from \"./loadTexture\";\nimport glUtils from '../../gl-utils';\nimport config from '../../config';\n\nconst FREE_TEXTURE_UNIT = config.FREE_TEXTURE_UNIT;\n\nexport default function createImageInputBinding(ctx, url, callbacks) {\n  var texture = null;\n  loadTexture(ctx.gl, url).then(setTexture).catch(handleError);\n\n  return {\n    updateBinding,\n    dispose() {\n      // TODO: Potential race condition, as loadTexture is async.\n      ctx.gl.deleteTexture(texture);\n    }\n  }\n\n  function handleError(err) {\n    if (callbacks && callbacks.error) {\n      callbacks.error(err);\n    }\n  }\n\n  function setTexture(loadedTexture) {\n    texture = loadedTexture;\n    if (callbacks && callbacks.done) {\n      callbacks.done(url);\n    }\n  }\n\n  function updateBinding(program, inputIndex) {\n    var realIndex = inputIndex + FREE_TEXTURE_UNIT;\n    glUtils.bindTexture(ctx.gl, texture, realIndex);\n    ctx.gl.uniform1i(program[`input${inputIndex}`], realIndex);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/inputs/imageInput.js","/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n *\n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n *\n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\nimport util from './gl-utils';\nimport makePanzoom from 'panzoom';\nimport bus from './bus';\nimport appState from './appState';\nimport wglPanZoom from './wglPanZoom';\n\nimport createScreenProgram from './programs/screenProgram';\nimport createDrawParticlesProgram from './programs/drawParticlesProgram';\nimport createCursorUpdater from './utils/cursorUpdater';\nimport createVectorFieldEditorState from './editor/vectorFieldState';\nimport createInputsModel from './createInputsModel';\n\n/**\n * Kicks offs the app rendering. Initialized before even vue is loaded.\n *\n * @param {WebGLRenderingContext} gl\n */\nexport default function initScene(gl) {\n  // Canvas size management\n  var canvasRect = { width: 0, height: 0, top: 0, left: 0 };\n  setWidthHeight(gl.canvas.width, gl.canvas.height);\n  window.addEventListener('resize', onResize, true);\n\n  // Video capturing is available in super advanced mode. You'll need to install\n  // and start https://github.com/greggman/ffmpegserver.js\n  // Then type in the console: window.startRecord();\n  // This will trigger frame-by-frame recording (it is slow). To stop it, call window.stopRecord();\n  bus.on('start-record', startRecord);\n  bus.on('stop-record', stopRecord);\n  var currentCapturer = null;\n\n  // TODO: It feels like bounding box management needs to be moved out from here.\n  // TODO: bbox needs to be a class with width/height properties.\n  var bbox = appState.getBBox() || {};\n  var currentPanZoomTransform = {\n    scale: 1,\n    x: 0,\n    y: 0\n  };\n\n  // How many particles do we want?\n  var particleCount = appState.getParticleCount();\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n\n  // Context variable is a way to share rendering state between multiple programs. It has a lot of stuff on it.\n  // I found that it's the easiest way to work in state-full world of WebGL.\n  // Until I discover a better way to write WebGL code.\n  var ctx = {\n    gl,\n    bbox,\n    canvasRect,\n\n    inputs: null,\n\n    framebuffer: gl.createFramebuffer(),\n\n    // This is used only to render full-screen rectangle. Main magic happens inside textures.\n    quadBuffer: util.createBuffer(gl, new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1])),\n\n    colorMode: appState.getColorMode(),\n\n    // This defines texture unit for screen rendering. First few indices are taken by textures\n    // that compute particles position/color\n    // TODO: I need to find a better way to manage this.\n    screenTextureUnit: 3,\n\n    integrationTimeStep: appState.getIntegrationTimeStep(),\n\n    // On each frame the likelihood for a particle to reset its position is this:\n    dropProbability: appState.getDropProbability(),\n\n    // current frame number. Reset every time when new shader is compiled\n    frame: 0,\n\n    // Information about mouse cursor. Could be useful to simplify\n    // exploration\n    cursor: {\n      // Where mouse was last time clicked (or tapped)\n      clickX: 0, clickY: 0,\n      // where mouse was last time moved. If this is a touch device\n      // this is the same as clickX, clickY\n      hoverX: 0, hoverY: 0\n    },\n\n    // Texture size to store particles' positions\n    particleStateResolution: 0,\n\n    // How quickly we should fade previous frame (from 0..1)\n    fadeOpacity: appState.getFadeout(),\n\n    // Ignore this one for a moment. Yes, the app support web audio API,\n    // but it's rudimentary, so... shhh! it's a secret.\n    // Don't shhh on me!\n    audioTexture: null\n  };\n\n  // Frame management\n  var lastAnimationFrame;\n  var isPaused = false;\n\n  var inputsModel = createInputsModel(ctx);\n\n  // screen rendering;\n  var screenProgram = createScreenProgram(ctx);\n  var drawProgram = createDrawParticlesProgram(ctx);\n  var cursorUpdater = createCursorUpdater(ctx);\n  var vectorFieldEditorState = createVectorFieldEditorState(drawProgram);\n\n  // particles\n  updateParticlesCount(particleCount);\n\n  var api = {\n    start: nextFrame,\n    stop,\n    dispose,\n\n    resetBoundingBox,\n    moveBoundingBox,\n\n    setPaused,\n\n    getParticlesCount,\n    setParticlesCount,\n\n    setFadeOutSpeed,\n    getFadeOutSpeed,\n\n    setDropProbability,\n    getDropProbability,\n\n    getIntegrationTimeStep,\n    setIntegrationTimeStep,\n\n    setColorMode,\n    getColorMode,\n\n    vectorFieldEditorState,\n\n    inputsModel,\n\n    getCanvasRect() {\n      // We trust they don't do anything bad with this ...\n      return canvasRect;\n    },\n\n    getBoundingBox() {\n      // again, we trust. Maybe to much?\n      return ctx.bbox;\n    }\n  }\n\n  var panzoom = initPanzoom();\n  restoreBBox();\n\n  setTimeout(() => {\n    bus.fire('scene-ready', api);\n  })\n\n  return api;\n\n  function moveBoundingBox(changes) {\n    if (!changes) return;\n    var parsedBoundingBox = Object.assign({}, ctx.bbox);\n\n    assignIfPossible(changes, 'minX', parsedBoundingBox);\n    assignIfPossible(changes, 'minY', parsedBoundingBox);\n    assignIfPossible(changes, 'maxX', parsedBoundingBox);\n    assignIfPossible(changes, 'maxY', parsedBoundingBox);\n\n    // for Y axis changes we need to preserve aspect ration, which means\n    // we also need to change X...\n    if (changes.minY !== undefined || changes.maxY !== undefined) {\n      // adjust values for X\n      var heightChange = Math.abs(parsedBoundingBox.minY - parsedBoundingBox.maxY)/Math.abs(ctx.bbox.minY - ctx.bbox.maxY);\n      var cx = (ctx.bbox.maxX + ctx.bbox.minX)/2;\n      var prevWidth = (ctx.bbox.maxX - ctx.bbox.minX)/2;\n      parsedBoundingBox.minX = cx - prevWidth * heightChange;\n      parsedBoundingBox.maxX = cx + prevWidth * heightChange;\n\n    }\n\n    applyBoundingBox(parsedBoundingBox);\n  }\n\n  function assignIfPossible(change, key, newBoundingBox) {\n    var value = Number.parseFloat(change[key]);\n    if (Number.isFinite(value)) {\n      newBoundingBox[key] = value;\n    }\n  }\n\n  function startRecord(capturer) {\n    currentCapturer = capturer;\n  }\n\n  function stopRecord() {\n    currentCapturer = null;\n  }\n\n  function setColorMode(x) {\n    var mode = parseInt(x, 10);\n    appState.setColorMode(mode);\n    ctx.colorMode = appState.getColorMode();\n    drawProgram.updateColorMode(mode);\n  }\n\n  function getColorMode() {\n    return appState.getColorMode();\n  }\n\n  function getIntegrationTimeStep() {\n    return appState.getIntegrationTimeStep();\n  }\n\n  function setIntegrationTimeStep(x) {\n    var f = parseFloat(x);\n    if (Number.isFinite(f)) {\n      ctx.integrationTimeStep = f;\n      appState.setIntegrationTimeStep(f);\n      bus.fire('integration-timestep-changed', f);\n    }\n  }\n\n  function setPaused(shouldPause) {\n    isPaused = shouldPause;\n    nextFrame();\n  }\n\n  // Main screen fade out configuration\n  function setFadeOutSpeed(x) {\n    var f = parseFloat(x);\n    if (Number.isFinite(f)) {\n      ctx.fadeOpacity = f;\n      appState.setFadeout(f);\n    }\n  }\n\n  function getFadeOutSpeed() {\n    return appState.getFadeout();\n  }\n\n  // Number of particles configuration\n  function getParticlesCount() {\n    return appState.getParticleCount();\n  }\n\n  function setParticlesCount(newParticleCount) {\n    if (!Number.isFinite(newParticleCount)) return;\n    if (newParticleCount === particleCount) return;\n    if (newParticleCount < 1) return;\n\n    updateParticlesCount(newParticleCount);\n\n    particleCount = newParticleCount;\n    appState.setParticleCount(newParticleCount);\n  }\n\n  // drop probability\n  function setDropProbability(x) {\n    var f = parseFloat(x);\n    if (Number.isFinite(f)) {\n      // TODO: Do I need to worry about duplication/clamping?\n      appState.setDropProbability(f);\n      ctx.dropProbability = f;\n    }\n  }\n\n  function getDropProbability() {\n    return appState.getDropProbability();\n  }\n\n  function onResize() {\n    setWidthHeight(window.innerWidth, window.innerHeight);\n\n    screenProgram.updateScreenTextures();\n\n    updateBoundingBox(currentPanZoomTransform);\n  }\n\n  function setWidthHeight(w, h) {\n    var dx = Math.max(w * 0.02, 30);\n    var dy = Math.max(h * 0.02, 30);\n    canvasRect.width = w + 2 * dx;\n    canvasRect.height = h + 2 * dy;\n    canvasRect.top = - dy;\n    canvasRect.left = - dx;\n\n\n    let canvas = gl.canvas;\n    canvas.width = canvasRect.width;\n    canvas.height = canvasRect.height;\n    canvas.style.left = (-dx) + 'px';\n    canvas.style.top = (-dy) + 'px';\n  }\n\n  function dispose() {\n      stop();\n      panzoom.dispose();\n      window.removeEventListener('resize', onResize, true);\n      cursorUpdater.dispose();\n      vectorFieldEditorState.dispose();\n  }\n\n  function nextFrame() {\n    if (lastAnimationFrame) return;\n\n    if (isPaused) return;\n\n    lastAnimationFrame = requestAnimationFrame(draw);\n  }\n\n  function stop() {\n    cancelAnimationFrame(lastAnimationFrame);\n    lastAnimationFrame = 0;\n  }\n\n  function draw() {\n    lastAnimationFrame = 0;\n\n    drawScreen();\n\n    if (currentCapturer) currentCapturer.capture(gl.canvas);\n\n    nextFrame();\n  }\n\n  function drawScreen() {\n    screenProgram.fadeOutLastFrame()\n    drawProgram.drawParticles();\n    screenProgram.renderCurrentScreen();\n    drawProgram.updateParticlesPositions();\n  }\n\n  function updateParticlesCount(numParticles) {\n    // we create a square texture where each pixel will hold a particle position encoded as RGBA\n    ctx.particleStateResolution = Math.ceil(Math.sqrt(numParticles));\n    drawProgram.updateParticlesCount();\n  }\n\n  function initPanzoom() {\n    let initializedPanzoom = makePanzoom(gl.canvas, {\n      realPinch: true,\n      zoomSpeed: 0.025,\n      controller: wglPanZoom(gl.canvas, updateBoundingBox)\n    });\n\n    return initializedPanzoom;\n  }\n\n  function restoreBBox() {\n    var savedBBox = appState.getBBox();\n    var {width, height} = canvasRect;\n\n    let sX = Math.PI * Math.E;\n    let sY = Math.PI * Math.E;\n    let tX = 0;\n    let tY = 0;\n    if (savedBBox) {\n      sX = savedBBox.maxX - savedBBox.minX;\n      sY = savedBBox.maxY - savedBBox.minY;\n      // TODO: Not sure if this is really the best way to do it.\n      // var ar = width/height;\n      tX = width * (savedBBox.minX + savedBBox.maxX)/2;\n      tY = width * (savedBBox.minY + savedBBox.maxY)/2;\n    }\n\n    var w2 = sX * width/2;\n    var h2 = sY * height/2;\n    panzoom.showRectangle({\n      left: -w2 + tX,\n      top: -h2 - tY,\n      right: w2 + tX,\n      bottom: h2 - tY ,\n    });\n  }\n\n  function updateBoundingBox(transform) {\n    screenProgram.boundingBoxUpdated = true;\n\n    currentPanZoomTransform.x = transform.x;\n    currentPanZoomTransform.y = transform.y;\n    currentPanZoomTransform.scale = transform.scale;\n\n    var {width, height} = canvasRect;\n\n    var minX = clientX(0);\n    var minY = clientY(0);\n    var maxX = clientX(width);\n    var maxY = clientY(height);\n\n    // we divide by width to keep aspect ratio\n    // var ar = width/height;\n    var p = 10000;\n    bbox.minX = Math.round(p * minX/width)/p;\n    bbox.minY = Math.round(p * -minY/width)/p;\n    bbox.maxX = Math.round(p * maxX/width)/p;\n    bbox.maxY = Math.round(p * -maxY/ width)/p;\n\n\n    appState.saveBBox(bbox);\n\n    bus.fire('bbox-change', bbox);\n\n    function clientX(x) {\n      return (x - transform.x)/transform.scale;\n    }\n\n    function clientY(y) {\n      return (y - transform.y)/transform.scale;\n    }\n  }\n\n  function resetBoundingBox() {\n    var w = Math.PI * Math.E * 0.5;\n    var h = Math.PI * Math.E * 0.5;\n\n    applyBoundingBox({\n      minX: -w,\n      minY: -h,\n      maxX: w,\n      maxY: h\n    })\n  }\n\n  function applyBoundingBox(boundingBox) {\n    appState.saveBBox(boundingBox, /* immediate = */ true);\n    restoreBBox();\n    // a hack to trigger panzoom event\n    panzoom.moveBy(0, 0, false);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/scene.js","//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvar code = `\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n`\n\nexport default code;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/parts/simplex-noise.js","import queryState from 'query-state';\nimport bus from './bus';\nimport ColorModes from './programs/colorModes';\nimport wrapVectorField from './wrapVectorField';\n\n/**\n * The state of the fieldplay is stored in the query string. This is the\n * only place where query string can be manipulated or fetched.\n */\n\nvar qs = queryState({}, {\n  useSearch: true,\n  // Older version of the app used hash to store application arguments.\n  // Turns out hash is not good for websites like reddit. They can block\n  // url, saying \"url was already submitted\" if the only part that is different\n  // is hash. So, we switch to search string, and maintain backward compatibility\n  // for fields created before.\n  rewriteHashToSearch: true\n});\n\nvar currentState = qs.get();\n\nvar defaultVectorField = wrapVectorField(`v.x = 0.1 * p.y;\n  v.y = -0.2 * p.y;`);\n\nvar pendingSave;\nvar defaults = {\n  timeStep: 0.01,\n  dropProbability: 0.009,\n  particleCount: 10000,\n  fadeout: .998,\n  colorMode: ColorModes.UNIFORM\n}\n\nlet settingsPanel = {\n  collapsed: window.innerWidth < 600 ? true : false,\n};\n\nexport default {\n  settingsPanel,\n  saveBBox,\n  getBBox,\n  getQS() { return qs; },\n  saveCode,\n  getCode,\n  getDefaultCode,\n\n  getDropProbability,\n  setDropProbability,\n\n  getIntegrationTimeStep,\n  setIntegrationTimeStep,\n\n  getParticleCount,\n  setParticleCount,\n\n  getFadeout,\n  setFadeout,\n\n  getColorMode,\n  setColorMode\n}\n\nqs.onChange(function() {\n  bus.fire('scene-ready', window.scene);\n});\n\nfunction getColorMode() {\n  let colorMode = qs.get('cm');\n  return defined(colorMode) ? colorMode : defaults.colorMode;\n}\n\nfunction setColorMode(colorMode) {\n  if (!defined(colorMode)) return;\n  qs.set({cm: colorMode});\n  currentState.cm = colorMode;\n}\n\nfunction getFadeout() {\n  let fadeout = qs.get('fo');\n  return defined(fadeout) ? fadeout : defaults.fadeout;\n}\n\nfunction setFadeout(fadeout) {\n  if (!defined(fadeout)) return;\n  qs.set({fo: fadeout});\n  currentState.fo = fadeout;\n}\n\nfunction getParticleCount() {\n  let particleCount = qs.get('pc');\n  return defined(particleCount) ? particleCount : defaults.particleCount;\n}\n\nfunction setParticleCount(particleCount) {\n  if (!defined(particleCount)) return;\n  qs.set({pc: particleCount});\n  currentState.pc = particleCount;\n}\n\nfunction getIntegrationTimeStep() {\n  let timeStep = qs.get('dt');\n  return defined(timeStep) ? timeStep : defaults.timeStep;\n}\n\nfunction setIntegrationTimeStep(dt) {\n  if (!defined(dt)) return;\n  qs.set({dt: dt})\n  currentState.dt = dt;\n}\n\nfunction getDropProbability() {\n  let dropProbability = qs.get('dp');\n  return defined(dropProbability) ? dropProbability : defaults.dropProbability;\n}\n\nfunction setDropProbability(dropProbability) {\n  if (!defined(dropProbability)) return;\n  clamp(dropProbability, 0, 1);\n  qs.set({dp: dropProbability})\n}\n\nfunction getBBox() {\n  let cx = qs.get('cx');\n  let cy = qs.get('cy');\n  let w = qs.get('w');\n  let h = qs.get('h');\n\n  let bboxDefined = defined(cx) && defined(cy) && defined(w) && defined(h);\n  if (!bboxDefined) return;\n\n  let w2 = w/2;\n  let h2 = h/2;\n  var p = 10000;\n  return {\n    minX: Math.round(p * (cx - w2))/p,\n    maxX: Math.round(p * (cx + w2))/p,\n    minY: Math.round(p * (cy - h2))/p,\n    maxY: Math.round(p * (cy + h2))/p\n  };\n}\n\nfunction saveBBox(bbox, immediate = false) {\n  if(pendingSave) {\n    clearTimeout(pendingSave);\n    pendingSave = 0;\n  }\n\n  if (immediate) saveReally(bbox);\n  else {\n    pendingSave = setTimeout(() => saveReally(bbox), 300);\n  }\n}\n\nfunction saveReally(bbox) {\n  pendingSave = 0;\n  var bbox = {\n    cx: (bbox.minX + bbox.maxX) * 0.5,\n    cy: (bbox.minY + bbox.maxY) * 0.5,\n    w: (bbox.maxX - bbox.minX),\n    h: (bbox.maxX - bbox.minX)\n  }\n\n  if (bbox.w <= 0 || bbox.h <= 0) return;\n\n  qs.set(bbox);\n\n  currentState.cx = bbox.cx;\n  currentState.cy = bbox.cy;\n  currentState.w = bbox.w;\n  currentState.h = bbox.h;\n}\n\nfunction getCode() {\n  var vfCode = qs.get('vf');\n  if (vfCode) return vfCode;\n  \n  // If we didn't get code yet, let's try read to read it from previous version\n  // of the API.\n  // TODO: Need to figure out how to develop this in backward/future compatible way.\n  var oldCode = qs.get('code');\n  if (oldCode) {\n    vfCode = wrapVectorField(oldCode);\n    // side effect - let's clean the old URL\n    delete(currentState.code);\n    qs.set('vf', vfCode);\n    return vfCode;\n  }\n\n  return defaultVectorField;\n}\n\nfunction getDefaultCode() {\n  return defaultVectorField;\n}\n\nfunction saveCode(code) {\n  qs.set({\n    vf: code\n  });\n  currentState.code = code;\n}\n\nfunction defined(number) {\n  return Number.isFinite(number);\n}\n\nfunction clamp(x, min, max) {\n  return x < min ? min :\n        (x > max) ? max : x;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/appState.js","import BaseShaderNode from './BaseShaderNode';\nimport TexturePositionNode from './TexturePositionNode';\nimport renderNodes from './renderNodes';\nimport UserDefinedVelocityFunction from './UserDefinedVelocityFunction';\nimport PanzoomTransform from './PanzoomTransform';\nimport RungeKuttaIntegrator from './RungeKuttaIntegrator';\n\nexport default class UpdatePositionGraph {\n  constructor(options) {\n    this.readStoredPosition = new TexturePositionNode(/* isDecode = */ true);\n    this.udfVelocity = new UserDefinedVelocityFunction();\n    this.integratePositions = new RungeKuttaIntegrator();\n    this.dropParticles = new RandomParticleDropper();\n    this.writeComputedPosition = new TexturePositionNode(/* isDecode = */ false);\n    this.panZoomDecode = new PanzoomTransform({decode: true});\n    this.panZoomEncode = new PanzoomTransform({decode: false});\n\n    this.colorMode = options && options.colorMode;\n  }\n\n  setCustomVectorField(velocityCode) {\n    this.udfVelocity.setNewUpdateCode(velocityCode);\n  }\n\n  getVertexShader () {\n    return `precision highp float;\n\nattribute vec2 a_pos;\nvarying vec2 v_tex_pos;\nuniform vec2 u_min;\nuniform vec2 u_max;\n\nvoid main() {\n    v_tex_pos = a_pos;\n    gl_Position = vec4(1.0 - 2.0 * a_pos, 0, 1);\n}`\n  }\n\n  getFragmentShader() {\n    var nodes = [\n      this.readStoredPosition,\n      this.dropParticles,\n      this.udfVelocity,\n      this.integratePositions, {\n        getMainBody() {\n          return `\n  vec2 newPos = pos + velocity;\n  `\n        }\n      },\n      this.writeComputedPosition\n    ];\n    return renderNodes(nodes);\n  }\n}\n\nclass RandomParticleDropper extends BaseShaderNode {\n  getDefines() {\n    return `\nuniform float u_drop_rate;\nuniform float u_rand_seed;\nuniform vec2 u_min;\nuniform vec2 u_max;\n`\n  }\n\n  getFunctions() {\n    // TODO: Ideally this node should probably depend on\n    // random number generator node, so that we don't duplicate code\n    return `\n// pseudo-random generator\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\nfloat rand(const vec2 co) {\n    float t = dot(rand_constants.xy, co);\n    return fract(sin(t) * (rand_constants.z + t));\n}\n`\n  }\n\n  getMainBody() {\n    return `\n  // a random seed to use for the particle drop\n  vec2 seed = (pos + v_tex_pos) * u_rand_seed;\n  // drop rate is a chance a particle will restart at random position, to avoid degeneration\n  float drop = step(1.0 - u_drop_rate, rand(seed));\n\n  // TODO: This can be customized to produce various emitters\n  // random_pos is in range from 0..1, we move it to the bounding box:\n  vec2 random_pos = vec2(rand(seed + 1.9), rand(seed + 8.4)) * (u_max - u_min) + u_min;\n  pos = mix(pos, random_pos, drop);\n`;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/updatePositionGraph.js","\nexport default function renderNodes(nodes) {\n  let code = [] \n\n  nodes.forEach(node => { if (node.getDefines) addToCode(node.getDefines()); });\n  nodes.forEach(node => { if (node.getFunctions) addToCode(node.getFunctions()); });\n\n  addToCode('void main() {')\n    nodes.forEach(node => { if (node.getMainBody) addToCode(node.getMainBody()); });\n  addToCode('}')\n  return code.join('\\n');\n\n  function addToCode(line) {\n    if (line) code.push(line)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/renderNodes.js","/**\n * A simple interface to compute eventual min/max \n */\nexport default function makeStatCounter() {\n  var min, max;\n\n  var api = {\n    getMin() { return min; },\n    getMax() { return max; },\n    add(x) {\n      if (x < min) min = x;\n      if (x > max) max = x;\n    },\n    reset: reset\n  };\n\n  return api;\n\n  function reset() {\n    min = Number.POSITIVE_INFINITY;\n    max = Number.NEGATIVE_INFINITY;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/makeStatCounter.js","/**\n * A shader function to decode rgba encoded color into float position.\n */\nconst code = `\nhighp float decodeFloatRGBA( vec4 v ) {\n  float a = floor(v.r * 255.0 + 0.5);\n  float b = floor(v.g * 255.0 + 0.5);\n  float c = floor(v.b * 255.0 + 0.5);\n  float d = floor(v.a * 255.0 + 0.5);\n\n  float exponent = a - 127.0;\n  float sign = 1.0 - mod(d, 2.0)*2.0;\n  float mantissa = float(a > 0.0)\n                  + b / 256.0\n                  + c / 65536.0\n                  + floor(d / 2.0) / 8388608.0;\n  return sign * mantissa * exp2(exponent);\n}\n`\n\nexport default code;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/parts/decodeFloatRGBA.js","import BaseShaderNode from './BaseShaderNode';\nimport encodeFloatRGBA from './parts/encodeFloatRGBA';\nimport decodeFloatRGBA from './parts/decodeFloatRGBA';\n\n/**\n * Reads/writes particle coordinates from/to a texture;\n */\nexport default class TexturePosition extends BaseShaderNode {\n  constructor(isDecode) {\n    super();\n\n    // When it's decoding, it must read from the texture.\n    // Otherwise it must write to the texture;\n    this.isDecode = isDecode;\n  }\n\n  getFunctions() {\n    if (this.isDecode) {\n      return `\n    ${encodeFloatRGBA}\n    ${decodeFloatRGBA}\n`\n    }\n  }\n\n  getDefines() {\n    if (this.isDecode) {\n      // TODO: How to avoid duplication and silly checks?\n    return `\nprecision highp float;\n\nuniform sampler2D u_particles_x;\nuniform sampler2D u_particles_y;\n\n// Which coordinate needs to be printed onto the texture\nuniform int u_out_coordinate;\n\nvarying vec2 v_tex_pos;\n`;\n    }\n  }\n\n  getMainBody() {\n  if (this.isDecode) {\n    return `\n   vec2 pos = vec2(\n     decodeFloatRGBA(texture2D(u_particles_x, v_tex_pos)),\n     decodeFloatRGBA(texture2D(u_particles_y, v_tex_pos))\n   );\n`\n    }\n    return `\n    if (u_out_coordinate == 0) gl_FragColor = encodeFloatRGBA(newPos.x);\n    else if (u_out_coordinate == 1) gl_FragColor = encodeFloatRGBA(newPos.y);\n    else if (u_out_coordinate == 6) gl_FragColor = encodeFloatRGBA(get_velocity(pos).x);\n    else if (u_out_coordinate == 7) gl_FragColor = encodeFloatRGBA(get_velocity(pos).y);\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/TexturePositionNode.js","/**\n * The main entry point to the application.\n * \n * It is initialized immediately with webgl, and puts\n * vue.js app loading into the future.\n */\nimport initScene from './scene';\nimport bus from './bus';\n\nvar canvas = document.getElementById('scene');\n// Canvas may not be available in test run\nif (canvas) initVectorFieldApp(canvas);\n\n// Tell webpack to split bundle, and download settings UI later.\nrequire.ensure('@/vueApp.js', () => {\n  // Settings UI is ready, initialize vue.js application\n  require('@/vueApp.js');\n});\n\nfunction initVectorFieldApp(canvas) {\n  canvas.width = window.innerWidth;\n  canvas.height =  window.innerHeight;\n  var ctxOptions = {antialiasing: false };\n\n  var gl = canvas.getContext('webgl', ctxOptions) ||\n          canvas.getContext('experimental-webgl', ctxOptions);\n\n  if (gl) {\n    window.webGLEnabled = true;\n    var scene = initScene(gl);\n    scene.start();\n    // TODO: too bad to plop stuff onto window?\n    window.scene = scene;\n  } else {\n    window.webGLEnabled = false;\n  }\n}\n\nvar CCapture;\nvar currentCapturer;\n\nwindow.startRecord = startRecord;\nwindow.isRecording = false;\n\nfunction startRecord(url) {\n  if (!CCapture) {\n    require.ensure('ccapture.js', () => {\n      CCapture = require('ccapture.js');\n      window.stopRecord = stopRecord;\n      startRecord(url);\n    });\n\n    return;\n  }\n\n  if (currentCapturer) {\n    currentCapturer.stop();\n  }\n\n  if (!ffmpegScriptLoaded()) {\n    var ffmpegServer = document.createElement('script');\n    ffmpegServer.setAttribute('src', url || 'http://localhost:8080/ffmpegserver/ffmpegserver.js');\n    ffmpegServer.onload = () => startRecord(url);\n    document.head.appendChild(ffmpegServer);\n    return;\n  }\n\n  currentCapturer = new CCapture( {\n      format: 'ffmpegserver',\n      framerate: 60,\n      verbose: true,\n      name: \"fieldplay\",\n      extension: \".mp4\",\n      codec: \"mpeg4\",\n      ffmpegArguments: [\n        \"-b:v\", \"12M\",\n      ],\n  });\n\n  window.isRecording = true;\n  currentCapturer.start();\n  bus.fire('start-record', currentCapturer)\n}\n\nfunction ffmpegScriptLoaded() {\n  return typeof FFMpegServer !== 'undefined'\n}\n\nfunction stopRecord() {\n  window.isRecording = false;\n  bus.fire('stop-record', currentCapturer)\n  currentCapturer.stop();\n  currentCapturer.save();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/nativeMain.js","const code = `\nvec4 encodeFloatRGBA(highp float val) {\n    if (val == 0.0) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n    }\n\n    float mag = abs(val);\n    float exponent = floor(log2(mag));\n    // Correct log2 approximation errors.\n    exponent += float(exp2(exponent) <= mag / 2.0);\n    exponent -= float(exp2(exponent) > mag);\n\n    float mantissa;\n    if (exponent > 100.0) {\n        // Not sure why this needs to be done in two steps for the largest float to work.\n        // Best guess is the optimizer rewriting '/ exp2(e)' into '* exp2(-e)',\n        // but exp2(-128.0) is too small to represent.\n        mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\n    } else {\n        mantissa = mag / float(exp2(exponent)) - 1.0;\n    }\n\n    float a = exponent + 127.0;\n    mantissa *= 256.0;\n    float b = floor(mantissa);\n    mantissa -= b;\n    mantissa *= 256.0;\n    float c = floor(mantissa);\n    mantissa -= c;\n    mantissa *= 128.0;\n    float d = floor(mantissa) * 2.0 + float(val < 0.0);\n    return vec4(a, b, c, d) / 255.0;\n}\n`\n\nexport default code;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/parts/encodeFloatRGBA.js","import decodeFloatRGBA from './parts/decodeFloatRGBA';\nimport shaderBasedColor from './shaderBasedColor';\nimport ColorModes from '../programs/colorModes';\n\n// TODO: this duplicates code from texture position.\nexport default class DrawParticleGraph {\n  constructor(colorMode) {\n    this.colorMode = colorMode;\n    this.isUniformColor = (colorMode === ColorModes.UNIFORM);\n  }\n\n  getFragmentShader() {\n    let variables = [];\n    var mainBody = [];\n\n    if (this.isUniformColor) {\n      // uniform color comes via uniform setting\n      variables.push('uniform vec4 u_particle_color;');\n      mainBody.push('gl_FragColor = u_particle_color;');\n    } else {\n      // Otherwise it comes from a vertex shader\n      variables.push('varying vec4 v_particle_color;');\n      mainBody.push('gl_FragColor = v_particle_color;');\n    }\n    return `precision highp float;\n${variables.join('\\n')}\n\nvoid main() {\n${mainBody.join('\\n')}\n}`\n  }\n\n  getVertexShader(vfCode) {\n    let decodePositions = textureBasedPosition();\n    let colorParts = this.isUniformColor ? uniformColor() : shaderBasedColor(this.colorMode, vfCode);\n    let methods = []\n    addMethods(decodePositions, methods);\n    addMethods(colorParts, methods);\n    let main = [];\n    addMain(decodePositions, main);\n    addMain(colorParts, main);\n\n    return `precision highp float;\nattribute float a_index;\nuniform float u_particles_res;\nuniform vec2 u_min;\nuniform vec2 u_max;\n\n${decodePositions.getVariables() || ''}\n${colorParts.getVariables() || ''}\n\n${decodeFloatRGBA}\n\n${methods.join('\\n')}\n\nvoid main() {\n  vec2 txPos = vec2(\n        fract(a_index / u_particles_res),\n        floor(a_index / u_particles_res) / u_particles_res);\n  gl_PointSize = 1.0;\n\n${main.join('\\n')}\n\n  vec2 du = (u_max - u_min);\n  v_particle_pos = (v_particle_pos - u_min)/du;\n  gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);\n}`\n  }\n}\n\nfunction addMethods(producer, array) {\n  if (producer.getMethods) {\n    array.push(producer.getMethods());\n  }\n}\nfunction addMain(producer, array) {\n  if (producer.getMain) {\n    array.push(producer.getMain());\n  }\n}\n\nfunction uniformColor() {\n  return {\n    getVariables() {},\n    getMain() {}\n  }\n}\n\nfunction textureBasedPosition() {\n  return {\n    getVariables,\n    getMain\n  }\n\n  function getVariables() {\n    return `\nuniform sampler2D u_particles_x;\nuniform sampler2D u_particles_y;\n    `\n  }\n\n  function getMain() {\n    return `\n  vec2 v_particle_pos = vec2(\n    decodeFloatRGBA(texture2D(u_particles_x, txPos)),\n    decodeFloatRGBA(texture2D(u_particles_y, txPos))\n  );\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/DrawParticleGraph.js","export function getInputUniforms() {\n  return `uniform sampler2D input0;\nuniform sampler2D input1;`;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/customInput.js","import UserDefinedVelocityFunction from './UserDefinedVelocityFunction';\nimport RungeKuttaIntegrator from './RungeKuttaIntegrator';\nimport ColorModes from '../programs/colorModes';\n\nexport default function shaderBasedColor(colorMode, vfCode) {\n  var udf = new UserDefinedVelocityFunction(vfCode);\n  var integrate = new RungeKuttaIntegrator();\n\n  return {\n    getVariables,\n    getMain,\n    getMethods\n  }\n\n  function getVariables() {\n    return `\nuniform vec2 u_velocity_range;\nvarying vec4 v_particle_color;\n${udf.getDefines()}\n${integrate.getDefines()}\n`\n  }\n\n  function getMethods() {\n    return `\n// https://github.com/hughsk/glsl-hsv2rgb\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n${udf.getFunctions()}\n${integrate.getFunctions()}\n`\n  }\n\n  function getMain() {\n    // TODO: This needs to be refactored. I don't like code duplication.\n    let setParticleColor;\n    if (colorMode === ColorModes.VELOCITY) {\n      setParticleColor = `\n  float speed = (length(velocity) - u_velocity_range[0])/(u_velocity_range[1] - u_velocity_range[0]);\n  v_particle_color = vec4(hsv2rgb(vec3(0.05 + (1. - speed) * 0.5, 0.9, 1.)), 1.0);\n`\n    } else {\n      setParticleColor = `\n  float speed = (atan(velocity.y, velocity.x) + PI)/(2.0 * PI);\n  v_particle_color = vec4(hsv2rgb(vec3(speed, 0.9, 1.)), 1.0);\n`;\n}\n\n    return `\nvec2 velocity = get_velocity(v_particle_pos);\n${setParticleColor}\n`\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/shaderBasedColor.js","import bus from '../bus';\nimport appState from '../appState';\nimport getParsedVectorFieldFunction from './getParsedVectorFieldFunction';\n\n/**\n * A text editor state for the vector field equation. Manages vector field\n * program compilation and error reporting state.\n *\n * @param {Object} drawProgram \n */\nexport default function createVectorFieldEditorState(drawProgram) {\n  bus.on('glsl-parser-ready', parseCode);\n  var currentVectorFieldVersion = 0;\n\n  // What is the current code?\n  var currentVectorFieldCode = appState.getCode();\n\n  // For delayed parsing result verification (e.g. when vue is loaded it\n  // can request us to see if there were any errors)\n  var parserResult;\n\n  loadCodeFromAppState();\n\n  var api = {\n    getCode,\n    setCode,\n    dispose,\n\n    // These properties are for UI only\n    code: currentVectorFieldCode,\n    error: '',\n    errorDetail: '',\n    isFloatError: false \n  };\n\n  return api;\n\n  function dispose() {\n    bus.off('glsl-parser-ready', parseCode);\n  }\n\n  function getCode() {\n    return appState.getCode();\n  }\n\n  function setCode(vectorFieldCode) {\n    if (vectorFieldCode === currentVectorFieldCode) {\n      // If field hasn't changed, let's make sure that there was no previous\n      // error\n      if (parserResult && parserResult.error) {\n        // And if there was error, let's revalidate code:\n        parseCode();\n      }\n      return;\n    } \n\n    trySetNewCode(vectorFieldCode).then((result) => {\n      if (result.cancelled) return;\n\n      if (result && result.error) {\n        updateErrorInfo(result.error);\n        return result;\n      }\n\n      currentVectorFieldCode = vectorFieldCode;\n      api.code = vectorFieldCode;\n      appState.saveCode(vectorFieldCode);\n    });\n  }\n\n  function updateErrorInfo(parserResult) {\n    if (parserResult && parserResult.error) {\n      api.error = parserResult.error;\n      api.errorDetail = parserResult.errorDetail;\n      api.isFloatError = parserResult.isFloatError;\n    } else {\n      api.error = '';\n      api.errorDetail = '';\n      api.isFloatError = false;\n    }\n  }\n\n  function loadCodeFromAppState() {\n    let persistedCode = appState.getCode();\n    if (persistedCode) {\n      trySetNewCode(persistedCode).then(result => {\n        if (!result.error) return; // This means we set correctly;\n        // If we get here - something went wrong. see the console\n        console.error('Failed to restore previous vector field: ', result.error);\n        // Let's use default vector field\n        trySetNewCode(appState.getDefaultCode());\n      });\n    } else {\n      // we want a default vector field\n      trySetNewCode(appState.getDefaultCode());\n    }\n  }\n\n  function parseCode(customCode) {\n    return getParsedVectorFieldFunction(customCode || currentVectorFieldCode)\n      .then(currentResult => {\n        parserResult = currentResult\n        updateErrorInfo(parserResult.error);\n        return parserResult;\n      });\n  }\n\n  function trySetNewCode(vectorFieldCode) {\n    currentVectorFieldVersion += 1;\n    var capturedVersion = currentVectorFieldVersion;\n    // step 1 - run through parser\n    return parseCode(vectorFieldCode).then(parserResult => {\n      if (capturedVersion !== currentVectorFieldVersion) {\n        parserResult.cancelled = true;\n        // a newer request was issued. Ignore these results.\n        return parserResult;\n      }\n\n      if (parserResult.error) {\n        return parserResult;\n      }\n      // step 2 - run through real webgl\n      try {\n        drawProgram.updateCode(parserResult.code);\n        return parserResult;\n      } catch (e) {\n        return {\n          error: {\n            error: e.message\n          }\n        }\n      }\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/editor/vectorFieldState.js","/**\n * Wraps a simple vector field string into our default shader code.\n * @param {String} field \n */\nexport default function wrapVectorField(field) {\n  return `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  ${field}\n\n  return v;\n}`\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/wrapVectorField.js","/**\n * A simple message bus. Facilitates uncoupled communication between\n * components of fieldplay.\n */\nvar eventify = require('ngraph.events');\n\nmodule.exports = eventify({});\n\n\n// WEBPACK FOOTER //\n// ./src/lib/bus.js","// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\nexport default function loadTexture(gl, url) {\n  var resolveTexture, rejectTexture;\n\n  var image = new Image();\n  image.crossOrigin = '';\n\n  image.onload = bindTexture;\n  image.onerror = reportError;\n  image.src = url;\n\n  return new Promise((resolve, reject) => {\n    resolveTexture = resolve;\n    rejectTexture = reject;\n  });\n\n  function reportError(err) {\n    rejectTexture(err);\n  }\n\n  function bindTexture() {\n    var texture = gl.createTexture();\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var srcFormat = gl.RGBA;\n    var srcType = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n                  srcFormat, srcType, image);\n\n    if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n       gl.generateMipmap(gl.TEXTURE_2D);\n    } else {\n       gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n       gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n       gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    resolveTexture(texture);\n  }\n}\n\nfunction isPowerOf2(value) {\n  return (value & (value - 1)) == 0;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/inputs/loadTexture.js","import util from '../gl-utils';\nimport bus from '../bus';\nimport {decodeFloatRGBA} from '../utils/floatPacking';\nimport makeStatCounter from '../utils/makeStatCounter';\n\nconst OUT_V_X = 6;\nconst OUT_V_Y = 7;\n/**\n * This program allows to change color of each particle. It works by\n * reading current velocities into a texture from the framebuffer. Once\n * velocities are read, it checks velocity scale and passes it to a draw program.\n */\nexport default function colorProgram(ctx) {\n  var speedNeedsUpdate = true;\n  var {gl} = ctx;\n  var velocity_y_texture, velocity_x_texture;\n  var particleStateResolution;\n  var pendingSpeedUpdate;\n  var numParticles;\n  var velocityCounter = makeStatCounter();\n  var velocity_x;\n  var velocity_y;\n\n  listenToEvents();\n\n  return {\n    updateCode,\n    updateParticlesPositions,\n    updateParticlesCount,\n    setColorMinMax,\n    requestSpeedUpdate,\n    dispose\n  };\n\n  function listenToEvents() {\n    bus.on('integration-timestep-changed', requestSpeedUpdate);\n    bus.on('bbox-change', requestSpeedUpdate);\n  }\n\n  function dispose() {\n    bus.off('integration-timestep-changed', requestSpeedUpdate);\n    bus.off('bbox-change', requestSpeedUpdate);\n    disposeTextures();\n  }\n\n  function disposeTextures() {\n    if (velocity_x_texture) gl.deleteTexture(velocity_x_texture);\n    if (velocity_y_texture) gl.deleteTexture(velocity_y_texture);\n  }\n\n  function requestSpeedUpdate() {\n    if (pendingSpeedUpdate) clearTimeout(pendingSpeedUpdate);\n    pendingSpeedUpdate = setTimeout(() => {\n      speedNeedsUpdate = true;\n      pendingSpeedUpdate = 0;\n    }, 50);\n  }\n\n  function setColorMinMax(program) {\n    gl.uniform2f(program.u_velocity_range, velocityCounter.getMin(), velocityCounter.getMax());\n  }\n\n  function updateParticlesCount() {\n    disposeTextures();\n\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n\n    velocity_x = new Uint8Array(numParticles * 4);\n    velocity_y = new Uint8Array(numParticles * 4);\n    velocity_x_texture = util.createTexture(gl, gl.NEAREST, velocity_x, particleStateResolution, particleStateResolution);\n    velocity_y_texture = util.createTexture(gl, gl.NEAREST, velocity_y, particleStateResolution, particleStateResolution);\n\n    requestSpeedUpdate();\n  }\n\n  function updateCode() {\n    requestSpeedUpdate();\n  }\n\n  function updateParticlesPositions(program) {\n    if (!speedNeedsUpdate || !velocity_x || !velocity_y) return;\n    speedNeedsUpdate = false;\n\n    // We assume this is called from update position program\n    util.bindFramebuffer(gl, ctx.framebuffer, velocity_x_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_X);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    util.bindFramebuffer(gl, ctx.framebuffer, velocity_y_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_Y);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    updateMinMax();\n  }\n\n  function updateMinMax() {\n    velocityCounter.reset();\n    // TODO: Do I want this to be async?\n    for(var i = 0; i < velocity_y.length; i+=4) {\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      var v = Math.sqrt(vx * vx + vy * vy);\n      velocityCounter.add(v);\n    }\n  }\n}\n\nfunction readFloat(buffer, offset) {\n    return decodeFloatRGBA(\n      buffer[offset + 0],\n      buffer[offset + 1],\n      buffer[offset + 2],\n      buffer[offset + 3]\n    );\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/colorProgram.js","/**\n * Renders computed state onto the screen.\n */\nimport glUtils from '../gl-utils';\n\nconst NO_TRANSFORM = {dx: 0, dy: 0, scale: 1};\n\nexport default function makeScreenProgram(ctx) {\n  var {gl, canvasRect} = ctx;\n\n  var screenTexture, backgroundTexture;\n  var boundBoxTextureTransform = {dx: 0, dy: 0, scale: 1};\n  var lastRenderedBoundingBox = null;\n\n  // TODO: Allow customization? Last time I tried, I didn't like it too much.\n  // It was very easy to screw up the design, and the tool looked ugly :-/\n  let backgroundColor = { r: 19/255, g: 41/255, b: 79/255, a: 1 };\n\n  updateScreenTextures();\n  var screenProgram = glUtils.createProgram(gl, getScreenVertexShader(), getScreenFragmentShader());\n  \n  var api = {\n    fadeOutLastFrame,\n    renderCurrentScreen,\n    updateScreenTextures,\n\n    boundingBoxUpdated: false\n  };\n\n  return api;\n  \n  function fadeOutLastFrame() {\n    // render to the frame buffer\n    glUtils.bindFramebuffer(gl, ctx.framebuffer, screenTexture);\n    gl.viewport(0, 0, canvasRect.width, canvasRect.height);\n\n    if (api.boundingBoxUpdated && lastRenderedBoundingBox) {\n      // We move the back texture, relative to the bounding box change. This eliminates\n      // particle train artifacts, though, not all of them: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n      // If you know how to improve this - please let me know.\n      boundBoxTextureTransform.dx = -(ctx.bbox.minX - lastRenderedBoundingBox.minX)/(ctx.bbox.maxX - ctx.bbox.minX);\n      boundBoxTextureTransform.dy = -(ctx.bbox.minY - lastRenderedBoundingBox.minY)/(ctx.bbox.maxY - ctx.bbox.minY);\n      boundBoxTextureTransform.scale = (ctx.bbox.maxX - ctx.bbox.minX) / (lastRenderedBoundingBox.maxX - lastRenderedBoundingBox.minX);\n      drawTexture(backgroundTexture, ctx.fadeOpacity, boundBoxTextureTransform);\n    } else {\n      drawTexture(backgroundTexture, ctx.fadeOpacity, NO_TRANSFORM)\n    }\n  }\n\n  function renderCurrentScreen() {\n    glUtils.bindFramebuffer(gl, null);\n\n    saveLastBbox();\n\n    gl.enable(gl.BLEND); \n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    drawTexture(screenTexture, 1.0, NO_TRANSFORM);\n    gl.disable(gl.BLEND);\n\n    var temp = backgroundTexture;\n    backgroundTexture = screenTexture;\n    screenTexture = temp;\n\n    api.boundingBoxUpdated = false;\n    if (window.audioTexture) {\n      drawTexture(window.audioTexture, 1.0, NO_TRANSFORM);\n    }\n  }\n\n  function updateScreenTextures() {\n    var {width, height} = canvasRect;\n    var emptyPixels = new Uint8Array(width * height * 4);\n    if (screenTexture) {\n      gl.deleteTexture(screenTexture);\n    }\n    if (backgroundTexture) {\n      gl.deleteTexture(backgroundTexture);\n    }\n\n    screenTexture = glUtils.createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n    backgroundTexture = glUtils.createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n  }\n\n  function saveLastBbox() {\n    if (!lastRenderedBoundingBox) {\n      lastRenderedBoundingBox = {\n        minX: ctx.bbox.minX,\n        minY: ctx.bbox.minY,\n        maxX: ctx.bbox.maxX,\n        maxY: ctx.bbox.maxY\n      }\n\n      return;\n    } \n\n    lastRenderedBoundingBox.minX = ctx.bbox.minX;\n    lastRenderedBoundingBox.minY = ctx.bbox.minY;\n    lastRenderedBoundingBox.maxX = ctx.bbox.maxX;\n    lastRenderedBoundingBox.maxY = ctx.bbox.maxY;\n  }\n\n  function drawTexture(texture, opacity, textureTransform) {\n    var program = screenProgram;\n    gl.useProgram(program.program);\n    glUtils.bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n\n    // TODO: This index is very fragile. I need to find a way\n    glUtils.bindTexture(gl, texture, ctx.screenTextureUnit);\n    gl.uniform1i(program.u_screen, ctx.screenTextureUnit);\n\n    gl.uniform1f(program.u_opacity_border, 0.02);\n    gl.uniform1f(program.u_opacity, opacity);\n    gl.uniform3f(program.u_transform, textureTransform.dx, textureTransform.dy, textureTransform.scale);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n}\n\nfunction getScreenVertexShader() {\n  return `// screen program\nprecision highp float;\n\nattribute vec2 a_pos;\nvarying vec2 v_tex_pos;\nuniform vec3 u_transform;\n\nvoid main() {\n    v_tex_pos = a_pos;\n    vec2 pos = a_pos;\n\n    // This transformation tries to move texture (raster) to the approximate position\n    // of particles on the current frame. This is needed to avoid rendering artifacts\n    // during pan/zoom: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n\n    // PS: I must admit, I wrote this formula through sweat and tears, and\n    // I still have no idea why I don't need to apply (pos.y - 0.5) to Y coordinate.\n    // Is it because I use aspect ratio for bounding box?\n    pos.x = (pos.x - 0.5) / u_transform.z - u_transform.x + 0.5 * u_transform.z;\n    pos.y = pos.y / u_transform.z + u_transform.y;\n\n    pos = 1.0 - 2.0 * pos;\n    gl_Position = vec4(pos, 0, 1);\n}`\n}\n\nfunction getScreenFragmentShader() {\n  return `precision highp float;\nuniform sampler2D u_screen;\nuniform float u_opacity;\nuniform float u_opacity_border;\n\nvarying vec2 v_tex_pos;\n\nvoid main() {\n  vec2 p = 1.0 - v_tex_pos;\n  vec4 color = texture2D(u_screen, p);\n\n  // For some reason particles near border leave trace when we translate the texture\n  // This is my dirty hack to fix it: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n  if (p.x < u_opacity_border || p.x > 1. - u_opacity_border || p.y < u_opacity_border || p.y > 1. - u_opacity_border) {\n    gl_FragColor = vec4(0.);\n  } else {\n    // opacity fade out even with a value close to 0.0\n    gl_FragColor = vec4(floor(255.0 * color * u_opacity) / 255.0);\n  }\n}`\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/screenProgram.js","import BaseShaderNode from './BaseShaderNode';\n\nexport default class RungeKuttaIntegrator extends BaseShaderNode {\n  constructor () {\n    super();\n  }\n\n  getDefines() {\n    return `\nuniform float u_h;\n`\n  }\n\n  getFunctions() {\n    return `\nvec2 rk4(const vec2 point) {\n  vec2 k1 = get_velocity( point );\n  vec2 k2 = get_velocity( point + k1 * u_h * 0.5);\n  vec2 k3 = get_velocity( point + k2 * u_h * 0.5);\n  vec2 k4 = get_velocity( point + k3 * u_h);\n\n  return k1 * u_h / 6. + k2 * u_h/3. + k3 * u_h/3. + k4 * u_h/6.;\n}`\n  }\n\n  getMainBody() {\n    return `\n  vec2 velocity = rk4(pos);\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/RungeKuttaIntegrator.js","var loadedLinks = new Map(); // from link to response\nimport request from '../utils/request';\n\nexport default function fetchGLSL(link) {\n  if (!link) return Promise.reject('Missing link')\n  var trimmed = link.trim();\n  if (!trimmed) return Promise.reject('Missing link');\n\n  let cachedResponse = loadedLinks.get(trimmed)\n  if (cachedResponse) return Promise.resolve(cachedResponse);\n\n  return request(link).then(code => {\n    loadedLinks.set(link, code);\n    return code;\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/editor/fetchGLSL.js","/**\n * Collection of input bindings. Individual program works with this collection\n * to command it update texture bindings.\n */\nexport default function createInputCollection() {\n  var boundInputs = new Map() \n  var currentProgram;\n  return {\n    updateBindings,\n    bindInput,\n  }\n\n  function bindInput(inputIndex, inputBinding) {\n    var prevBinding = boundInputs.get(inputIndex);\n    if (prevBinding) {\n      prevBinding.dispose();\n    }\n    boundInputs.set(inputIndex, inputBinding);\n  }\n\n  function updateBindings(program) {\n    currentProgram = program;\n    boundInputs.forEach(updateInputBinding);\n  }\n\n  function updateInputBinding(input, inputIndex) {\n    input.updateBinding(currentProgram, inputIndex);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/inputs/inputCollection.js","/**\n * Enables panning and zooming of canvas with vector field\n * \n * @param {HTMLCanvasElement} canvas that needs to be panned and zoomed\n * @param {*} updateBoundingBoxCallback callback that is called when vector field bounding box\n * needs to be updated\n */\nexport default function wglPanZoom(canvas, updateBoundingBoxCallback) {\n  var lastDx = 0;\n  var lastDy = 0;\n  var lastScale = 1;\n\n  // We need to be moved at least this many pixels in order to let\n  // transform update bounding box.\n  var transformThreshold = 2.1;\n\n  return {\n    applyTransform(newTransform) {\n      var dx = newTransform.x;\n      var dy = newTransform.y; \n\n      let dScale = (lastScale - newTransform.scale);\n      if (dScale === 0 && \n          Math.abs(dx - lastDx) < transformThreshold &&\n          Math.abs(dy - lastDy) < transformThreshold) {\n          // Wait for larger transform\n          return; \n      }\n\n      lastDx = dx;\n      lastDy = dy;\n      lastScale = newTransform.scale;\n\n      updateBoundingBoxCallback(newTransform)\n    },\n\n    getOwner() {\n      return canvas\n    }\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/wglPanZoom.js","/**\n * This module allows to pass mouse coordinates down to the shader. Coordinates\n * will be available as `vec4 cursor` variable, where `xy` are the last\n * click position, and `zw` are the last hover position.\n * \n * Note: On Touch devices hover is the same click.\n * \n * Hopefully this will enables easier exploration\n */\nexport default function createCursorUpdater(ctx) {\n  var {canvasRect, bbox} = ctx;\n\n  window.addEventListener('mousemove', onMouseMove, true);\n  window.addEventListener('mousedown', onMouseClick, true);\n  window.addEventListener('touchstart', onTouchStart, true);\n  window.addEventListener('touchmove', onTouchMove, true);\n\n  return {\n    dispose\n  }\n\n  function dispose() {\n    window.removeEventListener('mousemove', onMouseMove, true);\n    window.removeEventListener('mousedown', onMouseClick, true);\n    window.removeEventListener('touchstart', onTouchStart, true);\n    window.removeEventListener('touchmove', onTouchMove, true);\n  }\n\n  function onTouchStart(e) {\n    var firstTouch = e.touches[0];\n    if (!firstTouch) return;\n\n    setClick(firstTouch.clientX, firstTouch.clientY);\n    setHover(firstTouch.clientX, firstTouch.clientY);\n  }\n\n  function onTouchMove(e) {\n    var firstTouch = e.touches[0];\n    if (!firstTouch) return;\n    setHover(firstTouch.clientX, firstTouch.clientY);\n  }\n\n  function onMouseMove(e) { setHover(e.clientX, e.clientY); }\n\n  function onMouseClick(e) { setClick(e.clientX, e.clientY); }\n\n  function setHover(clientX, clientY) {\n    ctx.cursor.hoverX = getSceneXFromClientX(clientX);\n    ctx.cursor.hoverY = getSceneYFromClientY(clientY);\n  }\n\n  function setClick(clientX, clientY) {\n    ctx.cursor.clickX = getSceneXFromClientX(clientX);\n    ctx.cursor.clickY = getSceneYFromClientY(clientY);\n  }\n\n  function getSceneXFromClientX(clientX) {\n    var dx = (clientX - canvasRect.left)/canvasRect.width;\n    return (bbox.maxX - bbox.minX) * dx + bbox.minX;\n  }\n\n  function getSceneYFromClientY(clientY) {\n    var dy = 1. - ((clientY - canvasRect.top)/canvasRect.height);\n    return (bbox.minY - bbox.maxY) * dy + bbox.maxY;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/cursorUpdater.js","import util from '../gl-utils';\nimport DrawParticleGraph from '../shaderGraph/DrawParticleGraph';\nimport makeUpdatePositionProgram from './updatePositionProgram';\nimport { encodeFloatRGBA } from '../utils/floatPacking.js';\nimport config from '../config';\nimport createAudioProgram from './audioProgram';\n\n/**\n * This program manages particles life-cycle. It updates particles positions\n * and initiates drawing them on screen.\n * \n * @param {Object} ctx rendering context. Holds WebGL state\n */\nexport default function drawParticlesProgram(ctx) {\n  var gl = ctx.gl;\n\n  var particleStateResolution, particleIndexBuffer;\n  var numParticles;\n\n  var currentVectorField = '';\n  var updatePositionProgram = makeUpdatePositionProgram(ctx);\n  var audioProgram;\n\n  var drawProgram;\n  initPrograms();\n\n  return {\n    updateParticlesCount,\n    updateParticlesPositions,\n    drawParticles,\n    updateCode,\n    updateColorMode\n  }\n\n  function initPrograms() {\n    // need to update the draw graph because color mode shader has changed.\n    initDrawProgram();\n\n    if (config.isAudioEnabled) {\n      if (audioProgram) audioProgram.dispose();\n      audioProgram = createAudioProgram(ctx);\n    }\n  }\n\n  function initDrawProgram() {\n    if (drawProgram) drawProgram.unload();\n\n    const drawGraph = new DrawParticleGraph(ctx.colorMode);\n    drawProgram = util.createProgram(gl, drawGraph.getVertexShader(currentVectorField), drawGraph.getFragmentShader());\n  }\n\n  function updateParticlesPositions() {\n    if (!currentVectorField) return;\n\n    ctx.frame += 1;\n    ctx.frameSeed = Math.random();\n\n    // TODO: Remove this.\n    if (audioProgram) audioProgram.updateTextures();\n\n    updatePositionProgram.updateParticlesPositions();\n  }\n\n  function updateColorMode() {\n    initDrawProgram();\n  }\n\n  function updateCode(vfCode) {\n    ctx.frame = 0;\n    currentVectorField = vfCode;\n    updatePositionProgram.updateCode(vfCode);\n\n    initDrawProgram();\n  }\n\n  function updateParticlesCount() {\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n    var particleIndices = new Float32Array(numParticles);\n    var particleStateX = new Uint8Array(numParticles * 4);\n    var particleStateY = new Uint8Array(numParticles * 4);\n    \n    console.log(\"Num. of particles: \"+numParticles);\n\n    var minX = ctx.bbox.minX; var minY = ctx.bbox.minY;\n    var width = ctx.bbox.maxX - minX;\n    var height = ctx.bbox.maxY - minY;\n    for (var i = 0; i < numParticles; i++) {\n      encodeFloatRGBA((Math.random()) * width + minX, particleStateX, i * 4); // randomize the initial particle positions\n      encodeFloatRGBA((Math.random()) * height + minY, particleStateY, i * 4); // randomize the initial particle positions\n\n      particleIndices[i] = i;\n    }\n\n    if (particleIndexBuffer) gl.deleteBuffer(particleIndexBuffer);\n    particleIndexBuffer = util.createBuffer(gl, particleIndices);\n\n    updatePositionProgram.updateParticlesCount(particleStateX, particleStateY);\n  }\n\n  function drawParticles() {\n    if (!currentVectorField) return;\n\n    var program = drawProgram;\n    gl.useProgram(program.program);\n  \n    util.bindAttribute(gl, particleIndexBuffer, program.a_index, 1);\n    \n    updatePositionProgram.prepareToDraw(program);\n    ctx.inputs.updateBindings(program);\n  \n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    gl.uniform1f(program.u_particles_res, particleStateResolution);\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n  \n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n    gl.drawArrays(gl.POINTS, 0, numParticles); \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/drawParticlesProgram.js","/**\n * A wrapper over collection of textures. Can be used to represent\n * individual textures for every dimension.\n */\nimport glUtil from '../gl-utils';\n\nexport default function textureCollection(gl, dimensions, particleStateResolution) {\n  var textures = dimensions.map((d, index) => {\n    var textureInfo = {\n      texture: glUtil.createTexture(gl, gl.NEAREST, d.particleState, particleStateResolution, particleStateResolution),\n      index: index,\n      name: d.name\n    }\n\n    return textureInfo;\n  })\n\n  return {\n    dispose,\n    bindTextures,\n    assignProgramUniforms,\n    length: dimensions.length,\n    textures,\n    get(i) { return textures[i]; }\n  }\n\n  function assignProgramUniforms(program) {\n    textures.forEach(tInfo => {\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n\n  function dispose() {\n    textures.forEach(tInfo => gl.deleteTexture(tInfo.texture));\n  }\n\n  function bindTextures(gl, program) {\n    textures.forEach((tInfo) => {\n      glUtil.bindTexture(gl, tInfo.texture, tInfo.index);\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/textureCollection.js","import appState from './appState';\n\nconst defaultConfig = {\n  // I need to flash our more details before making any promises.\n  isAudioEnabled: false,\n  // this allows to render an overlay grid with vectors. Enable it\n  // and drag the scene a little bit.\n  vectorLinesEnabled: false,\n\n  // Starting from which texture unit we can bind custom inputs?\n  FREE_TEXTURE_UNIT: 4,\n\n  // whether input bindings should be visible\n  showBindings: appState.getQS().get('showBindings') || false\n}\n\nexport default defaultConfig;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/config.js","import fetchGLSL from './fetchGLSL.js';\n\nvar pragmaInclude = '#include ';\nvar nullCode = { code: '' }\n\n/**\n * Naively parses glsl code and tries to replace all `#pragma` statements\n * with empty string. Gives structured collection of pragma statements back\n * \n * @param {String} code \n */\nexport default function makePragmaParser(code) {\n  if (!code) return new Promise(resolve => resolve(nullCode));\n\n  var parsedLines = processLineByLine(code);\n  if (parsedLines.pending.length > 0) {\n    return Promise.all(parsedLines.pending).then(() => parsedLines)\n      .catch(error => { return {error: {error}}; });\n  }\n\n  return new Promise(resolve => resolve(parsedLines));\n}\n\nfunction processLineByLine(code) {\n  var pending = []\n  var lines = code.split('\\n');\n  var outputLines = [];\n  var currentIndex = 0;\n  lines.forEach((line, index) => {\n    currentIndex = index;\n    if (line && line[0] === '#') {\n      outputLines.push('');\n      processPragma(line);\n    } else {\n      outputLines.push(line);\n    }\n  });\n\n  return {\n    getCode,\n    pending\n  };\n\n  function getCode() {\n    return outputLines.join('\\n');\n  }\n\n  function processPragma(line) {\n    if (line.indexOf(pragmaInclude) === 0) {\n      var include = line.substr(pragmaInclude.length);\n      var insertIndex = currentIndex;\n      pending.push(fetchGLSL(include).then(code => {\n        outputLines[insertIndex] = code\n      }))\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/editor/pragmaParser.js","import BaseShaderNode from './BaseShaderNode';\n\nexport default class PanzoomTransform extends BaseShaderNode {\n  constructor(config) {\n    super();\n    // decode is used when we move particle read from the texture\n    // otherwise we write particle to texture and need to reverse transform\n    this.decode = config && config.decode;\n    this.srcPosName = (config && config.posName) || 'pos';\n  }\n\n  getDefines() {\n    if (this.decode) {\n      // TODO: Need to figure out how to not duplicate this.\n    return `\n  uniform vec2 u_min;\n  uniform vec2 u_max;\n`;\n    }\n  }\n\n  getMainBody() {\n    if (this.decode) {\n      return `\n  // move particle position according to current transform\n  vec2 du = (u_max - u_min);\n  pos.x = ${this.srcPosName}.x * du.x + u_min.x;\n  pos.y = ${this.srcPosName}.y * du.y + u_min.y;\n`\n    }\n    return `\n  pos.x = (${this.srcPosName}.x - u_min.x)/du.x;\n  pos.y = (${this.srcPosName}.y - u_min.y)/du.y;\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/PanzoomTransform.js"],"sourceRoot":""}